<?xml version="1.0" encoding="utf-8"?>
<mscorlib>
  <Type Full_Name="Microsoft.Win32.Registry">
    <Properties />
    <Methods>
      <Method Name="GetValue" Return_type="System.Object">
        <Parameters>
          <Parameter Name="keyName" Type="System.String" />
          <Parameter Name="valueName" Type="System.String" />
          <Parameter Name="defaultValue" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="SetValue" Return_type="System.Void">
        <Parameters>
          <Parameter Name="keyName" Type="System.String" />
          <Parameter Name="valueName" Type="System.String" />
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="SetValue" Return_type="System.Void">
        <Parameters>
          <Parameter Name="keyName" Type="System.String" />
          <Parameter Name="valueName" Type="System.String" />
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="valueKind" Type="Microsoft.Win32.RegistryValueKind" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="Microsoft.Win32.RegistryKey">
    <Properties>
      <Property Name="SubKeyCount" Type="System.Int32" />
      <Property Name="View" Type="Microsoft.Win32.RegistryView" />
      <Property Name="Handle" Type="Microsoft.Win32.SafeHandles.SafeRegistryHandle" />
      <Property Name="ValueCount" Type="System.Int32" />
      <Property Name="Name" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="Close" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Flush" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Dispose" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="CreateSubKey" Return_type="Microsoft.Win32.RegistryKey">
        <Parameters>
          <Parameter Name="subkey" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="CreateSubKey" Return_type="Microsoft.Win32.RegistryKey">
        <Parameters>
          <Parameter Name="subkey" Type="System.String" />
          <Parameter Name="permissionCheck" Type="Microsoft.Win32.RegistryKeyPermissionCheck" />
        </Parameters>
      </Method>
      <Method Name="CreateSubKey" Return_type="Microsoft.Win32.RegistryKey">
        <Parameters>
          <Parameter Name="subkey" Type="System.String" />
          <Parameter Name="permissionCheck" Type="Microsoft.Win32.RegistryKeyPermissionCheck" />
          <Parameter Name="options" Type="Microsoft.Win32.RegistryOptions" />
        </Parameters>
      </Method>
      <Method Name="CreateSubKey" Return_type="Microsoft.Win32.RegistryKey">
        <Parameters>
          <Parameter Name="subkey" Type="System.String" />
          <Parameter Name="writable" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="CreateSubKey" Return_type="Microsoft.Win32.RegistryKey">
        <Parameters>
          <Parameter Name="subkey" Type="System.String" />
          <Parameter Name="writable" Type="System.Boolean" />
          <Parameter Name="options" Type="Microsoft.Win32.RegistryOptions" />
        </Parameters>
      </Method>
      <Method Name="CreateSubKey" Return_type="Microsoft.Win32.RegistryKey">
        <Parameters>
          <Parameter Name="subkey" Type="System.String" />
          <Parameter Name="permissionCheck" Type="Microsoft.Win32.RegistryKeyPermissionCheck" />
          <Parameter Name="registrySecurity" Type="System.Security.AccessControl.RegistrySecurity" />
        </Parameters>
      </Method>
      <Method Name="CreateSubKey" Return_type="Microsoft.Win32.RegistryKey">
        <Parameters>
          <Parameter Name="subkey" Type="System.String" />
          <Parameter Name="permissionCheck" Type="Microsoft.Win32.RegistryKeyPermissionCheck" />
          <Parameter Name="registryOptions" Type="Microsoft.Win32.RegistryOptions" />
          <Parameter Name="registrySecurity" Type="System.Security.AccessControl.RegistrySecurity" />
        </Parameters>
      </Method>
      <Method Name="DeleteSubKey" Return_type="System.Void">
        <Parameters>
          <Parameter Name="subkey" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="DeleteSubKey" Return_type="System.Void">
        <Parameters>
          <Parameter Name="subkey" Type="System.String" />
          <Parameter Name="throwOnMissingSubKey" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="DeleteSubKeyTree" Return_type="System.Void">
        <Parameters>
          <Parameter Name="subkey" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="DeleteSubKeyTree" Return_type="System.Void">
        <Parameters>
          <Parameter Name="subkey" Type="System.String" />
          <Parameter Name="throwOnMissingSubKey" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="DeleteValue" Return_type="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="DeleteValue" Return_type="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="throwOnMissingValue" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="OpenBaseKey" Return_type="Microsoft.Win32.RegistryKey">
        <Parameters>
          <Parameter Name="hKey" Type="Microsoft.Win32.RegistryHive" />
          <Parameter Name="view" Type="Microsoft.Win32.RegistryView" />
        </Parameters>
      </Method>
      <Method Name="OpenRemoteBaseKey" Return_type="Microsoft.Win32.RegistryKey">
        <Parameters>
          <Parameter Name="hKey" Type="Microsoft.Win32.RegistryHive" />
          <Parameter Name="machineName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="OpenRemoteBaseKey" Return_type="Microsoft.Win32.RegistryKey">
        <Parameters>
          <Parameter Name="hKey" Type="Microsoft.Win32.RegistryHive" />
          <Parameter Name="machineName" Type="System.String" />
          <Parameter Name="view" Type="Microsoft.Win32.RegistryView" />
        </Parameters>
      </Method>
      <Method Name="OpenSubKey" Return_type="Microsoft.Win32.RegistryKey">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="writable" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="OpenSubKey" Return_type="Microsoft.Win32.RegistryKey">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="permissionCheck" Type="Microsoft.Win32.RegistryKeyPermissionCheck" />
        </Parameters>
      </Method>
      <Method Name="OpenSubKey" Return_type="Microsoft.Win32.RegistryKey">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="rights" Type="System.Security.AccessControl.RegistryRights" />
        </Parameters>
      </Method>
      <Method Name="OpenSubKey" Return_type="Microsoft.Win32.RegistryKey">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="permissionCheck" Type="Microsoft.Win32.RegistryKeyPermissionCheck" />
          <Parameter Name="rights" Type="System.Security.AccessControl.RegistryRights" />
        </Parameters>
      </Method>
      <Method Name="OpenSubKey" Return_type="Microsoft.Win32.RegistryKey">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_SubKeyCount" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_View" Return_type="Microsoft.Win32.RegistryView">
        <Parameters />
      </Method>
      <Method Name="get_Handle" Return_type="Microsoft.Win32.SafeHandles.SafeRegistryHandle">
        <Parameters />
      </Method>
      <Method Name="FromHandle" Return_type="Microsoft.Win32.RegistryKey">
        <Parameters>
          <Parameter Name="handle" Type="Microsoft.Win32.SafeHandles.SafeRegistryHandle" />
        </Parameters>
      </Method>
      <Method Name="FromHandle" Return_type="Microsoft.Win32.RegistryKey">
        <Parameters>
          <Parameter Name="handle" Type="Microsoft.Win32.SafeHandles.SafeRegistryHandle" />
          <Parameter Name="view" Type="Microsoft.Win32.RegistryView" />
        </Parameters>
      </Method>
      <Method Name="GetSubKeyNames" Return_type="System.String[]">
        <Parameters />
      </Method>
      <Method Name="get_ValueCount" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetValueNames" Return_type="System.String[]">
        <Parameters />
      </Method>
      <Method Name="GetValue" Return_type="System.Object">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetValue" Return_type="System.Object">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="defaultValue" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetValue" Return_type="System.Object">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="defaultValue" Type="System.Object" />
          <Parameter Name="options" Type="Microsoft.Win32.RegistryValueOptions" />
        </Parameters>
      </Method>
      <Method Name="GetValueKind" Return_type="Microsoft.Win32.RegistryValueKind">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="SetValue" Return_type="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="SetValue" Return_type="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="valueKind" Type="Microsoft.Win32.RegistryValueKind" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetAccessControl" Return_type="System.Security.AccessControl.RegistrySecurity">
        <Parameters />
      </Method>
      <Method Name="GetAccessControl" Return_type="System.Security.AccessControl.RegistrySecurity">
        <Parameters>
          <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
        </Parameters>
      </Method>
      <Method Name="SetAccessControl" Return_type="System.Void">
        <Parameters>
          <Parameter Name="registrySecurity" Type="System.Security.AccessControl.RegistrySecurity" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="Microsoft.Win32.SafeHandles.SafeFileHandle">
    <Properties>
      <Property Name="IsInvalid" Type="System.Boolean" />
      <Property Name="IsClosed" Type="System.Boolean" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="Microsoft.Win32.SafeHandles.SafeRegistryHandle">
    <Properties>
      <Property Name="IsInvalid" Type="System.Boolean" />
      <Property Name="IsClosed" Type="System.Boolean" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="Microsoft.Win32.SafeHandles.SafeWaitHandle">
    <Properties>
      <Property Name="IsInvalid" Type="System.Boolean" />
      <Property Name="IsClosed" Type="System.Boolean" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid">
    <Properties>
      <Property Name="IsInvalid" Type="System.Boolean" />
      <Property Name="IsClosed" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_IsInvalid" Return_type="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="Microsoft.Win32.SafeHandles.SafeHandleMinusOneIsInvalid">
    <Properties>
      <Property Name="IsInvalid" Type="System.Boolean" />
      <Property Name="IsClosed" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_IsInvalid" Return_type="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="Microsoft.Win32.SafeHandles.CriticalHandleZeroOrMinusOneIsInvalid">
    <Properties>
      <Property Name="IsInvalid" Type="System.Boolean" />
      <Property Name="IsClosed" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_IsInvalid" Return_type="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="Microsoft.Win32.SafeHandles.CriticalHandleMinusOneIsInvalid">
    <Properties>
      <Property Name="IsInvalid" Type="System.Boolean" />
      <Property Name="IsClosed" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_IsInvalid" Return_type="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="Microsoft.Win32.SafeHandles.SafeAccessTokenHandle">
    <Properties>
      <Property Name="InvalidHandle" Type="Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" />
      <Property Name="IsInvalid" Type="System.Boolean" />
      <Property Name="IsClosed" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_IsInvalid" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_InvalidHandle" Return_type="Microsoft.Win32.SafeHandles.SafeAccessTokenHandle">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.AggregateException">
    <Properties>
      <Property Name="InnerExceptions" Type="System.Collections.ObjectModel.ReadOnlyCollection`1[System.Exception]" />
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="GetObjectData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
      <Method Name="GetBaseException" Return_type="System.Exception">
        <Parameters />
      </Method>
      <Method Name="get_InnerExceptions" Return_type="System.Collections.ObjectModel.ReadOnlyCollection`1[System.Exception]">
        <Parameters />
      </Method>
      <Method Name="Handle" Return_type="System.Void">
        <Parameters>
          <Parameter Name="predicate" Type="System.Func`2[System.Exception,System.Boolean]" />
        </Parameters>
      </Method>
      <Method Name="Flatten" Return_type="System.AggregateException">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.AppContext">
    <Properties>
      <Property Name="BaseDirectory" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="TryGetSwitch" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="switchName" Type="System.String" />
          <Parameter Name="isEnabled" Type="System.Boolean&amp;" />
        </Parameters>
      </Method>
      <Method Name="get_BaseDirectory" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="SetSwitch" Return_type="System.Void">
        <Parameters>
          <Parameter Name="switchName" Type="System.String" />
          <Parameter Name="isEnabled" Type="System.Boolean" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Object">
    <Properties />
    <Methods>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="objA" Type="System.Object" />
          <Parameter Name="objB" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="ReferenceEquals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="objA" Type="System.Object" />
          <Parameter Name="objB" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetType" Return_type="System.Type">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Action`1">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="T" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="obj" Type="T" />
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="object" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Action">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="BeginInvoke" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="object" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Action`2">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="arg1" Type="T1" />
          <Parameter Name="arg2" Type="T2" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="arg1" Type="T1" />
          <Parameter Name="arg2" Type="T2" />
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="object" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Action`3">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="arg1" Type="T1" />
          <Parameter Name="arg2" Type="T2" />
          <Parameter Name="arg3" Type="T3" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="arg1" Type="T1" />
          <Parameter Name="arg2" Type="T2" />
          <Parameter Name="arg3" Type="T3" />
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="object" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Action`4">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="arg1" Type="T1" />
          <Parameter Name="arg2" Type="T2" />
          <Parameter Name="arg3" Type="T3" />
          <Parameter Name="arg4" Type="T4" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="arg1" Type="T1" />
          <Parameter Name="arg2" Type="T2" />
          <Parameter Name="arg3" Type="T3" />
          <Parameter Name="arg4" Type="T4" />
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="object" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Func`1">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" Return_type="TResult">
        <Parameters />
      </Method>
      <Method Name="BeginInvoke" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="object" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" Return_type="TResult">
        <Parameters>
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Func`2">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" Return_type="TResult">
        <Parameters>
          <Parameter Name="arg" Type="T" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="arg" Type="T" />
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="object" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" Return_type="TResult">
        <Parameters>
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Func`3">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" Return_type="TResult">
        <Parameters>
          <Parameter Name="arg1" Type="T1" />
          <Parameter Name="arg2" Type="T2" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="arg1" Type="T1" />
          <Parameter Name="arg2" Type="T2" />
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="object" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" Return_type="TResult">
        <Parameters>
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Func`4">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" Return_type="TResult">
        <Parameters>
          <Parameter Name="arg1" Type="T1" />
          <Parameter Name="arg2" Type="T2" />
          <Parameter Name="arg3" Type="T3" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="arg1" Type="T1" />
          <Parameter Name="arg2" Type="T2" />
          <Parameter Name="arg3" Type="T3" />
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="object" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" Return_type="TResult">
        <Parameters>
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Func`5">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" Return_type="TResult">
        <Parameters>
          <Parameter Name="arg1" Type="T1" />
          <Parameter Name="arg2" Type="T2" />
          <Parameter Name="arg3" Type="T3" />
          <Parameter Name="arg4" Type="T4" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="arg1" Type="T1" />
          <Parameter Name="arg2" Type="T2" />
          <Parameter Name="arg3" Type="T3" />
          <Parameter Name="arg4" Type="T4" />
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="object" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" Return_type="TResult">
        <Parameters>
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Action`5">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="arg1" Type="T1" />
          <Parameter Name="arg2" Type="T2" />
          <Parameter Name="arg3" Type="T3" />
          <Parameter Name="arg4" Type="T4" />
          <Parameter Name="arg5" Type="T5" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="arg1" Type="T1" />
          <Parameter Name="arg2" Type="T2" />
          <Parameter Name="arg3" Type="T3" />
          <Parameter Name="arg4" Type="T4" />
          <Parameter Name="arg5" Type="T5" />
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="object" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Action`6">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="arg1" Type="T1" />
          <Parameter Name="arg2" Type="T2" />
          <Parameter Name="arg3" Type="T3" />
          <Parameter Name="arg4" Type="T4" />
          <Parameter Name="arg5" Type="T5" />
          <Parameter Name="arg6" Type="T6" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="arg1" Type="T1" />
          <Parameter Name="arg2" Type="T2" />
          <Parameter Name="arg3" Type="T3" />
          <Parameter Name="arg4" Type="T4" />
          <Parameter Name="arg5" Type="T5" />
          <Parameter Name="arg6" Type="T6" />
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="object" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Action`7">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="arg1" Type="T1" />
          <Parameter Name="arg2" Type="T2" />
          <Parameter Name="arg3" Type="T3" />
          <Parameter Name="arg4" Type="T4" />
          <Parameter Name="arg5" Type="T5" />
          <Parameter Name="arg6" Type="T6" />
          <Parameter Name="arg7" Type="T7" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="arg1" Type="T1" />
          <Parameter Name="arg2" Type="T2" />
          <Parameter Name="arg3" Type="T3" />
          <Parameter Name="arg4" Type="T4" />
          <Parameter Name="arg5" Type="T5" />
          <Parameter Name="arg6" Type="T6" />
          <Parameter Name="arg7" Type="T7" />
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="object" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Action`8">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="arg1" Type="T1" />
          <Parameter Name="arg2" Type="T2" />
          <Parameter Name="arg3" Type="T3" />
          <Parameter Name="arg4" Type="T4" />
          <Parameter Name="arg5" Type="T5" />
          <Parameter Name="arg6" Type="T6" />
          <Parameter Name="arg7" Type="T7" />
          <Parameter Name="arg8" Type="T8" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="arg1" Type="T1" />
          <Parameter Name="arg2" Type="T2" />
          <Parameter Name="arg3" Type="T3" />
          <Parameter Name="arg4" Type="T4" />
          <Parameter Name="arg5" Type="T5" />
          <Parameter Name="arg6" Type="T6" />
          <Parameter Name="arg7" Type="T7" />
          <Parameter Name="arg8" Type="T8" />
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="object" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Func`6">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" Return_type="TResult">
        <Parameters>
          <Parameter Name="arg1" Type="T1" />
          <Parameter Name="arg2" Type="T2" />
          <Parameter Name="arg3" Type="T3" />
          <Parameter Name="arg4" Type="T4" />
          <Parameter Name="arg5" Type="T5" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="arg1" Type="T1" />
          <Parameter Name="arg2" Type="T2" />
          <Parameter Name="arg3" Type="T3" />
          <Parameter Name="arg4" Type="T4" />
          <Parameter Name="arg5" Type="T5" />
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="object" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" Return_type="TResult">
        <Parameters>
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Func`7">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" Return_type="TResult">
        <Parameters>
          <Parameter Name="arg1" Type="T1" />
          <Parameter Name="arg2" Type="T2" />
          <Parameter Name="arg3" Type="T3" />
          <Parameter Name="arg4" Type="T4" />
          <Parameter Name="arg5" Type="T5" />
          <Parameter Name="arg6" Type="T6" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="arg1" Type="T1" />
          <Parameter Name="arg2" Type="T2" />
          <Parameter Name="arg3" Type="T3" />
          <Parameter Name="arg4" Type="T4" />
          <Parameter Name="arg5" Type="T5" />
          <Parameter Name="arg6" Type="T6" />
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="object" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" Return_type="TResult">
        <Parameters>
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Func`8">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" Return_type="TResult">
        <Parameters>
          <Parameter Name="arg1" Type="T1" />
          <Parameter Name="arg2" Type="T2" />
          <Parameter Name="arg3" Type="T3" />
          <Parameter Name="arg4" Type="T4" />
          <Parameter Name="arg5" Type="T5" />
          <Parameter Name="arg6" Type="T6" />
          <Parameter Name="arg7" Type="T7" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="arg1" Type="T1" />
          <Parameter Name="arg2" Type="T2" />
          <Parameter Name="arg3" Type="T3" />
          <Parameter Name="arg4" Type="T4" />
          <Parameter Name="arg5" Type="T5" />
          <Parameter Name="arg6" Type="T6" />
          <Parameter Name="arg7" Type="T7" />
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="object" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" Return_type="TResult">
        <Parameters>
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Func`9">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" Return_type="TResult">
        <Parameters>
          <Parameter Name="arg1" Type="T1" />
          <Parameter Name="arg2" Type="T2" />
          <Parameter Name="arg3" Type="T3" />
          <Parameter Name="arg4" Type="T4" />
          <Parameter Name="arg5" Type="T5" />
          <Parameter Name="arg6" Type="T6" />
          <Parameter Name="arg7" Type="T7" />
          <Parameter Name="arg8" Type="T8" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="arg1" Type="T1" />
          <Parameter Name="arg2" Type="T2" />
          <Parameter Name="arg3" Type="T3" />
          <Parameter Name="arg4" Type="T4" />
          <Parameter Name="arg5" Type="T5" />
          <Parameter Name="arg6" Type="T6" />
          <Parameter Name="arg7" Type="T7" />
          <Parameter Name="arg8" Type="T8" />
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="object" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" Return_type="TResult">
        <Parameters>
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Comparison`1">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="x" Type="T" />
          <Parameter Name="y" Type="T" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="x" Type="T" />
          <Parameter Name="y" Type="T" />
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="object" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Converter`2">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" Return_type="TOutput">
        <Parameters>
          <Parameter Name="input" Type="TInput" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="input" Type="TInput" />
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="object" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" Return_type="TOutput">
        <Parameters>
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Predicate`1">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="T" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="obj" Type="T" />
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="object" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Array">
    <Properties>
      <Property Name="Length" Type="System.Int32" />
      <Property Name="LongLength" Type="System.Int64" />
      <Property Name="Rank" Type="System.Int32" />
      <Property Name="SyncRoot" Type="System.Object" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="IsFixedSize" Type="System.Boolean" />
      <Property Name="IsSynchronized" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="AsReadOnly" Return_type="System.Collections.ObjectModel.ReadOnlyCollection`1[T]">
        <Parameters>
          <Parameter Name="array" Type="T[]" />
        </Parameters>
      </Method>
      <Method Name="Resize" Return_type="System.Void">
        <Parameters>
          <Parameter Name="array" Type="T[]&amp;" />
          <Parameter Name="newSize" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="CreateInstance" Return_type="System.Array">
        <Parameters>
          <Parameter Name="elementType" Type="System.Type" />
          <Parameter Name="length" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="CreateInstance" Return_type="System.Array">
        <Parameters>
          <Parameter Name="elementType" Type="System.Type" />
          <Parameter Name="length1" Type="System.Int32" />
          <Parameter Name="length2" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="CreateInstance" Return_type="System.Array">
        <Parameters>
          <Parameter Name="elementType" Type="System.Type" />
          <Parameter Name="length1" Type="System.Int32" />
          <Parameter Name="length2" Type="System.Int32" />
          <Parameter Name="length3" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="CreateInstance" Return_type="System.Array">
        <Parameters>
          <Parameter Name="elementType" Type="System.Type" />
          <Parameter Name="lengths" Type="System.Int32[]" />
        </Parameters>
      </Method>
      <Method Name="CreateInstance" Return_type="System.Array">
        <Parameters>
          <Parameter Name="elementType" Type="System.Type" />
          <Parameter Name="lengths" Type="System.Int64[]" />
        </Parameters>
      </Method>
      <Method Name="CreateInstance" Return_type="System.Array">
        <Parameters>
          <Parameter Name="elementType" Type="System.Type" />
          <Parameter Name="lengths" Type="System.Int32[]" />
          <Parameter Name="lowerBounds" Type="System.Int32[]" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Void">
        <Parameters>
          <Parameter Name="sourceArray" Type="System.Array" />
          <Parameter Name="destinationArray" Type="System.Array" />
          <Parameter Name="length" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Void">
        <Parameters>
          <Parameter Name="sourceArray" Type="System.Array" />
          <Parameter Name="sourceIndex" Type="System.Int32" />
          <Parameter Name="destinationArray" Type="System.Array" />
          <Parameter Name="destinationIndex" Type="System.Int32" />
          <Parameter Name="length" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ConstrainedCopy" Return_type="System.Void">
        <Parameters>
          <Parameter Name="sourceArray" Type="System.Array" />
          <Parameter Name="sourceIndex" Type="System.Int32" />
          <Parameter Name="destinationArray" Type="System.Array" />
          <Parameter Name="destinationIndex" Type="System.Int32" />
          <Parameter Name="length" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Void">
        <Parameters>
          <Parameter Name="sourceArray" Type="System.Array" />
          <Parameter Name="destinationArray" Type="System.Array" />
          <Parameter Name="length" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Void">
        <Parameters>
          <Parameter Name="sourceArray" Type="System.Array" />
          <Parameter Name="sourceIndex" Type="System.Int64" />
          <Parameter Name="destinationArray" Type="System.Array" />
          <Parameter Name="destinationIndex" Type="System.Int64" />
          <Parameter Name="length" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="Clear" Return_type="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Array" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="length" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetValue" Return_type="System.Object">
        <Parameters>
          <Parameter Name="indices" Type="System.Int32[]" />
        </Parameters>
      </Method>
      <Method Name="GetValue" Return_type="System.Object">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetValue" Return_type="System.Object">
        <Parameters>
          <Parameter Name="index1" Type="System.Int32" />
          <Parameter Name="index2" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetValue" Return_type="System.Object">
        <Parameters>
          <Parameter Name="index1" Type="System.Int32" />
          <Parameter Name="index2" Type="System.Int32" />
          <Parameter Name="index3" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetValue" Return_type="System.Object">
        <Parameters>
          <Parameter Name="index" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="GetValue" Return_type="System.Object">
        <Parameters>
          <Parameter Name="index1" Type="System.Int64" />
          <Parameter Name="index2" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="GetValue" Return_type="System.Object">
        <Parameters>
          <Parameter Name="index1" Type="System.Int64" />
          <Parameter Name="index2" Type="System.Int64" />
          <Parameter Name="index3" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="GetValue" Return_type="System.Object">
        <Parameters>
          <Parameter Name="indices" Type="System.Int64[]" />
        </Parameters>
      </Method>
      <Method Name="SetValue" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="SetValue" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="index1" Type="System.Int32" />
          <Parameter Name="index2" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="SetValue" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="index1" Type="System.Int32" />
          <Parameter Name="index2" Type="System.Int32" />
          <Parameter Name="index3" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="SetValue" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="indices" Type="System.Int32[]" />
        </Parameters>
      </Method>
      <Method Name="SetValue" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="index" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="SetValue" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="index1" Type="System.Int64" />
          <Parameter Name="index2" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="SetValue" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="index1" Type="System.Int64" />
          <Parameter Name="index2" Type="System.Int64" />
          <Parameter Name="index3" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="SetValue" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="indices" Type="System.Int64[]" />
        </Parameters>
      </Method>
      <Method Name="get_Length" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_LongLength" Return_type="System.Int64">
        <Parameters />
      </Method>
      <Method Name="GetLength" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="dimension" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetLongLength" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="dimension" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_Rank" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetUpperBound" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="dimension" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetLowerBound" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="dimension" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_SyncRoot" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_IsReadOnly" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsFixedSize" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSynchronized" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Clone" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="BinarySearch" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="array" Type="System.Array" />
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="BinarySearch" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="array" Type="System.Array" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="length" Type="System.Int32" />
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="BinarySearch" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="array" Type="System.Array" />
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="comparer" Type="System.Collections.IComparer" />
        </Parameters>
      </Method>
      <Method Name="BinarySearch" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="array" Type="System.Array" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="length" Type="System.Int32" />
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="comparer" Type="System.Collections.IComparer" />
        </Parameters>
      </Method>
      <Method Name="BinarySearch" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="array" Type="T[]" />
          <Parameter Name="value" Type="T" />
        </Parameters>
      </Method>
      <Method Name="BinarySearch" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="array" Type="T[]" />
          <Parameter Name="value" Type="T" />
          <Parameter Name="comparer" Type="System.Collections.Generic.IComparer`1[T]" />
        </Parameters>
      </Method>
      <Method Name="BinarySearch" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="array" Type="T[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="length" Type="System.Int32" />
          <Parameter Name="value" Type="T" />
        </Parameters>
      </Method>
      <Method Name="BinarySearch" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="array" Type="T[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="length" Type="System.Int32" />
          <Parameter Name="value" Type="T" />
          <Parameter Name="comparer" Type="System.Collections.Generic.IComparer`1[T]" />
        </Parameters>
      </Method>
      <Method Name="ConvertAll" Return_type="TOutput[]">
        <Parameters>
          <Parameter Name="array" Type="TInput[]" />
          <Parameter Name="converter" Type="System.Converter`2[TInput,TOutput]" />
        </Parameters>
      </Method>
      <Method Name="CopyTo" Return_type="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Array" />
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="CopyTo" Return_type="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Array" />
          <Parameter Name="index" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="Empty" Return_type="T[]">
        <Parameters />
      </Method>
      <Method Name="Exists" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="array" Type="T[]" />
          <Parameter Name="match" Type="System.Predicate`1[T]" />
        </Parameters>
      </Method>
      <Method Name="Find" Return_type="T">
        <Parameters>
          <Parameter Name="array" Type="T[]" />
          <Parameter Name="match" Type="System.Predicate`1[T]" />
        </Parameters>
      </Method>
      <Method Name="FindAll" Return_type="T[]">
        <Parameters>
          <Parameter Name="array" Type="T[]" />
          <Parameter Name="match" Type="System.Predicate`1[T]" />
        </Parameters>
      </Method>
      <Method Name="FindIndex" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="array" Type="T[]" />
          <Parameter Name="match" Type="System.Predicate`1[T]" />
        </Parameters>
      </Method>
      <Method Name="FindIndex" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="array" Type="T[]" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="match" Type="System.Predicate`1[T]" />
        </Parameters>
      </Method>
      <Method Name="FindIndex" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="array" Type="T[]" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
          <Parameter Name="match" Type="System.Predicate`1[T]" />
        </Parameters>
      </Method>
      <Method Name="FindLast" Return_type="T">
        <Parameters>
          <Parameter Name="array" Type="T[]" />
          <Parameter Name="match" Type="System.Predicate`1[T]" />
        </Parameters>
      </Method>
      <Method Name="FindLastIndex" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="array" Type="T[]" />
          <Parameter Name="match" Type="System.Predicate`1[T]" />
        </Parameters>
      </Method>
      <Method Name="FindLastIndex" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="array" Type="T[]" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="match" Type="System.Predicate`1[T]" />
        </Parameters>
      </Method>
      <Method Name="FindLastIndex" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="array" Type="T[]" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
          <Parameter Name="match" Type="System.Predicate`1[T]" />
        </Parameters>
      </Method>
      <Method Name="ForEach" Return_type="System.Void">
        <Parameters>
          <Parameter Name="array" Type="T[]" />
          <Parameter Name="action" Type="System.Action`1[T]" />
        </Parameters>
      </Method>
      <Method Name="GetEnumerator" Return_type="System.Collections.IEnumerator">
        <Parameters />
      </Method>
      <Method Name="IndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="array" Type="System.Array" />
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="array" Type="System.Array" />
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="startIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="array" Type="System.Array" />
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="array" Type="T[]" />
          <Parameter Name="value" Type="T" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="array" Type="T[]" />
          <Parameter Name="value" Type="T" />
          <Parameter Name="startIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="array" Type="T[]" />
          <Parameter Name="value" Type="T" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="array" Type="System.Array" />
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="array" Type="System.Array" />
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="startIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="array" Type="System.Array" />
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="array" Type="T[]" />
          <Parameter Name="value" Type="T" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="array" Type="T[]" />
          <Parameter Name="value" Type="T" />
          <Parameter Name="startIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="array" Type="T[]" />
          <Parameter Name="value" Type="T" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Reverse" Return_type="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Array" />
        </Parameters>
      </Method>
      <Method Name="Reverse" Return_type="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Array" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="length" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Sort" Return_type="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Array" />
        </Parameters>
      </Method>
      <Method Name="Sort" Return_type="System.Void">
        <Parameters>
          <Parameter Name="keys" Type="System.Array" />
          <Parameter Name="items" Type="System.Array" />
        </Parameters>
      </Method>
      <Method Name="Sort" Return_type="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Array" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="length" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Sort" Return_type="System.Void">
        <Parameters>
          <Parameter Name="keys" Type="System.Array" />
          <Parameter Name="items" Type="System.Array" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="length" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Sort" Return_type="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Array" />
          <Parameter Name="comparer" Type="System.Collections.IComparer" />
        </Parameters>
      </Method>
      <Method Name="Sort" Return_type="System.Void">
        <Parameters>
          <Parameter Name="keys" Type="System.Array" />
          <Parameter Name="items" Type="System.Array" />
          <Parameter Name="comparer" Type="System.Collections.IComparer" />
        </Parameters>
      </Method>
      <Method Name="Sort" Return_type="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Array" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="length" Type="System.Int32" />
          <Parameter Name="comparer" Type="System.Collections.IComparer" />
        </Parameters>
      </Method>
      <Method Name="Sort" Return_type="System.Void">
        <Parameters>
          <Parameter Name="keys" Type="System.Array" />
          <Parameter Name="items" Type="System.Array" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="length" Type="System.Int32" />
          <Parameter Name="comparer" Type="System.Collections.IComparer" />
        </Parameters>
      </Method>
      <Method Name="Sort" Return_type="System.Void">
        <Parameters>
          <Parameter Name="array" Type="T[]" />
        </Parameters>
      </Method>
      <Method Name="Sort" Return_type="System.Void">
        <Parameters>
          <Parameter Name="keys" Type="TKey[]" />
          <Parameter Name="items" Type="TValue[]" />
        </Parameters>
      </Method>
      <Method Name="Sort" Return_type="System.Void">
        <Parameters>
          <Parameter Name="array" Type="T[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="length" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Sort" Return_type="System.Void">
        <Parameters>
          <Parameter Name="keys" Type="TKey[]" />
          <Parameter Name="items" Type="TValue[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="length" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Sort" Return_type="System.Void">
        <Parameters>
          <Parameter Name="array" Type="T[]" />
          <Parameter Name="comparer" Type="System.Collections.Generic.IComparer`1[T]" />
        </Parameters>
      </Method>
      <Method Name="Sort" Return_type="System.Void">
        <Parameters>
          <Parameter Name="keys" Type="TKey[]" />
          <Parameter Name="items" Type="TValue[]" />
          <Parameter Name="comparer" Type="System.Collections.Generic.IComparer`1[TKey]" />
        </Parameters>
      </Method>
      <Method Name="Sort" Return_type="System.Void">
        <Parameters>
          <Parameter Name="array" Type="T[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="length" Type="System.Int32" />
          <Parameter Name="comparer" Type="System.Collections.Generic.IComparer`1[T]" />
        </Parameters>
      </Method>
      <Method Name="Sort" Return_type="System.Void">
        <Parameters>
          <Parameter Name="keys" Type="TKey[]" />
          <Parameter Name="items" Type="TValue[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="length" Type="System.Int32" />
          <Parameter Name="comparer" Type="System.Collections.Generic.IComparer`1[TKey]" />
        </Parameters>
      </Method>
      <Method Name="Sort" Return_type="System.Void">
        <Parameters>
          <Parameter Name="array" Type="T[]" />
          <Parameter Name="comparison" Type="System.Comparison`1[T]" />
        </Parameters>
      </Method>
      <Method Name="TrueForAll" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="array" Type="T[]" />
          <Parameter Name="match" Type="System.Predicate`1[T]" />
        </Parameters>
      </Method>
      <Method Name="Initialize" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Tuple">
    <Properties />
    <Methods>
      <Method Name="Create" Return_type="System.Tuple`1[T1]">
        <Parameters>
          <Parameter Name="item1" Type="T1" />
        </Parameters>
      </Method>
      <Method Name="Create" Return_type="System.Tuple`2[T1,T2]">
        <Parameters>
          <Parameter Name="item1" Type="T1" />
          <Parameter Name="item2" Type="T2" />
        </Parameters>
      </Method>
      <Method Name="Create" Return_type="System.Tuple`3[T1,T2,T3]">
        <Parameters>
          <Parameter Name="item1" Type="T1" />
          <Parameter Name="item2" Type="T2" />
          <Parameter Name="item3" Type="T3" />
        </Parameters>
      </Method>
      <Method Name="Create" Return_type="System.Tuple`4[T1,T2,T3,T4]">
        <Parameters>
          <Parameter Name="item1" Type="T1" />
          <Parameter Name="item2" Type="T2" />
          <Parameter Name="item3" Type="T3" />
          <Parameter Name="item4" Type="T4" />
        </Parameters>
      </Method>
      <Method Name="Create" Return_type="System.Tuple`5[T1,T2,T3,T4,T5]">
        <Parameters>
          <Parameter Name="item1" Type="T1" />
          <Parameter Name="item2" Type="T2" />
          <Parameter Name="item3" Type="T3" />
          <Parameter Name="item4" Type="T4" />
          <Parameter Name="item5" Type="T5" />
        </Parameters>
      </Method>
      <Method Name="Create" Return_type="System.Tuple`6[T1,T2,T3,T4,T5,T6]">
        <Parameters>
          <Parameter Name="item1" Type="T1" />
          <Parameter Name="item2" Type="T2" />
          <Parameter Name="item3" Type="T3" />
          <Parameter Name="item4" Type="T4" />
          <Parameter Name="item5" Type="T5" />
          <Parameter Name="item6" Type="T6" />
        </Parameters>
      </Method>
      <Method Name="Create" Return_type="System.Tuple`7[T1,T2,T3,T4,T5,T6,T7]">
        <Parameters>
          <Parameter Name="item1" Type="T1" />
          <Parameter Name="item2" Type="T2" />
          <Parameter Name="item3" Type="T3" />
          <Parameter Name="item4" Type="T4" />
          <Parameter Name="item5" Type="T5" />
          <Parameter Name="item6" Type="T6" />
          <Parameter Name="item7" Type="T7" />
        </Parameters>
      </Method>
      <Method Name="Create" Return_type="System.Tuple`8[T1,T2,T3,T4,T5,T6,T7,System.Tuple`1[T8]]">
        <Parameters>
          <Parameter Name="item1" Type="T1" />
          <Parameter Name="item2" Type="T2" />
          <Parameter Name="item3" Type="T3" />
          <Parameter Name="item4" Type="T4" />
          <Parameter Name="item5" Type="T5" />
          <Parameter Name="item6" Type="T6" />
          <Parameter Name="item7" Type="T7" />
          <Parameter Name="item8" Type="T8" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Tuple`1">
    <Properties>
      <Property Name="Item1" Type="T1" />
    </Properties>
    <Methods>
      <Method Name="get_Item1" Return_type="T1">
        <Parameters />
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Tuple`2">
    <Properties>
      <Property Name="Item1" Type="T1" />
      <Property Name="Item2" Type="T2" />
    </Properties>
    <Methods>
      <Method Name="get_Item1" Return_type="T1">
        <Parameters />
      </Method>
      <Method Name="get_Item2" Return_type="T2">
        <Parameters />
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Tuple`3">
    <Properties>
      <Property Name="Item1" Type="T1" />
      <Property Name="Item2" Type="T2" />
      <Property Name="Item3" Type="T3" />
    </Properties>
    <Methods>
      <Method Name="get_Item1" Return_type="T1">
        <Parameters />
      </Method>
      <Method Name="get_Item2" Return_type="T2">
        <Parameters />
      </Method>
      <Method Name="get_Item3" Return_type="T3">
        <Parameters />
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Tuple`4">
    <Properties>
      <Property Name="Item1" Type="T1" />
      <Property Name="Item2" Type="T2" />
      <Property Name="Item3" Type="T3" />
      <Property Name="Item4" Type="T4" />
    </Properties>
    <Methods>
      <Method Name="get_Item1" Return_type="T1">
        <Parameters />
      </Method>
      <Method Name="get_Item2" Return_type="T2">
        <Parameters />
      </Method>
      <Method Name="get_Item3" Return_type="T3">
        <Parameters />
      </Method>
      <Method Name="get_Item4" Return_type="T4">
        <Parameters />
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Tuple`5">
    <Properties>
      <Property Name="Item1" Type="T1" />
      <Property Name="Item2" Type="T2" />
      <Property Name="Item3" Type="T3" />
      <Property Name="Item4" Type="T4" />
      <Property Name="Item5" Type="T5" />
    </Properties>
    <Methods>
      <Method Name="get_Item1" Return_type="T1">
        <Parameters />
      </Method>
      <Method Name="get_Item2" Return_type="T2">
        <Parameters />
      </Method>
      <Method Name="get_Item3" Return_type="T3">
        <Parameters />
      </Method>
      <Method Name="get_Item4" Return_type="T4">
        <Parameters />
      </Method>
      <Method Name="get_Item5" Return_type="T5">
        <Parameters />
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Tuple`6">
    <Properties>
      <Property Name="Item1" Type="T1" />
      <Property Name="Item2" Type="T2" />
      <Property Name="Item3" Type="T3" />
      <Property Name="Item4" Type="T4" />
      <Property Name="Item5" Type="T5" />
      <Property Name="Item6" Type="T6" />
    </Properties>
    <Methods>
      <Method Name="get_Item1" Return_type="T1">
        <Parameters />
      </Method>
      <Method Name="get_Item2" Return_type="T2">
        <Parameters />
      </Method>
      <Method Name="get_Item3" Return_type="T3">
        <Parameters />
      </Method>
      <Method Name="get_Item4" Return_type="T4">
        <Parameters />
      </Method>
      <Method Name="get_Item5" Return_type="T5">
        <Parameters />
      </Method>
      <Method Name="get_Item6" Return_type="T6">
        <Parameters />
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Tuple`7">
    <Properties>
      <Property Name="Item1" Type="T1" />
      <Property Name="Item2" Type="T2" />
      <Property Name="Item3" Type="T3" />
      <Property Name="Item4" Type="T4" />
      <Property Name="Item5" Type="T5" />
      <Property Name="Item6" Type="T6" />
      <Property Name="Item7" Type="T7" />
    </Properties>
    <Methods>
      <Method Name="get_Item1" Return_type="T1">
        <Parameters />
      </Method>
      <Method Name="get_Item2" Return_type="T2">
        <Parameters />
      </Method>
      <Method Name="get_Item3" Return_type="T3">
        <Parameters />
      </Method>
      <Method Name="get_Item4" Return_type="T4">
        <Parameters />
      </Method>
      <Method Name="get_Item5" Return_type="T5">
        <Parameters />
      </Method>
      <Method Name="get_Item6" Return_type="T6">
        <Parameters />
      </Method>
      <Method Name="get_Item7" Return_type="T7">
        <Parameters />
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Tuple`8">
    <Properties>
      <Property Name="Item1" Type="T1" />
      <Property Name="Item2" Type="T2" />
      <Property Name="Item3" Type="T3" />
      <Property Name="Item4" Type="T4" />
      <Property Name="Item5" Type="T5" />
      <Property Name="Item6" Type="T6" />
      <Property Name="Item7" Type="T7" />
      <Property Name="Rest" Type="TRest" />
    </Properties>
    <Methods>
      <Method Name="get_Item1" Return_type="T1">
        <Parameters />
      </Method>
      <Method Name="get_Item2" Return_type="T2">
        <Parameters />
      </Method>
      <Method Name="get_Item3" Return_type="T3">
        <Parameters />
      </Method>
      <Method Name="get_Item4" Return_type="T4">
        <Parameters />
      </Method>
      <Method Name="get_Item5" Return_type="T5">
        <Parameters />
      </Method>
      <Method Name="get_Item6" Return_type="T6">
        <Parameters />
      </Method>
      <Method Name="get_Item7" Return_type="T7">
        <Parameters />
      </Method>
      <Method Name="get_Rest" Return_type="TRest">
        <Parameters />
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.String">
    <Properties>
      <Property Name="Chars" Type="System.Char" />
      <Property Name="Length" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="Join" Return_type="System.String">
        <Parameters>
          <Parameter Name="separator" Type="System.String" />
          <Parameter Name="value" Type="System.String[]" />
        </Parameters>
      </Method>
      <Method Name="Join" Return_type="System.String">
        <Parameters>
          <Parameter Name="separator" Type="System.String" />
          <Parameter Name="values" Type="System.Object[]" />
        </Parameters>
      </Method>
      <Method Name="Join" Return_type="System.String">
        <Parameters>
          <Parameter Name="separator" Type="System.String" />
          <Parameter Name="values" Type="System.Collections.Generic.IEnumerable`1[T]" />
        </Parameters>
      </Method>
      <Method Name="Join" Return_type="System.String">
        <Parameters>
          <Parameter Name="separator" Type="System.String" />
          <Parameter Name="values" Type="System.Collections.Generic.IEnumerable`1[System.String]" />
        </Parameters>
      </Method>
      <Method Name="Join" Return_type="System.String">
        <Parameters>
          <Parameter Name="separator" Type="System.String" />
          <Parameter Name="value" Type="System.String[]" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="comparisonType" Type="System.StringComparison" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="a" Type="System.String" />
          <Parameter Name="b" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="a" Type="System.String" />
          <Parameter Name="b" Type="System.String" />
          <Parameter Name="comparisonType" Type="System.StringComparison" />
        </Parameters>
      </Method>
      <Method Name="op_Equality" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="a" Type="System.String" />
          <Parameter Name="b" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="op_Inequality" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="a" Type="System.String" />
          <Parameter Name="b" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_Chars" Return_type="System.Char">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="CopyTo" Return_type="System.Void">
        <Parameters>
          <Parameter Name="sourceIndex" Type="System.Int32" />
          <Parameter Name="destination" Type="System.Char[]" />
          <Parameter Name="destinationIndex" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToCharArray" Return_type="System.Char[]">
        <Parameters />
      </Method>
      <Method Name="ToCharArray" Return_type="System.Char[]">
        <Parameters>
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="length" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IsNullOrEmpty" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="IsNullOrWhiteSpace" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_Length" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Split" Return_type="System.String[]">
        <Parameters>
          <Parameter Name="separator" Type="System.Char[]" />
        </Parameters>
      </Method>
      <Method Name="Split" Return_type="System.String[]">
        <Parameters>
          <Parameter Name="separator" Type="System.Char[]" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Split" Return_type="System.String[]">
        <Parameters>
          <Parameter Name="separator" Type="System.Char[]" />
          <Parameter Name="options" Type="System.StringSplitOptions" />
        </Parameters>
      </Method>
      <Method Name="Split" Return_type="System.String[]">
        <Parameters>
          <Parameter Name="separator" Type="System.Char[]" />
          <Parameter Name="count" Type="System.Int32" />
          <Parameter Name="options" Type="System.StringSplitOptions" />
        </Parameters>
      </Method>
      <Method Name="Split" Return_type="System.String[]">
        <Parameters>
          <Parameter Name="separator" Type="System.String[]" />
          <Parameter Name="options" Type="System.StringSplitOptions" />
        </Parameters>
      </Method>
      <Method Name="Split" Return_type="System.String[]">
        <Parameters>
          <Parameter Name="separator" Type="System.String[]" />
          <Parameter Name="count" Type="System.Int32" />
          <Parameter Name="options" Type="System.StringSplitOptions" />
        </Parameters>
      </Method>
      <Method Name="Substring" Return_type="System.String">
        <Parameters>
          <Parameter Name="startIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Substring" Return_type="System.String">
        <Parameters>
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="length" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Trim" Return_type="System.String">
        <Parameters>
          <Parameter Name="trimChars" Type="System.Char[]" />
        </Parameters>
      </Method>
      <Method Name="TrimStart" Return_type="System.String">
        <Parameters>
          <Parameter Name="trimChars" Type="System.Char[]" />
        </Parameters>
      </Method>
      <Method Name="TrimEnd" Return_type="System.String">
        <Parameters>
          <Parameter Name="trimChars" Type="System.Char[]" />
        </Parameters>
      </Method>
      <Method Name="IsNormalized" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="IsNormalized" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="normalizationForm" Type="System.Text.NormalizationForm" />
        </Parameters>
      </Method>
      <Method Name="Normalize" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Normalize" Return_type="System.String">
        <Parameters>
          <Parameter Name="normalizationForm" Type="System.Text.NormalizationForm" />
        </Parameters>
      </Method>
      <Method Name="Compare" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="strA" Type="System.String" />
          <Parameter Name="strB" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Compare" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="strA" Type="System.String" />
          <Parameter Name="strB" Type="System.String" />
          <Parameter Name="ignoreCase" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="Compare" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="strA" Type="System.String" />
          <Parameter Name="strB" Type="System.String" />
          <Parameter Name="comparisonType" Type="System.StringComparison" />
        </Parameters>
      </Method>
      <Method Name="Compare" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="strA" Type="System.String" />
          <Parameter Name="strB" Type="System.String" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
          <Parameter Name="options" Type="System.Globalization.CompareOptions" />
        </Parameters>
      </Method>
      <Method Name="Compare" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="strA" Type="System.String" />
          <Parameter Name="strB" Type="System.String" />
          <Parameter Name="ignoreCase" Type="System.Boolean" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        </Parameters>
      </Method>
      <Method Name="Compare" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="strA" Type="System.String" />
          <Parameter Name="indexA" Type="System.Int32" />
          <Parameter Name="strB" Type="System.String" />
          <Parameter Name="indexB" Type="System.Int32" />
          <Parameter Name="length" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Compare" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="strA" Type="System.String" />
          <Parameter Name="indexA" Type="System.Int32" />
          <Parameter Name="strB" Type="System.String" />
          <Parameter Name="indexB" Type="System.Int32" />
          <Parameter Name="length" Type="System.Int32" />
          <Parameter Name="ignoreCase" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="Compare" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="strA" Type="System.String" />
          <Parameter Name="indexA" Type="System.Int32" />
          <Parameter Name="strB" Type="System.String" />
          <Parameter Name="indexB" Type="System.Int32" />
          <Parameter Name="length" Type="System.Int32" />
          <Parameter Name="ignoreCase" Type="System.Boolean" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        </Parameters>
      </Method>
      <Method Name="Compare" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="strA" Type="System.String" />
          <Parameter Name="indexA" Type="System.Int32" />
          <Parameter Name="strB" Type="System.String" />
          <Parameter Name="indexB" Type="System.Int32" />
          <Parameter Name="length" Type="System.Int32" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
          <Parameter Name="options" Type="System.Globalization.CompareOptions" />
        </Parameters>
      </Method>
      <Method Name="Compare" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="strA" Type="System.String" />
          <Parameter Name="indexA" Type="System.Int32" />
          <Parameter Name="strB" Type="System.String" />
          <Parameter Name="indexB" Type="System.Int32" />
          <Parameter Name="length" Type="System.Int32" />
          <Parameter Name="comparisonType" Type="System.StringComparison" />
        </Parameters>
      </Method>
      <Method Name="CompareTo" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="CompareTo" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="strB" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="CompareOrdinal" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="strA" Type="System.String" />
          <Parameter Name="strB" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="CompareOrdinal" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="strA" Type="System.String" />
          <Parameter Name="indexA" Type="System.Int32" />
          <Parameter Name="strB" Type="System.String" />
          <Parameter Name="indexB" Type="System.Int32" />
          <Parameter Name="length" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Contains" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="EndsWith" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="EndsWith" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="comparisonType" Type="System.StringComparison" />
        </Parameters>
      </Method>
      <Method Name="EndsWith" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="ignoreCase" Type="System.Boolean" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Char" />
          <Parameter Name="startIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Char" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IndexOfAny" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="anyOf" Type="System.Char[]" />
        </Parameters>
      </Method>
      <Method Name="IndexOfAny" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="anyOf" Type="System.Char[]" />
          <Parameter Name="startIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IndexOfAny" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="anyOf" Type="System.Char[]" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="startIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="comparisonType" Type="System.StringComparison" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="comparisonType" Type="System.StringComparison" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
          <Parameter Name="comparisonType" Type="System.StringComparison" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Char" />
          <Parameter Name="startIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Char" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOfAny" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="anyOf" Type="System.Char[]" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOfAny" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="anyOf" Type="System.Char[]" />
          <Parameter Name="startIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOfAny" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="anyOf" Type="System.Char[]" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="startIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="comparisonType" Type="System.StringComparison" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="comparisonType" Type="System.StringComparison" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
          <Parameter Name="comparisonType" Type="System.StringComparison" />
        </Parameters>
      </Method>
      <Method Name="PadLeft" Return_type="System.String">
        <Parameters>
          <Parameter Name="totalWidth" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="PadLeft" Return_type="System.String">
        <Parameters>
          <Parameter Name="totalWidth" Type="System.Int32" />
          <Parameter Name="paddingChar" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="PadRight" Return_type="System.String">
        <Parameters>
          <Parameter Name="totalWidth" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="PadRight" Return_type="System.String">
        <Parameters>
          <Parameter Name="totalWidth" Type="System.Int32" />
          <Parameter Name="paddingChar" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="StartsWith" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="StartsWith" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="comparisonType" Type="System.StringComparison" />
        </Parameters>
      </Method>
      <Method Name="StartsWith" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="ignoreCase" Type="System.Boolean" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        </Parameters>
      </Method>
      <Method Name="ToLower" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="ToLower" Return_type="System.String">
        <Parameters>
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        </Parameters>
      </Method>
      <Method Name="ToLowerInvariant" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="ToUpper" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="ToUpper" Return_type="System.String">
        <Parameters>
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        </Parameters>
      </Method>
      <Method Name="ToUpperInvariant" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="Clone" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="Trim" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Insert" Return_type="System.String">
        <Parameters>
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Replace" Return_type="System.String">
        <Parameters>
          <Parameter Name="oldChar" Type="System.Char" />
          <Parameter Name="newChar" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="Replace" Return_type="System.String">
        <Parameters>
          <Parameter Name="oldValue" Type="System.String" />
          <Parameter Name="newValue" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Remove" Return_type="System.String">
        <Parameters>
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Remove" Return_type="System.String">
        <Parameters>
          <Parameter Name="startIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Format" Return_type="System.String">
        <Parameters>
          <Parameter Name="format" Type="System.String" />
          <Parameter Name="arg0" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Format" Return_type="System.String">
        <Parameters>
          <Parameter Name="format" Type="System.String" />
          <Parameter Name="arg0" Type="System.Object" />
          <Parameter Name="arg1" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Format" Return_type="System.String">
        <Parameters>
          <Parameter Name="format" Type="System.String" />
          <Parameter Name="arg0" Type="System.Object" />
          <Parameter Name="arg1" Type="System.Object" />
          <Parameter Name="arg2" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Format" Return_type="System.String">
        <Parameters>
          <Parameter Name="format" Type="System.String" />
          <Parameter Name="args" Type="System.Object[]" />
        </Parameters>
      </Method>
      <Method Name="Format" Return_type="System.String">
        <Parameters>
          <Parameter Name="provider" Type="System.IFormatProvider" />
          <Parameter Name="format" Type="System.String" />
          <Parameter Name="arg0" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Format" Return_type="System.String">
        <Parameters>
          <Parameter Name="provider" Type="System.IFormatProvider" />
          <Parameter Name="format" Type="System.String" />
          <Parameter Name="arg0" Type="System.Object" />
          <Parameter Name="arg1" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Format" Return_type="System.String">
        <Parameters>
          <Parameter Name="provider" Type="System.IFormatProvider" />
          <Parameter Name="format" Type="System.String" />
          <Parameter Name="arg0" Type="System.Object" />
          <Parameter Name="arg1" Type="System.Object" />
          <Parameter Name="arg2" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Format" Return_type="System.String">
        <Parameters>
          <Parameter Name="provider" Type="System.IFormatProvider" />
          <Parameter Name="format" Type="System.String" />
          <Parameter Name="args" Type="System.Object[]" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.String">
        <Parameters>
          <Parameter Name="str" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Concat" Return_type="System.String">
        <Parameters>
          <Parameter Name="arg0" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Concat" Return_type="System.String">
        <Parameters>
          <Parameter Name="arg0" Type="System.Object" />
          <Parameter Name="arg1" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Concat" Return_type="System.String">
        <Parameters>
          <Parameter Name="arg0" Type="System.Object" />
          <Parameter Name="arg1" Type="System.Object" />
          <Parameter Name="arg2" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Concat" Return_type="System.String">
        <Parameters>
          <Parameter Name="arg0" Type="System.Object" />
          <Parameter Name="arg1" Type="System.Object" />
          <Parameter Name="arg2" Type="System.Object" />
          <Parameter Name="arg3" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Concat" Return_type="System.String">
        <Parameters>
          <Parameter Name="args" Type="System.Object[]" />
        </Parameters>
      </Method>
      <Method Name="Concat" Return_type="System.String">
        <Parameters>
          <Parameter Name="values" Type="System.Collections.Generic.IEnumerable`1[T]" />
        </Parameters>
      </Method>
      <Method Name="Concat" Return_type="System.String">
        <Parameters>
          <Parameter Name="values" Type="System.Collections.Generic.IEnumerable`1[System.String]" />
        </Parameters>
      </Method>
      <Method Name="Concat" Return_type="System.String">
        <Parameters>
          <Parameter Name="str0" Type="System.String" />
          <Parameter Name="str1" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Concat" Return_type="System.String">
        <Parameters>
          <Parameter Name="str0" Type="System.String" />
          <Parameter Name="str1" Type="System.String" />
          <Parameter Name="str2" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Concat" Return_type="System.String">
        <Parameters>
          <Parameter Name="str0" Type="System.String" />
          <Parameter Name="str1" Type="System.String" />
          <Parameter Name="str2" Type="System.String" />
          <Parameter Name="str3" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Concat" Return_type="System.String">
        <Parameters>
          <Parameter Name="values" Type="System.String[]" />
        </Parameters>
      </Method>
      <Method Name="Intern" Return_type="System.String">
        <Parameters>
          <Parameter Name="str" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="IsInterned" Return_type="System.String">
        <Parameters>
          <Parameter Name="str" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetTypeCode" Return_type="System.TypeCode">
        <Parameters />
      </Method>
      <Method Name="GetEnumerator" Return_type="System.CharEnumerator">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.StringComparer">
    <Properties>
      <Property Name="InvariantCulture" Type="System.StringComparer" />
      <Property Name="InvariantCultureIgnoreCase" Type="System.StringComparer" />
      <Property Name="CurrentCulture" Type="System.StringComparer" />
      <Property Name="CurrentCultureIgnoreCase" Type="System.StringComparer" />
      <Property Name="Ordinal" Type="System.StringComparer" />
      <Property Name="OrdinalIgnoreCase" Type="System.StringComparer" />
    </Properties>
    <Methods>
      <Method Name="get_InvariantCulture" Return_type="System.StringComparer">
        <Parameters />
      </Method>
      <Method Name="get_InvariantCultureIgnoreCase" Return_type="System.StringComparer">
        <Parameters />
      </Method>
      <Method Name="get_CurrentCulture" Return_type="System.StringComparer">
        <Parameters />
      </Method>
      <Method Name="get_CurrentCultureIgnoreCase" Return_type="System.StringComparer">
        <Parameters />
      </Method>
      <Method Name="get_Ordinal" Return_type="System.StringComparer">
        <Parameters />
      </Method>
      <Method Name="get_OrdinalIgnoreCase" Return_type="System.StringComparer">
        <Parameters />
      </Method>
      <Method Name="Create" Return_type="System.StringComparer">
        <Parameters>
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
          <Parameter Name="ignoreCase" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="Compare" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="x" Type="System.Object" />
          <Parameter Name="y" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="x" Type="System.Object" />
          <Parameter Name="y" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Compare" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="x" Type="System.String" />
          <Parameter Name="y" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="x" Type="System.String" />
          <Parameter Name="y" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="obj" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Exception">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Message" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Data" Return_type="System.Collections.IDictionary">
        <Parameters />
      </Method>
      <Method Name="GetBaseException" Return_type="System.Exception">
        <Parameters />
      </Method>
      <Method Name="get_InnerException" Return_type="System.Exception">
        <Parameters />
      </Method>
      <Method Name="get_TargetSite" Return_type="System.Reflection.MethodBase">
        <Parameters />
      </Method>
      <Method Name="get_StackTrace" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_HelpLink" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_HelpLink" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_Source" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Source" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetObjectData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
      <Method Name="get_HResult" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetType" Return_type="System.Type">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.SystemException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.OutOfMemoryException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.StackOverflowException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.DataMisalignedException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.ExecutionEngineException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Delegate">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="DynamicInvoke" Return_type="System.Object">
        <Parameters>
          <Parameter Name="args" Type="System.Object[]" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Combine" Return_type="System.Delegate">
        <Parameters>
          <Parameter Name="a" Type="System.Delegate" />
          <Parameter Name="b" Type="System.Delegate" />
        </Parameters>
      </Method>
      <Method Name="Combine" Return_type="System.Delegate">
        <Parameters>
          <Parameter Name="delegates" Type="System.Delegate[]" />
        </Parameters>
      </Method>
      <Method Name="GetInvocationList" Return_type="System.Delegate[]">
        <Parameters />
      </Method>
      <Method Name="get_Method" Return_type="System.Reflection.MethodInfo">
        <Parameters />
      </Method>
      <Method Name="get_Target" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="Remove" Return_type="System.Delegate">
        <Parameters>
          <Parameter Name="source" Type="System.Delegate" />
          <Parameter Name="value" Type="System.Delegate" />
        </Parameters>
      </Method>
      <Method Name="RemoveAll" Return_type="System.Delegate">
        <Parameters>
          <Parameter Name="source" Type="System.Delegate" />
          <Parameter Name="value" Type="System.Delegate" />
        </Parameters>
      </Method>
      <Method Name="Clone" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="CreateDelegate" Return_type="System.Delegate">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
          <Parameter Name="target" Type="System.Object" />
          <Parameter Name="method" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="CreateDelegate" Return_type="System.Delegate">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
          <Parameter Name="target" Type="System.Object" />
          <Parameter Name="method" Type="System.String" />
          <Parameter Name="ignoreCase" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="CreateDelegate" Return_type="System.Delegate">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
          <Parameter Name="target" Type="System.Object" />
          <Parameter Name="method" Type="System.String" />
          <Parameter Name="ignoreCase" Type="System.Boolean" />
          <Parameter Name="throwOnBindFailure" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="CreateDelegate" Return_type="System.Delegate">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
          <Parameter Name="target" Type="System.Type" />
          <Parameter Name="method" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="CreateDelegate" Return_type="System.Delegate">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
          <Parameter Name="target" Type="System.Type" />
          <Parameter Name="method" Type="System.String" />
          <Parameter Name="ignoreCase" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="CreateDelegate" Return_type="System.Delegate">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
          <Parameter Name="target" Type="System.Type" />
          <Parameter Name="method" Type="System.String" />
          <Parameter Name="ignoreCase" Type="System.Boolean" />
          <Parameter Name="throwOnBindFailure" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="CreateDelegate" Return_type="System.Delegate">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
          <Parameter Name="method" Type="System.Reflection.MethodInfo" />
          <Parameter Name="throwOnBindFailure" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="CreateDelegate" Return_type="System.Delegate">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
          <Parameter Name="firstArgument" Type="System.Object" />
          <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateDelegate" Return_type="System.Delegate">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
          <Parameter Name="firstArgument" Type="System.Object" />
          <Parameter Name="method" Type="System.Reflection.MethodInfo" />
          <Parameter Name="throwOnBindFailure" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="op_Equality" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="d1" Type="System.Delegate" />
          <Parameter Name="d2" Type="System.Delegate" />
        </Parameters>
      </Method>
      <Method Name="op_Inequality" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="d1" Type="System.Delegate" />
          <Parameter Name="d2" Type="System.Delegate" />
        </Parameters>
      </Method>
      <Method Name="GetObjectData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
      <Method Name="CreateDelegate" Return_type="System.Delegate">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
          <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.MulticastDelegate">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="GetObjectData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetInvocationList" Return_type="System.Delegate[]">
        <Parameters />
      </Method>
      <Method Name="op_Equality" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="d1" Type="System.MulticastDelegate" />
          <Parameter Name="d2" Type="System.MulticastDelegate" />
        </Parameters>
      </Method>
      <Method Name="op_Inequality" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="d1" Type="System.MulticastDelegate" />
          <Parameter Name="d2" Type="System.MulticastDelegate" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.MemberAccessException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Activator">
    <Properties />
    <Methods>
      <Method Name="CreateInstance" Return_type="System.Object">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="binder" Type="System.Reflection.Binder" />
          <Parameter Name="args" Type="System.Object[]" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        </Parameters>
      </Method>
      <Method Name="CreateInstance" Return_type="System.Object">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="binder" Type="System.Reflection.Binder" />
          <Parameter Name="args" Type="System.Object[]" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
          <Parameter Name="activationAttributes" Type="System.Object[]" />
        </Parameters>
      </Method>
      <Method Name="CreateInstance" Return_type="System.Object">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
          <Parameter Name="args" Type="System.Object[]" />
        </Parameters>
      </Method>
      <Method Name="CreateInstance" Return_type="System.Object">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
          <Parameter Name="args" Type="System.Object[]" />
          <Parameter Name="activationAttributes" Type="System.Object[]" />
        </Parameters>
      </Method>
      <Method Name="CreateInstance" Return_type="System.Object">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="CreateInstance" Return_type="System.Runtime.Remoting.ObjectHandle">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.String" />
          <Parameter Name="typeName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="CreateInstance" Return_type="System.Runtime.Remoting.ObjectHandle">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.String" />
          <Parameter Name="typeName" Type="System.String" />
          <Parameter Name="activationAttributes" Type="System.Object[]" />
        </Parameters>
      </Method>
      <Method Name="CreateInstance" Return_type="System.Object">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
          <Parameter Name="nonPublic" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="CreateInstance" Return_type="T">
        <Parameters />
      </Method>
      <Method Name="CreateInstanceFrom" Return_type="System.Runtime.Remoting.ObjectHandle">
        <Parameters>
          <Parameter Name="assemblyFile" Type="System.String" />
          <Parameter Name="typeName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="CreateInstanceFrom" Return_type="System.Runtime.Remoting.ObjectHandle">
        <Parameters>
          <Parameter Name="assemblyFile" Type="System.String" />
          <Parameter Name="typeName" Type="System.String" />
          <Parameter Name="activationAttributes" Type="System.Object[]" />
        </Parameters>
      </Method>
      <Method Name="CreateInstance" Return_type="System.Runtime.Remoting.ObjectHandle">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.String" />
          <Parameter Name="typeName" Type="System.String" />
          <Parameter Name="ignoreCase" Type="System.Boolean" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="binder" Type="System.Reflection.Binder" />
          <Parameter Name="args" Type="System.Object[]" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
          <Parameter Name="activationAttributes" Type="System.Object[]" />
          <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="CreateInstance" Return_type="System.Runtime.Remoting.ObjectHandle">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.String" />
          <Parameter Name="typeName" Type="System.String" />
          <Parameter Name="ignoreCase" Type="System.Boolean" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="binder" Type="System.Reflection.Binder" />
          <Parameter Name="args" Type="System.Object[]" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
          <Parameter Name="activationAttributes" Type="System.Object[]" />
        </Parameters>
      </Method>
      <Method Name="CreateInstanceFrom" Return_type="System.Runtime.Remoting.ObjectHandle">
        <Parameters>
          <Parameter Name="assemblyFile" Type="System.String" />
          <Parameter Name="typeName" Type="System.String" />
          <Parameter Name="ignoreCase" Type="System.Boolean" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="binder" Type="System.Reflection.Binder" />
          <Parameter Name="args" Type="System.Object[]" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
          <Parameter Name="activationAttributes" Type="System.Object[]" />
          <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="CreateInstanceFrom" Return_type="System.Runtime.Remoting.ObjectHandle">
        <Parameters>
          <Parameter Name="assemblyFile" Type="System.String" />
          <Parameter Name="typeName" Type="System.String" />
          <Parameter Name="ignoreCase" Type="System.Boolean" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="binder" Type="System.Reflection.Binder" />
          <Parameter Name="args" Type="System.Object[]" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
          <Parameter Name="activationAttributes" Type="System.Object[]" />
        </Parameters>
      </Method>
      <Method Name="CreateInstance" Return_type="System.Runtime.Remoting.ObjectHandle">
        <Parameters>
          <Parameter Name="domain" Type="System.AppDomain" />
          <Parameter Name="assemblyName" Type="System.String" />
          <Parameter Name="typeName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="CreateInstance" Return_type="System.Runtime.Remoting.ObjectHandle">
        <Parameters>
          <Parameter Name="domain" Type="System.AppDomain" />
          <Parameter Name="assemblyName" Type="System.String" />
          <Parameter Name="typeName" Type="System.String" />
          <Parameter Name="ignoreCase" Type="System.Boolean" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="binder" Type="System.Reflection.Binder" />
          <Parameter Name="args" Type="System.Object[]" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
          <Parameter Name="activationAttributes" Type="System.Object[]" />
          <Parameter Name="securityAttributes" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="CreateInstance" Return_type="System.Runtime.Remoting.ObjectHandle">
        <Parameters>
          <Parameter Name="domain" Type="System.AppDomain" />
          <Parameter Name="assemblyName" Type="System.String" />
          <Parameter Name="typeName" Type="System.String" />
          <Parameter Name="ignoreCase" Type="System.Boolean" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="binder" Type="System.Reflection.Binder" />
          <Parameter Name="args" Type="System.Object[]" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
          <Parameter Name="activationAttributes" Type="System.Object[]" />
        </Parameters>
      </Method>
      <Method Name="CreateInstanceFrom" Return_type="System.Runtime.Remoting.ObjectHandle">
        <Parameters>
          <Parameter Name="domain" Type="System.AppDomain" />
          <Parameter Name="assemblyFile" Type="System.String" />
          <Parameter Name="typeName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="CreateInstanceFrom" Return_type="System.Runtime.Remoting.ObjectHandle">
        <Parameters>
          <Parameter Name="domain" Type="System.AppDomain" />
          <Parameter Name="assemblyFile" Type="System.String" />
          <Parameter Name="typeName" Type="System.String" />
          <Parameter Name="ignoreCase" Type="System.Boolean" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="binder" Type="System.Reflection.Binder" />
          <Parameter Name="args" Type="System.Object[]" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
          <Parameter Name="activationAttributes" Type="System.Object[]" />
          <Parameter Name="securityAttributes" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="CreateInstanceFrom" Return_type="System.Runtime.Remoting.ObjectHandle">
        <Parameters>
          <Parameter Name="domain" Type="System.AppDomain" />
          <Parameter Name="assemblyFile" Type="System.String" />
          <Parameter Name="typeName" Type="System.String" />
          <Parameter Name="ignoreCase" Type="System.Boolean" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="binder" Type="System.Reflection.Binder" />
          <Parameter Name="args" Type="System.Object[]" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
          <Parameter Name="activationAttributes" Type="System.Object[]" />
        </Parameters>
      </Method>
      <Method Name="CreateInstance" Return_type="System.Runtime.Remoting.ObjectHandle">
        <Parameters>
          <Parameter Name="activationContext" Type="System.ActivationContext" />
        </Parameters>
      </Method>
      <Method Name="CreateInstance" Return_type="System.Runtime.Remoting.ObjectHandle">
        <Parameters>
          <Parameter Name="activationContext" Type="System.ActivationContext" />
          <Parameter Name="activationCustomData" Type="System.String[]" />
        </Parameters>
      </Method>
      <Method Name="CreateComInstanceFrom" Return_type="System.Runtime.Remoting.ObjectHandle">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.String" />
          <Parameter Name="typeName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="CreateComInstanceFrom" Return_type="System.Runtime.Remoting.ObjectHandle">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.String" />
          <Parameter Name="typeName" Type="System.String" />
          <Parameter Name="hashValue" Type="System.Byte[]" />
          <Parameter Name="hashAlgorithm" Type="System.Configuration.Assemblies.AssemblyHashAlgorithm" />
        </Parameters>
      </Method>
      <Method Name="GetObject" Return_type="System.Object">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
          <Parameter Name="url" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetObject" Return_type="System.Object">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
          <Parameter Name="url" Type="System.String" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.AccessViolationException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.ApplicationException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.ResolveEventArgs">
    <Properties>
      <Property Name="Name" Type="System.String" />
      <Property Name="RequestingAssembly" Type="System.Reflection.Assembly" />
    </Properties>
    <Methods>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_RequestingAssembly" Return_type="System.Reflection.Assembly">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.AssemblyLoadEventArgs">
    <Properties>
      <Property Name="LoadedAssembly" Type="System.Reflection.Assembly" />
    </Properties>
    <Methods>
      <Method Name="get_LoadedAssembly" Return_type="System.Reflection.Assembly">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.ResolveEventHandler">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" Return_type="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="sender" Type="System.Object" />
          <Parameter Name="args" Type="System.ResolveEventArgs" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="sender" Type="System.Object" />
          <Parameter Name="args" Type="System.ResolveEventArgs" />
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="object" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" Return_type="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.AssemblyLoadEventHandler">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="sender" Type="System.Object" />
          <Parameter Name="args" Type="System.AssemblyLoadEventArgs" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="sender" Type="System.Object" />
          <Parameter Name="args" Type="System.AssemblyLoadEventArgs" />
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="object" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.AppDomainInitializer">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="args" Type="System.String[]" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="args" Type="System.String[]" />
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="object" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.AppDomain">
    <Properties>
      <Property Name="DomainManager" Type="System.AppDomainManager" />
      <Property Name="CurrentDomain" Type="System.AppDomain" />
      <Property Name="Evidence" Type="System.Security.Policy.Evidence" />
      <Property Name="FriendlyName" Type="System.String" />
      <Property Name="BaseDirectory" Type="System.String" />
      <Property Name="RelativeSearchPath" Type="System.String" />
      <Property Name="ShadowCopyFiles" Type="System.Boolean" />
      <Property Name="ActivationContext" Type="System.ActivationContext" />
      <Property Name="ApplicationIdentity" Type="System.ApplicationIdentity" />
      <Property Name="ApplicationTrust" Type="System.Security.Policy.ApplicationTrust" />
      <Property Name="DynamicDirectory" Type="System.String" />
      <Property Name="SetupInformation" Type="System.AppDomainSetup" />
      <Property Name="PermissionSet" Type="System.Security.PermissionSet" />
      <Property Name="IsFullyTrusted" Type="System.Boolean" />
      <Property Name="IsHomogenous" Type="System.Boolean" />
      <Property Name="Id" Type="System.Int32" />
      <Property Name="MonitoringIsEnabled" Type="System.Boolean" />
      <Property Name="MonitoringTotalProcessorTime" Type="System.TimeSpan" />
      <Property Name="MonitoringTotalAllocatedMemorySize" Type="System.Int64" />
      <Property Name="MonitoringSurvivedMemorySize" Type="System.Int64" />
      <Property Name="MonitoringSurvivedProcessMemorySize" Type="System.Int64" />
    </Properties>
    <Methods>
      <Method Name="add_AssemblyLoad" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.AssemblyLoadEventHandler" />
        </Parameters>
      </Method>
      <Method Name="remove_AssemblyLoad" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.AssemblyLoadEventHandler" />
        </Parameters>
      </Method>
      <Method Name="add_TypeResolve" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.ResolveEventHandler" />
        </Parameters>
      </Method>
      <Method Name="remove_TypeResolve" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.ResolveEventHandler" />
        </Parameters>
      </Method>
      <Method Name="add_ResourceResolve" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.ResolveEventHandler" />
        </Parameters>
      </Method>
      <Method Name="remove_ResourceResolve" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.ResolveEventHandler" />
        </Parameters>
      </Method>
      <Method Name="add_AssemblyResolve" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.ResolveEventHandler" />
        </Parameters>
      </Method>
      <Method Name="remove_AssemblyResolve" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.ResolveEventHandler" />
        </Parameters>
      </Method>
      <Method Name="add_ReflectionOnlyAssemblyResolve" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.ResolveEventHandler" />
        </Parameters>
      </Method>
      <Method Name="remove_ReflectionOnlyAssemblyResolve" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.ResolveEventHandler" />
        </Parameters>
      </Method>
      <Method Name="get_DomainManager" Return_type="System.AppDomainManager">
        <Parameters />
      </Method>
      <Method Name="DefineDynamicAssembly" Return_type="System.Reflection.Emit.AssemblyBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.AssemblyName" />
          <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" />
        </Parameters>
      </Method>
      <Method Name="DefineDynamicAssembly" Return_type="System.Reflection.Emit.AssemblyBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.AssemblyName" />
          <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" />
          <Parameter Name="assemblyAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.Emit.CustomAttributeBuilder]" />
        </Parameters>
      </Method>
      <Method Name="DefineDynamicAssembly" Return_type="System.Reflection.Emit.AssemblyBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.AssemblyName" />
          <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" />
          <Parameter Name="assemblyAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.Emit.CustomAttributeBuilder]" />
          <Parameter Name="securityContextSource" Type="System.Security.SecurityContextSource" />
        </Parameters>
      </Method>
      <Method Name="DefineDynamicAssembly" Return_type="System.Reflection.Emit.AssemblyBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.AssemblyName" />
          <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" />
          <Parameter Name="dir" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="DefineDynamicAssembly" Return_type="System.Reflection.Emit.AssemblyBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.AssemblyName" />
          <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" />
          <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="DefineDynamicAssembly" Return_type="System.Reflection.Emit.AssemblyBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.AssemblyName" />
          <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" />
          <Parameter Name="requiredPermissions" Type="System.Security.PermissionSet" />
          <Parameter Name="optionalPermissions" Type="System.Security.PermissionSet" />
          <Parameter Name="refusedPermissions" Type="System.Security.PermissionSet" />
        </Parameters>
      </Method>
      <Method Name="DefineDynamicAssembly" Return_type="System.Reflection.Emit.AssemblyBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.AssemblyName" />
          <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" />
          <Parameter Name="dir" Type="System.String" />
          <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="DefineDynamicAssembly" Return_type="System.Reflection.Emit.AssemblyBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.AssemblyName" />
          <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" />
          <Parameter Name="dir" Type="System.String" />
          <Parameter Name="requiredPermissions" Type="System.Security.PermissionSet" />
          <Parameter Name="optionalPermissions" Type="System.Security.PermissionSet" />
          <Parameter Name="refusedPermissions" Type="System.Security.PermissionSet" />
        </Parameters>
      </Method>
      <Method Name="DefineDynamicAssembly" Return_type="System.Reflection.Emit.AssemblyBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.AssemblyName" />
          <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" />
          <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
          <Parameter Name="requiredPermissions" Type="System.Security.PermissionSet" />
          <Parameter Name="optionalPermissions" Type="System.Security.PermissionSet" />
          <Parameter Name="refusedPermissions" Type="System.Security.PermissionSet" />
        </Parameters>
      </Method>
      <Method Name="DefineDynamicAssembly" Return_type="System.Reflection.Emit.AssemblyBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.AssemblyName" />
          <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" />
          <Parameter Name="dir" Type="System.String" />
          <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
          <Parameter Name="requiredPermissions" Type="System.Security.PermissionSet" />
          <Parameter Name="optionalPermissions" Type="System.Security.PermissionSet" />
          <Parameter Name="refusedPermissions" Type="System.Security.PermissionSet" />
        </Parameters>
      </Method>
      <Method Name="DefineDynamicAssembly" Return_type="System.Reflection.Emit.AssemblyBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.AssemblyName" />
          <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" />
          <Parameter Name="dir" Type="System.String" />
          <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
          <Parameter Name="requiredPermissions" Type="System.Security.PermissionSet" />
          <Parameter Name="optionalPermissions" Type="System.Security.PermissionSet" />
          <Parameter Name="refusedPermissions" Type="System.Security.PermissionSet" />
          <Parameter Name="isSynchronized" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="DefineDynamicAssembly" Return_type="System.Reflection.Emit.AssemblyBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.AssemblyName" />
          <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" />
          <Parameter Name="dir" Type="System.String" />
          <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
          <Parameter Name="requiredPermissions" Type="System.Security.PermissionSet" />
          <Parameter Name="optionalPermissions" Type="System.Security.PermissionSet" />
          <Parameter Name="refusedPermissions" Type="System.Security.PermissionSet" />
          <Parameter Name="isSynchronized" Type="System.Boolean" />
          <Parameter Name="assemblyAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.Emit.CustomAttributeBuilder]" />
        </Parameters>
      </Method>
      <Method Name="DefineDynamicAssembly" Return_type="System.Reflection.Emit.AssemblyBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.AssemblyName" />
          <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" />
          <Parameter Name="dir" Type="System.String" />
          <Parameter Name="isSynchronized" Type="System.Boolean" />
          <Parameter Name="assemblyAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.Emit.CustomAttributeBuilder]" />
        </Parameters>
      </Method>
      <Method Name="ApplyPolicy" Return_type="System.String">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="CreateInstance" Return_type="System.Runtime.Remoting.ObjectHandle">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.String" />
          <Parameter Name="typeName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="CreateInstanceFrom" Return_type="System.Runtime.Remoting.ObjectHandle">
        <Parameters>
          <Parameter Name="assemblyFile" Type="System.String" />
          <Parameter Name="typeName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="CreateComInstanceFrom" Return_type="System.Runtime.Remoting.ObjectHandle">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.String" />
          <Parameter Name="typeName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="CreateComInstanceFrom" Return_type="System.Runtime.Remoting.ObjectHandle">
        <Parameters>
          <Parameter Name="assemblyFile" Type="System.String" />
          <Parameter Name="typeName" Type="System.String" />
          <Parameter Name="hashValue" Type="System.Byte[]" />
          <Parameter Name="hashAlgorithm" Type="System.Configuration.Assemblies.AssemblyHashAlgorithm" />
        </Parameters>
      </Method>
      <Method Name="CreateInstance" Return_type="System.Runtime.Remoting.ObjectHandle">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.String" />
          <Parameter Name="typeName" Type="System.String" />
          <Parameter Name="activationAttributes" Type="System.Object[]" />
        </Parameters>
      </Method>
      <Method Name="CreateInstanceFrom" Return_type="System.Runtime.Remoting.ObjectHandle">
        <Parameters>
          <Parameter Name="assemblyFile" Type="System.String" />
          <Parameter Name="typeName" Type="System.String" />
          <Parameter Name="activationAttributes" Type="System.Object[]" />
        </Parameters>
      </Method>
      <Method Name="CreateInstance" Return_type="System.Runtime.Remoting.ObjectHandle">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.String" />
          <Parameter Name="typeName" Type="System.String" />
          <Parameter Name="ignoreCase" Type="System.Boolean" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="binder" Type="System.Reflection.Binder" />
          <Parameter Name="args" Type="System.Object[]" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
          <Parameter Name="activationAttributes" Type="System.Object[]" />
          <Parameter Name="securityAttributes" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="CreateInstance" Return_type="System.Runtime.Remoting.ObjectHandle">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.String" />
          <Parameter Name="typeName" Type="System.String" />
          <Parameter Name="ignoreCase" Type="System.Boolean" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="binder" Type="System.Reflection.Binder" />
          <Parameter Name="args" Type="System.Object[]" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
          <Parameter Name="activationAttributes" Type="System.Object[]" />
        </Parameters>
      </Method>
      <Method Name="CreateInstanceFrom" Return_type="System.Runtime.Remoting.ObjectHandle">
        <Parameters>
          <Parameter Name="assemblyFile" Type="System.String" />
          <Parameter Name="typeName" Type="System.String" />
          <Parameter Name="ignoreCase" Type="System.Boolean" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="binder" Type="System.Reflection.Binder" />
          <Parameter Name="args" Type="System.Object[]" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
          <Parameter Name="activationAttributes" Type="System.Object[]" />
          <Parameter Name="securityAttributes" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="CreateInstanceFrom" Return_type="System.Runtime.Remoting.ObjectHandle">
        <Parameters>
          <Parameter Name="assemblyFile" Type="System.String" />
          <Parameter Name="typeName" Type="System.String" />
          <Parameter Name="ignoreCase" Type="System.Boolean" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="binder" Type="System.Reflection.Binder" />
          <Parameter Name="args" Type="System.Object[]" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
          <Parameter Name="activationAttributes" Type="System.Object[]" />
        </Parameters>
      </Method>
      <Method Name="Load" Return_type="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="assemblyRef" Type="System.Reflection.AssemblyName" />
        </Parameters>
      </Method>
      <Method Name="Load" Return_type="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="assemblyString" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Load" Return_type="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="rawAssembly" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="Load" Return_type="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="rawAssembly" Type="System.Byte[]" />
          <Parameter Name="rawSymbolStore" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="Load" Return_type="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="rawAssembly" Type="System.Byte[]" />
          <Parameter Name="rawSymbolStore" Type="System.Byte[]" />
          <Parameter Name="securityEvidence" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="Load" Return_type="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="assemblyRef" Type="System.Reflection.AssemblyName" />
          <Parameter Name="assemblySecurity" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="Load" Return_type="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="assemblyString" Type="System.String" />
          <Parameter Name="assemblySecurity" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="ExecuteAssembly" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="assemblyFile" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ExecuteAssembly" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="assemblyFile" Type="System.String" />
          <Parameter Name="assemblySecurity" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="ExecuteAssembly" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="assemblyFile" Type="System.String" />
          <Parameter Name="assemblySecurity" Type="System.Security.Policy.Evidence" />
          <Parameter Name="args" Type="System.String[]" />
        </Parameters>
      </Method>
      <Method Name="ExecuteAssembly" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="assemblyFile" Type="System.String" />
          <Parameter Name="args" Type="System.String[]" />
        </Parameters>
      </Method>
      <Method Name="ExecuteAssembly" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="assemblyFile" Type="System.String" />
          <Parameter Name="assemblySecurity" Type="System.Security.Policy.Evidence" />
          <Parameter Name="args" Type="System.String[]" />
          <Parameter Name="hashValue" Type="System.Byte[]" />
          <Parameter Name="hashAlgorithm" Type="System.Configuration.Assemblies.AssemblyHashAlgorithm" />
        </Parameters>
      </Method>
      <Method Name="ExecuteAssembly" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="assemblyFile" Type="System.String" />
          <Parameter Name="args" Type="System.String[]" />
          <Parameter Name="hashValue" Type="System.Byte[]" />
          <Parameter Name="hashAlgorithm" Type="System.Configuration.Assemblies.AssemblyHashAlgorithm" />
        </Parameters>
      </Method>
      <Method Name="ExecuteAssemblyByName" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ExecuteAssemblyByName" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.String" />
          <Parameter Name="assemblySecurity" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="ExecuteAssemblyByName" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.String" />
          <Parameter Name="assemblySecurity" Type="System.Security.Policy.Evidence" />
          <Parameter Name="args" Type="System.String[]" />
        </Parameters>
      </Method>
      <Method Name="ExecuteAssemblyByName" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.String" />
          <Parameter Name="args" Type="System.String[]" />
        </Parameters>
      </Method>
      <Method Name="ExecuteAssemblyByName" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.Reflection.AssemblyName" />
          <Parameter Name="assemblySecurity" Type="System.Security.Policy.Evidence" />
          <Parameter Name="args" Type="System.String[]" />
        </Parameters>
      </Method>
      <Method Name="ExecuteAssemblyByName" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.Reflection.AssemblyName" />
          <Parameter Name="args" Type="System.String[]" />
        </Parameters>
      </Method>
      <Method Name="get_CurrentDomain" Return_type="System.AppDomain">
        <Parameters />
      </Method>
      <Method Name="get_Evidence" Return_type="System.Security.Policy.Evidence">
        <Parameters />
      </Method>
      <Method Name="get_FriendlyName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_BaseDirectory" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_RelativeSearchPath" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ShadowCopyFiles" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetAssemblies" Return_type="System.Reflection.Assembly[]">
        <Parameters />
      </Method>
      <Method Name="ReflectionOnlyGetAssemblies" Return_type="System.Reflection.Assembly[]">
        <Parameters />
      </Method>
      <Method Name="IsFinalizingForUnload" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="AppendPrivatePath" Return_type="System.Void">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ClearPrivatePath" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="ClearShadowCopyPath" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="SetCachePath" Return_type="System.Void">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="SetData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="data" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="SetData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="data" Type="System.Object" />
          <Parameter Name="permission" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="GetData" Return_type="System.Object">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="IsCompatibilitySwitchSet" Return_type="System.Nullable`1[System.Boolean]">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetCurrentThreadId" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Unload" Return_type="System.Void">
        <Parameters>
          <Parameter Name="domain" Type="System.AppDomain" />
        </Parameters>
      </Method>
      <Method Name="SetAppDomainPolicy" Return_type="System.Void">
        <Parameters>
          <Parameter Name="domainPolicy" Type="System.Security.Policy.PolicyLevel" />
        </Parameters>
      </Method>
      <Method Name="get_ActivationContext" Return_type="System.ActivationContext">
        <Parameters />
      </Method>
      <Method Name="get_ApplicationIdentity" Return_type="System.ApplicationIdentity">
        <Parameters />
      </Method>
      <Method Name="get_ApplicationTrust" Return_type="System.Security.Policy.ApplicationTrust">
        <Parameters />
      </Method>
      <Method Name="SetThreadPrincipal" Return_type="System.Void">
        <Parameters>
          <Parameter Name="principal" Type="System.Security.Principal.IPrincipal" />
        </Parameters>
      </Method>
      <Method Name="SetPrincipalPolicy" Return_type="System.Void">
        <Parameters>
          <Parameter Name="policy" Type="System.Security.Principal.PrincipalPolicy" />
        </Parameters>
      </Method>
      <Method Name="InitializeLifetimeService" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="DoCallBack" Return_type="System.Void">
        <Parameters>
          <Parameter Name="callBackDelegate" Type="System.CrossAppDomainDelegate" />
        </Parameters>
      </Method>
      <Method Name="get_DynamicDirectory" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="CreateDomain" Return_type="System.AppDomain">
        <Parameters>
          <Parameter Name="friendlyName" Type="System.String" />
          <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="CreateDomain" Return_type="System.AppDomain">
        <Parameters>
          <Parameter Name="friendlyName" Type="System.String" />
          <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
          <Parameter Name="appBasePath" Type="System.String" />
          <Parameter Name="appRelativeSearchPath" Type="System.String" />
          <Parameter Name="shadowCopyFiles" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="CreateDomain" Return_type="System.AppDomain">
        <Parameters>
          <Parameter Name="friendlyName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="add_ProcessExit" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.EventHandler" />
        </Parameters>
      </Method>
      <Method Name="remove_ProcessExit" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.EventHandler" />
        </Parameters>
      </Method>
      <Method Name="add_DomainUnload" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.EventHandler" />
        </Parameters>
      </Method>
      <Method Name="remove_DomainUnload" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.EventHandler" />
        </Parameters>
      </Method>
      <Method Name="add_UnhandledException" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.UnhandledExceptionEventHandler" />
        </Parameters>
      </Method>
      <Method Name="remove_UnhandledException" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.UnhandledExceptionEventHandler" />
        </Parameters>
      </Method>
      <Method Name="add_FirstChanceException" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.EventHandler`1[System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs]" />
        </Parameters>
      </Method>
      <Method Name="remove_FirstChanceException" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.EventHandler`1[System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs]" />
        </Parameters>
      </Method>
      <Method Name="CreateDomain" Return_type="System.AppDomain">
        <Parameters>
          <Parameter Name="friendlyName" Type="System.String" />
          <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
          <Parameter Name="info" Type="System.AppDomainSetup" />
        </Parameters>
      </Method>
      <Method Name="CreateDomain" Return_type="System.AppDomain">
        <Parameters>
          <Parameter Name="friendlyName" Type="System.String" />
          <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
          <Parameter Name="info" Type="System.AppDomainSetup" />
          <Parameter Name="grantSet" Type="System.Security.PermissionSet" />
          <Parameter Name="fullTrustAssemblies" Type="System.Security.Policy.StrongName[]" />
        </Parameters>
      </Method>
      <Method Name="CreateDomain" Return_type="System.AppDomain">
        <Parameters>
          <Parameter Name="friendlyName" Type="System.String" />
          <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
          <Parameter Name="appBasePath" Type="System.String" />
          <Parameter Name="appRelativeSearchPath" Type="System.String" />
          <Parameter Name="shadowCopyFiles" Type="System.Boolean" />
          <Parameter Name="adInit" Type="System.AppDomainInitializer" />
          <Parameter Name="adInitArgs" Type="System.String[]" />
        </Parameters>
      </Method>
      <Method Name="SetShadowCopyPath" Return_type="System.Void">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="SetShadowCopyFiles" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="SetDynamicBase" Return_type="System.Void">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_SetupInformation" Return_type="System.AppDomainSetup">
        <Parameters />
      </Method>
      <Method Name="get_PermissionSet" Return_type="System.Security.PermissionSet">
        <Parameters />
      </Method>
      <Method Name="get_IsFullyTrusted" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsHomogenous" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="CreateInstanceAndUnwrap" Return_type="System.Object">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.String" />
          <Parameter Name="typeName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="CreateInstanceAndUnwrap" Return_type="System.Object">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.String" />
          <Parameter Name="typeName" Type="System.String" />
          <Parameter Name="activationAttributes" Type="System.Object[]" />
        </Parameters>
      </Method>
      <Method Name="CreateInstanceAndUnwrap" Return_type="System.Object">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.String" />
          <Parameter Name="typeName" Type="System.String" />
          <Parameter Name="ignoreCase" Type="System.Boolean" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="binder" Type="System.Reflection.Binder" />
          <Parameter Name="args" Type="System.Object[]" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
          <Parameter Name="activationAttributes" Type="System.Object[]" />
          <Parameter Name="securityAttributes" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="CreateInstanceAndUnwrap" Return_type="System.Object">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.String" />
          <Parameter Name="typeName" Type="System.String" />
          <Parameter Name="ignoreCase" Type="System.Boolean" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="binder" Type="System.Reflection.Binder" />
          <Parameter Name="args" Type="System.Object[]" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
          <Parameter Name="activationAttributes" Type="System.Object[]" />
        </Parameters>
      </Method>
      <Method Name="CreateInstanceFromAndUnwrap" Return_type="System.Object">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.String" />
          <Parameter Name="typeName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="CreateInstanceFromAndUnwrap" Return_type="System.Object">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.String" />
          <Parameter Name="typeName" Type="System.String" />
          <Parameter Name="activationAttributes" Type="System.Object[]" />
        </Parameters>
      </Method>
      <Method Name="CreateInstanceFromAndUnwrap" Return_type="System.Object">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.String" />
          <Parameter Name="typeName" Type="System.String" />
          <Parameter Name="ignoreCase" Type="System.Boolean" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="binder" Type="System.Reflection.Binder" />
          <Parameter Name="args" Type="System.Object[]" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
          <Parameter Name="activationAttributes" Type="System.Object[]" />
          <Parameter Name="securityAttributes" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="CreateInstanceFromAndUnwrap" Return_type="System.Object">
        <Parameters>
          <Parameter Name="assemblyFile" Type="System.String" />
          <Parameter Name="typeName" Type="System.String" />
          <Parameter Name="ignoreCase" Type="System.Boolean" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="binder" Type="System.Reflection.Binder" />
          <Parameter Name="args" Type="System.Object[]" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
          <Parameter Name="activationAttributes" Type="System.Object[]" />
        </Parameters>
      </Method>
      <Method Name="get_Id" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="IsDefaultAppDomain" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_MonitoringIsEnabled" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_MonitoringIsEnabled" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_MonitoringTotalProcessorTime" Return_type="System.TimeSpan">
        <Parameters />
      </Method>
      <Method Name="get_MonitoringTotalAllocatedMemorySize" Return_type="System.Int64">
        <Parameters />
      </Method>
      <Method Name="get_MonitoringSurvivedMemorySize" Return_type="System.Int64">
        <Parameters />
      </Method>
      <Method Name="get_MonitoringSurvivedProcessMemorySize" Return_type="System.Int64">
        <Parameters />
      </Method>
      <Method Name="GetType" Return_type="System.Type">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.CrossAppDomainDelegate">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="BeginInvoke" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="object" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.AppDomainManager">
    <Properties>
      <Property Name="InitializationFlags" Type="System.AppDomainManagerInitializationOptions" />
      <Property Name="ApplicationActivator" Type="System.Runtime.Hosting.ApplicationActivator" />
      <Property Name="HostSecurityManager" Type="System.Security.HostSecurityManager" />
      <Property Name="HostExecutionContextManager" Type="System.Threading.HostExecutionContextManager" />
      <Property Name="EntryAssembly" Type="System.Reflection.Assembly" />
    </Properties>
    <Methods>
      <Method Name="CreateDomain" Return_type="System.AppDomain">
        <Parameters>
          <Parameter Name="friendlyName" Type="System.String" />
          <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
          <Parameter Name="appDomainInfo" Type="System.AppDomainSetup" />
        </Parameters>
      </Method>
      <Method Name="InitializeNewDomain" Return_type="System.Void">
        <Parameters>
          <Parameter Name="appDomainInfo" Type="System.AppDomainSetup" />
        </Parameters>
      </Method>
      <Method Name="get_InitializationFlags" Return_type="System.AppDomainManagerInitializationOptions">
        <Parameters />
      </Method>
      <Method Name="set_InitializationFlags" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.AppDomainManagerInitializationOptions" />
        </Parameters>
      </Method>
      <Method Name="get_ApplicationActivator" Return_type="System.Runtime.Hosting.ApplicationActivator">
        <Parameters />
      </Method>
      <Method Name="get_HostSecurityManager" Return_type="System.Security.HostSecurityManager">
        <Parameters />
      </Method>
      <Method Name="get_HostExecutionContextManager" Return_type="System.Threading.HostExecutionContextManager">
        <Parameters />
      </Method>
      <Method Name="get_EntryAssembly" Return_type="System.Reflection.Assembly">
        <Parameters />
      </Method>
      <Method Name="CheckSecuritySettings" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="state" Type="System.Security.SecurityState" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.AppDomainSetup">
    <Properties>
      <Property Name="AppDomainManagerAssembly" Type="System.String" />
      <Property Name="AppDomainManagerType" Type="System.String" />
      <Property Name="PartialTrustVisibleAssemblies" Type="System.String[]" />
      <Property Name="ApplicationBase" Type="System.String" />
      <Property Name="ConfigurationFile" Type="System.String" />
      <Property Name="TargetFrameworkName" Type="System.String" />
      <Property Name="DynamicBase" Type="System.String" />
      <Property Name="DisallowPublisherPolicy" Type="System.Boolean" />
      <Property Name="DisallowBindingRedirects" Type="System.Boolean" />
      <Property Name="DisallowCodeDownload" Type="System.Boolean" />
      <Property Name="DisallowApplicationBaseProbing" Type="System.Boolean" />
      <Property Name="ApplicationName" Type="System.String" />
      <Property Name="AppDomainInitializer" Type="System.AppDomainInitializer" />
      <Property Name="AppDomainInitializerArguments" Type="System.String[]" />
      <Property Name="ActivationArguments" Type="System.Runtime.Hosting.ActivationArguments" />
      <Property Name="ApplicationTrust" Type="System.Security.Policy.ApplicationTrust" />
      <Property Name="PrivateBinPath" Type="System.String" />
      <Property Name="PrivateBinPathProbe" Type="System.String" />
      <Property Name="ShadowCopyDirectories" Type="System.String" />
      <Property Name="ShadowCopyFiles" Type="System.String" />
      <Property Name="CachePath" Type="System.String" />
      <Property Name="LicenseFile" Type="System.String" />
      <Property Name="LoaderOptimization" Type="System.LoaderOptimization" />
      <Property Name="SandboxInterop" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_AppDomainManagerAssembly" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_AppDomainManagerAssembly" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_AppDomainManagerType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_AppDomainManagerType" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_PartialTrustVisibleAssemblies" Return_type="System.String[]">
        <Parameters />
      </Method>
      <Method Name="set_PartialTrustVisibleAssemblies" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String[]" />
        </Parameters>
      </Method>
      <Method Name="get_ApplicationBase" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_ApplicationBase" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_ConfigurationFile" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_ConfigurationFile" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetConfigurationBytes" Return_type="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="SetConfigurationBytes" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="SetCompatibilitySwitches" Return_type="System.Void">
        <Parameters>
          <Parameter Name="switches" Type="System.Collections.Generic.IEnumerable`1[System.String]" />
        </Parameters>
      </Method>
      <Method Name="get_TargetFrameworkName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_TargetFrameworkName" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="SetNativeFunction" Return_type="System.Void">
        <Parameters>
          <Parameter Name="functionName" Type="System.String" />
          <Parameter Name="functionVersion" Type="System.Int32" />
          <Parameter Name="functionPointer" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="get_DynamicBase" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_DynamicBase" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_DisallowPublisherPolicy" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_DisallowPublisherPolicy" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_DisallowBindingRedirects" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_DisallowBindingRedirects" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_DisallowCodeDownload" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_DisallowCodeDownload" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_DisallowApplicationBaseProbing" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_DisallowApplicationBaseProbing" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_ApplicationName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_ApplicationName" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_AppDomainInitializer" Return_type="System.AppDomainInitializer">
        <Parameters />
      </Method>
      <Method Name="set_AppDomainInitializer" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.AppDomainInitializer" />
        </Parameters>
      </Method>
      <Method Name="get_AppDomainInitializerArguments" Return_type="System.String[]">
        <Parameters />
      </Method>
      <Method Name="set_AppDomainInitializerArguments" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String[]" />
        </Parameters>
      </Method>
      <Method Name="get_ActivationArguments" Return_type="System.Runtime.Hosting.ActivationArguments">
        <Parameters />
      </Method>
      <Method Name="set_ActivationArguments" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Runtime.Hosting.ActivationArguments" />
        </Parameters>
      </Method>
      <Method Name="get_ApplicationTrust" Return_type="System.Security.Policy.ApplicationTrust">
        <Parameters />
      </Method>
      <Method Name="set_ApplicationTrust" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Policy.ApplicationTrust" />
        </Parameters>
      </Method>
      <Method Name="get_PrivateBinPath" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_PrivateBinPath" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_PrivateBinPathProbe" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_PrivateBinPathProbe" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_ShadowCopyDirectories" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_ShadowCopyDirectories" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_ShadowCopyFiles" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_ShadowCopyFiles" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_CachePath" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_CachePath" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_LicenseFile" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_LicenseFile" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_LoaderOptimization" Return_type="System.LoaderOptimization">
        <Parameters />
      </Method>
      <Method Name="set_LoaderOptimization" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.LoaderOptimization" />
        </Parameters>
      </Method>
      <Method Name="get_SandboxInterop" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_SandboxInterop" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.LoaderOptimizationAttribute">
    <Properties>
      <Property Name="Value" Type="System.LoaderOptimization" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" Return_type="System.LoaderOptimization">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.AppDomainUnloadedException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.ActivationContext">
    <Properties>
      <Property Name="Identity" Type="System.ApplicationIdentity" />
      <Property Name="Form" Type="System.ActivationContext+ContextForm" />
      <Property Name="ApplicationManifestBytes" Type="System.Byte[]" />
      <Property Name="DeploymentManifestBytes" Type="System.Byte[]" />
    </Properties>
    <Methods>
      <Method Name="CreatePartialActivationContext" Return_type="System.ActivationContext">
        <Parameters>
          <Parameter Name="identity" Type="System.ApplicationIdentity" />
        </Parameters>
      </Method>
      <Method Name="CreatePartialActivationContext" Return_type="System.ActivationContext">
        <Parameters>
          <Parameter Name="identity" Type="System.ApplicationIdentity" />
          <Parameter Name="manifestPaths" Type="System.String[]" />
        </Parameters>
      </Method>
      <Method Name="get_Identity" Return_type="System.ApplicationIdentity">
        <Parameters />
      </Method>
      <Method Name="get_Form" Return_type="System.ActivationContext+ContextForm">
        <Parameters />
      </Method>
      <Method Name="get_ApplicationManifestBytes" Return_type="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="get_DeploymentManifestBytes" Return_type="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="Dispose" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.ApplicationIdentity">
    <Properties>
      <Property Name="FullName" Type="System.String" />
      <Property Name="CodeBase" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_FullName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_CodeBase" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.ApplicationId">
    <Properties>
      <Property Name="PublicKeyToken" Type="System.Byte[]" />
      <Property Name="Name" Type="System.String" />
      <Property Name="Version" Type="System.Version" />
      <Property Name="ProcessorArchitecture" Type="System.String" />
      <Property Name="Culture" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_PublicKeyToken" Return_type="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Version" Return_type="System.Version">
        <Parameters />
      </Method>
      <Method Name="get_ProcessorArchitecture" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Culture" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Copy" Return_type="System.ApplicationId">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.ArgumentException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="ParamName" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Message" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ParamName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetObjectData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.ArgumentNullException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="ParamName" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.ArgumentOutOfRangeException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="ActualValue" Type="System.Object" />
      <Property Name="ParamName" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Message" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ActualValue" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="GetObjectData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.ArithmeticException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.ArrayTypeMismatchException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.AsyncCallback">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="ar" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="ar" Type="System.IAsyncResult" />
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="object" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Attribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="GetCustomAttributes" Return_type="System.Attribute[]">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.MemberInfo" />
          <Parameter Name="type" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Attribute[]">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.MemberInfo" />
          <Parameter Name="type" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Attribute[]">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Attribute[]">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.MemberInfo" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="IsDefined" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.MemberInfo" />
          <Parameter Name="attributeType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="IsDefined" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.MemberInfo" />
          <Parameter Name="attributeType" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttribute" Return_type="System.Attribute">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.MemberInfo" />
          <Parameter Name="attributeType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttribute" Return_type="System.Attribute">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.MemberInfo" />
          <Parameter Name="attributeType" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Attribute[]">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Attribute[]">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
          <Parameter Name="attributeType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Attribute[]">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
          <Parameter Name="attributeType" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Attribute[]">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="IsDefined" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
          <Parameter Name="attributeType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="IsDefined" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
          <Parameter Name="attributeType" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttribute" Return_type="System.Attribute">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
          <Parameter Name="attributeType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttribute" Return_type="System.Attribute">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
          <Parameter Name="attributeType" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Attribute[]">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.Module" />
          <Parameter Name="attributeType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Attribute[]">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.Module" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Attribute[]">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.Module" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Attribute[]">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.Module" />
          <Parameter Name="attributeType" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="IsDefined" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.Module" />
          <Parameter Name="attributeType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="IsDefined" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.Module" />
          <Parameter Name="attributeType" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttribute" Return_type="System.Attribute">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.Module" />
          <Parameter Name="attributeType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttribute" Return_type="System.Attribute">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.Module" />
          <Parameter Name="attributeType" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Attribute[]">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.Assembly" />
          <Parameter Name="attributeType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Attribute[]">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.Assembly" />
          <Parameter Name="attributeType" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Attribute[]">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.Assembly" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Attribute[]">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.Assembly" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="IsDefined" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.Assembly" />
          <Parameter Name="attributeType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="IsDefined" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.Assembly" />
          <Parameter Name="attributeType" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttribute" Return_type="System.Attribute">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.Assembly" />
          <Parameter Name="attributeType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttribute" Return_type="System.Attribute">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.Assembly" />
          <Parameter Name="attributeType" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_TypeId" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="Match" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="IsDefaultAttribute" Return_type="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.AttributeUsageAttribute">
    <Properties>
      <Property Name="ValidOn" Type="System.AttributeTargets" />
      <Property Name="AllowMultiple" Type="System.Boolean" />
      <Property Name="Inherited" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_ValidOn" Return_type="System.AttributeTargets">
        <Parameters />
      </Method>
      <Method Name="get_AllowMultiple" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_AllowMultiple" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_Inherited" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_Inherited" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.BadImageFormatException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="FileName" Type="System.String" />
      <Property Name="FusionLog" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Message" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_FileName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_FusionLog" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetObjectData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.BitConverter">
    <Properties />
    <Methods>
      <Method Name="GetBytes" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="value" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="value" Type="System.Int16" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="value" Type="System.UInt16" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="value" Type="System.UInt32" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="value" Type="System.UInt64" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="value" Type="System.Single" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="value" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="ToChar" Return_type="System.Char">
        <Parameters>
          <Parameter Name="value" Type="System.Byte[]" />
          <Parameter Name="startIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToInt16" Return_type="System.Int16">
        <Parameters>
          <Parameter Name="value" Type="System.Byte[]" />
          <Parameter Name="startIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToInt32" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Byte[]" />
          <Parameter Name="startIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToInt64" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="value" Type="System.Byte[]" />
          <Parameter Name="startIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToUInt16" Return_type="System.UInt16">
        <Parameters>
          <Parameter Name="value" Type="System.Byte[]" />
          <Parameter Name="startIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToUInt32" Return_type="System.UInt32">
        <Parameters>
          <Parameter Name="value" Type="System.Byte[]" />
          <Parameter Name="startIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToUInt64" Return_type="System.UInt64">
        <Parameters>
          <Parameter Name="value" Type="System.Byte[]" />
          <Parameter Name="startIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToSingle" Return_type="System.Single">
        <Parameters>
          <Parameter Name="value" Type="System.Byte[]" />
          <Parameter Name="startIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToDouble" Return_type="System.Double">
        <Parameters>
          <Parameter Name="value" Type="System.Byte[]" />
          <Parameter Name="startIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="value" Type="System.Byte[]" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="length" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="value" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="value" Type="System.Byte[]" />
          <Parameter Name="startIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToBoolean" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Byte[]" />
          <Parameter Name="startIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="DoubleToInt64Bits" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="value" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="Int64BitsToDouble" Return_type="System.Double">
        <Parameters>
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Buffer">
    <Properties />
    <Methods>
      <Method Name="BlockCopy" Return_type="System.Void">
        <Parameters>
          <Parameter Name="src" Type="System.Array" />
          <Parameter Name="srcOffset" Type="System.Int32" />
          <Parameter Name="dst" Type="System.Array" />
          <Parameter Name="dstOffset" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetByte" Return_type="System.Byte">
        <Parameters>
          <Parameter Name="array" Type="System.Array" />
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="SetByte" Return_type="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Array" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="value" Type="System.Byte" />
        </Parameters>
      </Method>
      <Method Name="ByteLength" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="array" Type="System.Array" />
        </Parameters>
      </Method>
      <Method Name="MemoryCopy" Return_type="System.Void">
        <Parameters>
          <Parameter Name="source" Type="System.Void*" />
          <Parameter Name="destination" Type="System.Void*" />
          <Parameter Name="destinationSizeInBytes" Type="System.Int64" />
          <Parameter Name="sourceBytesToCopy" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="MemoryCopy" Return_type="System.Void">
        <Parameters>
          <Parameter Name="source" Type="System.Void*" />
          <Parameter Name="destination" Type="System.Void*" />
          <Parameter Name="destinationSizeInBytes" Type="System.UInt64" />
          <Parameter Name="sourceBytesToCopy" Type="System.UInt64" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.CannotUnloadAppDomainException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.CharEnumerator">
    <Properties>
      <Property Name="Current" Type="System.Char" />
    </Properties>
    <Methods>
      <Method Name="Clone" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="MoveNext" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Dispose" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_Current" Return_type="System.Char">
        <Parameters />
      </Method>
      <Method Name="Reset" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.CLSCompliantAttribute">
    <Properties>
      <Property Name="IsCompliant" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_IsCompliant" Return_type="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.TypeUnloadedException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.__ComObject">
    <Properties />
    <Methods>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Console">
    <Properties>
      <Property Name="IsInputRedirected" Type="System.Boolean" />
      <Property Name="IsOutputRedirected" Type="System.Boolean" />
      <Property Name="IsErrorRedirected" Type="System.Boolean" />
      <Property Name="In" Type="System.IO.TextReader" />
      <Property Name="Out" Type="System.IO.TextWriter" />
      <Property Name="Error" Type="System.IO.TextWriter" />
      <Property Name="InputEncoding" Type="System.Text.Encoding" />
      <Property Name="OutputEncoding" Type="System.Text.Encoding" />
      <Property Name="BackgroundColor" Type="System.ConsoleColor" />
      <Property Name="ForegroundColor" Type="System.ConsoleColor" />
      <Property Name="BufferHeight" Type="System.Int32" />
      <Property Name="BufferWidth" Type="System.Int32" />
      <Property Name="WindowHeight" Type="System.Int32" />
      <Property Name="WindowWidth" Type="System.Int32" />
      <Property Name="LargestWindowWidth" Type="System.Int32" />
      <Property Name="LargestWindowHeight" Type="System.Int32" />
      <Property Name="WindowLeft" Type="System.Int32" />
      <Property Name="WindowTop" Type="System.Int32" />
      <Property Name="CursorLeft" Type="System.Int32" />
      <Property Name="CursorTop" Type="System.Int32" />
      <Property Name="CursorSize" Type="System.Int32" />
      <Property Name="CursorVisible" Type="System.Boolean" />
      <Property Name="Title" Type="System.String" />
      <Property Name="KeyAvailable" Type="System.Boolean" />
      <Property Name="NumberLock" Type="System.Boolean" />
      <Property Name="CapsLock" Type="System.Boolean" />
      <Property Name="TreatControlCAsInput" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_IsInputRedirected" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsOutputRedirected" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsErrorRedirected" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_In" Return_type="System.IO.TextReader">
        <Parameters />
      </Method>
      <Method Name="get_Out" Return_type="System.IO.TextWriter">
        <Parameters />
      </Method>
      <Method Name="get_Error" Return_type="System.IO.TextWriter">
        <Parameters />
      </Method>
      <Method Name="get_InputEncoding" Return_type="System.Text.Encoding">
        <Parameters />
      </Method>
      <Method Name="set_InputEncoding" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Text.Encoding" />
        </Parameters>
      </Method>
      <Method Name="get_OutputEncoding" Return_type="System.Text.Encoding">
        <Parameters />
      </Method>
      <Method Name="set_OutputEncoding" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Text.Encoding" />
        </Parameters>
      </Method>
      <Method Name="Beep" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Beep" Return_type="System.Void">
        <Parameters>
          <Parameter Name="frequency" Type="System.Int32" />
          <Parameter Name="duration" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Clear" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_BackgroundColor" Return_type="System.ConsoleColor">
        <Parameters />
      </Method>
      <Method Name="set_BackgroundColor" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.ConsoleColor" />
        </Parameters>
      </Method>
      <Method Name="get_ForegroundColor" Return_type="System.ConsoleColor">
        <Parameters />
      </Method>
      <Method Name="set_ForegroundColor" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.ConsoleColor" />
        </Parameters>
      </Method>
      <Method Name="ResetColor" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="MoveBufferArea" Return_type="System.Void">
        <Parameters>
          <Parameter Name="sourceLeft" Type="System.Int32" />
          <Parameter Name="sourceTop" Type="System.Int32" />
          <Parameter Name="sourceWidth" Type="System.Int32" />
          <Parameter Name="sourceHeight" Type="System.Int32" />
          <Parameter Name="targetLeft" Type="System.Int32" />
          <Parameter Name="targetTop" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="MoveBufferArea" Return_type="System.Void">
        <Parameters>
          <Parameter Name="sourceLeft" Type="System.Int32" />
          <Parameter Name="sourceTop" Type="System.Int32" />
          <Parameter Name="sourceWidth" Type="System.Int32" />
          <Parameter Name="sourceHeight" Type="System.Int32" />
          <Parameter Name="targetLeft" Type="System.Int32" />
          <Parameter Name="targetTop" Type="System.Int32" />
          <Parameter Name="sourceChar" Type="System.Char" />
          <Parameter Name="sourceForeColor" Type="System.ConsoleColor" />
          <Parameter Name="sourceBackColor" Type="System.ConsoleColor" />
        </Parameters>
      </Method>
      <Method Name="get_BufferHeight" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_BufferHeight" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_BufferWidth" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_BufferWidth" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="SetBufferSize" Return_type="System.Void">
        <Parameters>
          <Parameter Name="width" Type="System.Int32" />
          <Parameter Name="height" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_WindowHeight" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_WindowHeight" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_WindowWidth" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_WindowWidth" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="SetWindowSize" Return_type="System.Void">
        <Parameters>
          <Parameter Name="width" Type="System.Int32" />
          <Parameter Name="height" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_LargestWindowWidth" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_LargestWindowHeight" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_WindowLeft" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_WindowLeft" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_WindowTop" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_WindowTop" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="SetWindowPosition" Return_type="System.Void">
        <Parameters>
          <Parameter Name="left" Type="System.Int32" />
          <Parameter Name="top" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_CursorLeft" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_CursorLeft" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_CursorTop" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_CursorTop" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="SetCursorPosition" Return_type="System.Void">
        <Parameters>
          <Parameter Name="left" Type="System.Int32" />
          <Parameter Name="top" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_CursorSize" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_CursorSize" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_CursorVisible" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_CursorVisible" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_Title" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Title" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ReadKey" Return_type="System.ConsoleKeyInfo">
        <Parameters />
      </Method>
      <Method Name="ReadKey" Return_type="System.ConsoleKeyInfo">
        <Parameters>
          <Parameter Name="intercept" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_KeyAvailable" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_NumberLock" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CapsLock" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_TreatControlCAsInput" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_TreatControlCAsInput" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="add_CancelKeyPress" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.ConsoleCancelEventHandler" />
        </Parameters>
      </Method>
      <Method Name="remove_CancelKeyPress" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.ConsoleCancelEventHandler" />
        </Parameters>
      </Method>
      <Method Name="OpenStandardError" Return_type="System.IO.Stream">
        <Parameters />
      </Method>
      <Method Name="OpenStandardError" Return_type="System.IO.Stream">
        <Parameters>
          <Parameter Name="bufferSize" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="OpenStandardInput" Return_type="System.IO.Stream">
        <Parameters />
      </Method>
      <Method Name="OpenStandardInput" Return_type="System.IO.Stream">
        <Parameters>
          <Parameter Name="bufferSize" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="OpenStandardOutput" Return_type="System.IO.Stream">
        <Parameters />
      </Method>
      <Method Name="OpenStandardOutput" Return_type="System.IO.Stream">
        <Parameters>
          <Parameter Name="bufferSize" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="SetIn" Return_type="System.Void">
        <Parameters>
          <Parameter Name="newIn" Type="System.IO.TextReader" />
        </Parameters>
      </Method>
      <Method Name="SetOut" Return_type="System.Void">
        <Parameters>
          <Parameter Name="newOut" Type="System.IO.TextWriter" />
        </Parameters>
      </Method>
      <Method Name="SetError" Return_type="System.Void">
        <Parameters>
          <Parameter Name="newError" Type="System.IO.TextWriter" />
        </Parameters>
      </Method>
      <Method Name="Read" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ReadLine" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="WriteLine" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="WriteLine" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" Return_type="System.Void">
        <Parameters>
          <Parameter Name="buffer" Type="System.Char[]" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" Return_type="System.Void">
        <Parameters>
          <Parameter Name="buffer" Type="System.Char[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Decimal" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Single" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.UInt32" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.UInt64" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" Return_type="System.Void">
        <Parameters>
          <Parameter Name="format" Type="System.String" />
          <Parameter Name="arg0" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" Return_type="System.Void">
        <Parameters>
          <Parameter Name="format" Type="System.String" />
          <Parameter Name="arg0" Type="System.Object" />
          <Parameter Name="arg1" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" Return_type="System.Void">
        <Parameters>
          <Parameter Name="format" Type="System.String" />
          <Parameter Name="arg0" Type="System.Object" />
          <Parameter Name="arg1" Type="System.Object" />
          <Parameter Name="arg2" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" Return_type="System.Void">
        <Parameters>
          <Parameter Name="format" Type="System.String" />
          <Parameter Name="arg0" Type="System.Object" />
          <Parameter Name="arg1" Type="System.Object" />
          <Parameter Name="arg2" Type="System.Object" />
          <Parameter Name="arg3" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" Return_type="System.Void">
        <Parameters>
          <Parameter Name="format" Type="System.String" />
          <Parameter Name="arg" Type="System.Object[]" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="format" Type="System.String" />
          <Parameter Name="arg0" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="format" Type="System.String" />
          <Parameter Name="arg0" Type="System.Object" />
          <Parameter Name="arg1" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="format" Type="System.String" />
          <Parameter Name="arg0" Type="System.Object" />
          <Parameter Name="arg1" Type="System.Object" />
          <Parameter Name="arg2" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="format" Type="System.String" />
          <Parameter Name="arg0" Type="System.Object" />
          <Parameter Name="arg1" Type="System.Object" />
          <Parameter Name="arg2" Type="System.Object" />
          <Parameter Name="arg3" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="format" Type="System.String" />
          <Parameter Name="arg" Type="System.Object[]" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="buffer" Type="System.Char[]" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="buffer" Type="System.Char[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Decimal" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Single" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.UInt32" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.UInt64" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.ConsoleCancelEventHandler">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="sender" Type="System.Object" />
          <Parameter Name="e" Type="System.ConsoleCancelEventArgs" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="sender" Type="System.Object" />
          <Parameter Name="e" Type="System.ConsoleCancelEventArgs" />
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="object" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.ConsoleCancelEventArgs">
    <Properties>
      <Property Name="Cancel" Type="System.Boolean" />
      <Property Name="SpecialKey" Type="System.ConsoleSpecialKey" />
    </Properties>
    <Methods>
      <Method Name="get_Cancel" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_Cancel" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_SpecialKey" Return_type="System.ConsoleSpecialKey">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.ContextMarshalException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Convert">
    <Properties />
    <Methods>
      <Method Name="GetTypeCode" Return_type="System.TypeCode">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="IsDBNull" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="ChangeType" Return_type="System.Object">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="typeCode" Type="System.TypeCode" />
        </Parameters>
      </Method>
      <Method Name="ChangeType" Return_type="System.Object">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="typeCode" Type="System.TypeCode" />
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="ChangeType" Return_type="System.Object">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="conversionType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="ChangeType" Return_type="System.Object">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="conversionType" Type="System.Type" />
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="ToBoolean" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="ToBoolean" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="ToBoolean" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="ToBoolean" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.SByte" />
        </Parameters>
      </Method>
      <Method Name="ToBoolean" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="ToBoolean" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Byte" />
        </Parameters>
      </Method>
      <Method Name="ToBoolean" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Int16" />
        </Parameters>
      </Method>
      <Method Name="ToBoolean" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.UInt16" />
        </Parameters>
      </Method>
      <Method Name="ToBoolean" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToBoolean" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.UInt32" />
        </Parameters>
      </Method>
      <Method Name="ToBoolean" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="ToBoolean" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.UInt64" />
        </Parameters>
      </Method>
      <Method Name="ToBoolean" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ToBoolean" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="ToBoolean" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Single" />
        </Parameters>
      </Method>
      <Method Name="ToBoolean" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="ToBoolean" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Decimal" />
        </Parameters>
      </Method>
      <Method Name="ToBoolean" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="ToChar" Return_type="System.Char">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="ToChar" Return_type="System.Char">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="ToChar" Return_type="System.Char">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="ToChar" Return_type="System.Char">
        <Parameters>
          <Parameter Name="value" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="ToChar" Return_type="System.Char">
        <Parameters>
          <Parameter Name="value" Type="System.SByte" />
        </Parameters>
      </Method>
      <Method Name="ToChar" Return_type="System.Char">
        <Parameters>
          <Parameter Name="value" Type="System.Byte" />
        </Parameters>
      </Method>
      <Method Name="ToChar" Return_type="System.Char">
        <Parameters>
          <Parameter Name="value" Type="System.Int16" />
        </Parameters>
      </Method>
      <Method Name="ToChar" Return_type="System.Char">
        <Parameters>
          <Parameter Name="value" Type="System.UInt16" />
        </Parameters>
      </Method>
      <Method Name="ToChar" Return_type="System.Char">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToChar" Return_type="System.Char">
        <Parameters>
          <Parameter Name="value" Type="System.UInt32" />
        </Parameters>
      </Method>
      <Method Name="ToChar" Return_type="System.Char">
        <Parameters>
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="ToChar" Return_type="System.Char">
        <Parameters>
          <Parameter Name="value" Type="System.UInt64" />
        </Parameters>
      </Method>
      <Method Name="ToChar" Return_type="System.Char">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ToChar" Return_type="System.Char">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="ToChar" Return_type="System.Char">
        <Parameters>
          <Parameter Name="value" Type="System.Single" />
        </Parameters>
      </Method>
      <Method Name="ToChar" Return_type="System.Char">
        <Parameters>
          <Parameter Name="value" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="ToChar" Return_type="System.Char">
        <Parameters>
          <Parameter Name="value" Type="System.Decimal" />
        </Parameters>
      </Method>
      <Method Name="ToChar" Return_type="System.Char">
        <Parameters>
          <Parameter Name="value" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="ToSByte" Return_type="System.SByte">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="ToSByte" Return_type="System.SByte">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="ToSByte" Return_type="System.SByte">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="ToSByte" Return_type="System.SByte">
        <Parameters>
          <Parameter Name="value" Type="System.SByte" />
        </Parameters>
      </Method>
      <Method Name="ToSByte" Return_type="System.SByte">
        <Parameters>
          <Parameter Name="value" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="ToSByte" Return_type="System.SByte">
        <Parameters>
          <Parameter Name="value" Type="System.Byte" />
        </Parameters>
      </Method>
      <Method Name="ToSByte" Return_type="System.SByte">
        <Parameters>
          <Parameter Name="value" Type="System.Int16" />
        </Parameters>
      </Method>
      <Method Name="ToSByte" Return_type="System.SByte">
        <Parameters>
          <Parameter Name="value" Type="System.UInt16" />
        </Parameters>
      </Method>
      <Method Name="ToSByte" Return_type="System.SByte">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToSByte" Return_type="System.SByte">
        <Parameters>
          <Parameter Name="value" Type="System.UInt32" />
        </Parameters>
      </Method>
      <Method Name="ToSByte" Return_type="System.SByte">
        <Parameters>
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="ToSByte" Return_type="System.SByte">
        <Parameters>
          <Parameter Name="value" Type="System.UInt64" />
        </Parameters>
      </Method>
      <Method Name="ToSByte" Return_type="System.SByte">
        <Parameters>
          <Parameter Name="value" Type="System.Single" />
        </Parameters>
      </Method>
      <Method Name="ToSByte" Return_type="System.SByte">
        <Parameters>
          <Parameter Name="value" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="ToSByte" Return_type="System.SByte">
        <Parameters>
          <Parameter Name="value" Type="System.Decimal" />
        </Parameters>
      </Method>
      <Method Name="ToSByte" Return_type="System.SByte">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ToSByte" Return_type="System.SByte">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="ToSByte" Return_type="System.SByte">
        <Parameters>
          <Parameter Name="value" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="ToByte" Return_type="System.Byte">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="ToByte" Return_type="System.Byte">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="ToByte" Return_type="System.Byte">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="ToByte" Return_type="System.Byte">
        <Parameters>
          <Parameter Name="value" Type="System.Byte" />
        </Parameters>
      </Method>
      <Method Name="ToByte" Return_type="System.Byte">
        <Parameters>
          <Parameter Name="value" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="ToByte" Return_type="System.Byte">
        <Parameters>
          <Parameter Name="value" Type="System.SByte" />
        </Parameters>
      </Method>
      <Method Name="ToByte" Return_type="System.Byte">
        <Parameters>
          <Parameter Name="value" Type="System.Int16" />
        </Parameters>
      </Method>
      <Method Name="ToByte" Return_type="System.Byte">
        <Parameters>
          <Parameter Name="value" Type="System.UInt16" />
        </Parameters>
      </Method>
      <Method Name="ToByte" Return_type="System.Byte">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToByte" Return_type="System.Byte">
        <Parameters>
          <Parameter Name="value" Type="System.UInt32" />
        </Parameters>
      </Method>
      <Method Name="ToByte" Return_type="System.Byte">
        <Parameters>
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="ToByte" Return_type="System.Byte">
        <Parameters>
          <Parameter Name="value" Type="System.UInt64" />
        </Parameters>
      </Method>
      <Method Name="ToByte" Return_type="System.Byte">
        <Parameters>
          <Parameter Name="value" Type="System.Single" />
        </Parameters>
      </Method>
      <Method Name="ToByte" Return_type="System.Byte">
        <Parameters>
          <Parameter Name="value" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="ToByte" Return_type="System.Byte">
        <Parameters>
          <Parameter Name="value" Type="System.Decimal" />
        </Parameters>
      </Method>
      <Method Name="ToByte" Return_type="System.Byte">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ToByte" Return_type="System.Byte">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="ToByte" Return_type="System.Byte">
        <Parameters>
          <Parameter Name="value" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="ToInt16" Return_type="System.Int16">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="ToInt16" Return_type="System.Int16">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="ToInt16" Return_type="System.Int16">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="ToInt16" Return_type="System.Int16">
        <Parameters>
          <Parameter Name="value" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="ToInt16" Return_type="System.Int16">
        <Parameters>
          <Parameter Name="value" Type="System.SByte" />
        </Parameters>
      </Method>
      <Method Name="ToInt16" Return_type="System.Int16">
        <Parameters>
          <Parameter Name="value" Type="System.Byte" />
        </Parameters>
      </Method>
      <Method Name="ToInt16" Return_type="System.Int16">
        <Parameters>
          <Parameter Name="value" Type="System.UInt16" />
        </Parameters>
      </Method>
      <Method Name="ToInt16" Return_type="System.Int16">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToInt16" Return_type="System.Int16">
        <Parameters>
          <Parameter Name="value" Type="System.UInt32" />
        </Parameters>
      </Method>
      <Method Name="ToInt16" Return_type="System.Int16">
        <Parameters>
          <Parameter Name="value" Type="System.Int16" />
        </Parameters>
      </Method>
      <Method Name="ToInt16" Return_type="System.Int16">
        <Parameters>
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="ToInt16" Return_type="System.Int16">
        <Parameters>
          <Parameter Name="value" Type="System.UInt64" />
        </Parameters>
      </Method>
      <Method Name="ToInt16" Return_type="System.Int16">
        <Parameters>
          <Parameter Name="value" Type="System.Single" />
        </Parameters>
      </Method>
      <Method Name="ToInt16" Return_type="System.Int16">
        <Parameters>
          <Parameter Name="value" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="ToInt16" Return_type="System.Int16">
        <Parameters>
          <Parameter Name="value" Type="System.Decimal" />
        </Parameters>
      </Method>
      <Method Name="ToInt16" Return_type="System.Int16">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ToInt16" Return_type="System.Int16">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="ToInt16" Return_type="System.Int16">
        <Parameters>
          <Parameter Name="value" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="ToUInt16" Return_type="System.UInt16">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="ToUInt16" Return_type="System.UInt16">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="ToUInt16" Return_type="System.UInt16">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="ToUInt16" Return_type="System.UInt16">
        <Parameters>
          <Parameter Name="value" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="ToUInt16" Return_type="System.UInt16">
        <Parameters>
          <Parameter Name="value" Type="System.SByte" />
        </Parameters>
      </Method>
      <Method Name="ToUInt16" Return_type="System.UInt16">
        <Parameters>
          <Parameter Name="value" Type="System.Byte" />
        </Parameters>
      </Method>
      <Method Name="ToUInt16" Return_type="System.UInt16">
        <Parameters>
          <Parameter Name="value" Type="System.Int16" />
        </Parameters>
      </Method>
      <Method Name="ToUInt16" Return_type="System.UInt16">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToUInt16" Return_type="System.UInt16">
        <Parameters>
          <Parameter Name="value" Type="System.UInt16" />
        </Parameters>
      </Method>
      <Method Name="ToUInt16" Return_type="System.UInt16">
        <Parameters>
          <Parameter Name="value" Type="System.UInt32" />
        </Parameters>
      </Method>
      <Method Name="ToUInt16" Return_type="System.UInt16">
        <Parameters>
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="ToUInt16" Return_type="System.UInt16">
        <Parameters>
          <Parameter Name="value" Type="System.UInt64" />
        </Parameters>
      </Method>
      <Method Name="ToUInt16" Return_type="System.UInt16">
        <Parameters>
          <Parameter Name="value" Type="System.Single" />
        </Parameters>
      </Method>
      <Method Name="ToUInt16" Return_type="System.UInt16">
        <Parameters>
          <Parameter Name="value" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="ToUInt16" Return_type="System.UInt16">
        <Parameters>
          <Parameter Name="value" Type="System.Decimal" />
        </Parameters>
      </Method>
      <Method Name="ToUInt16" Return_type="System.UInt16">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ToUInt16" Return_type="System.UInt16">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="ToUInt16" Return_type="System.UInt16">
        <Parameters>
          <Parameter Name="value" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="ToInt32" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="ToInt32" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="ToInt32" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="ToInt32" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="ToInt32" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.SByte" />
        </Parameters>
      </Method>
      <Method Name="ToInt32" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Byte" />
        </Parameters>
      </Method>
      <Method Name="ToInt32" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Int16" />
        </Parameters>
      </Method>
      <Method Name="ToInt32" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.UInt16" />
        </Parameters>
      </Method>
      <Method Name="ToInt32" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.UInt32" />
        </Parameters>
      </Method>
      <Method Name="ToInt32" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToInt32" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="ToInt32" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.UInt64" />
        </Parameters>
      </Method>
      <Method Name="ToInt32" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Single" />
        </Parameters>
      </Method>
      <Method Name="ToInt32" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="ToInt32" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Decimal" />
        </Parameters>
      </Method>
      <Method Name="ToInt32" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ToInt32" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="ToInt32" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="ToUInt32" Return_type="System.UInt32">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="ToUInt32" Return_type="System.UInt32">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="ToUInt32" Return_type="System.UInt32">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="ToUInt32" Return_type="System.UInt32">
        <Parameters>
          <Parameter Name="value" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="ToUInt32" Return_type="System.UInt32">
        <Parameters>
          <Parameter Name="value" Type="System.SByte" />
        </Parameters>
      </Method>
      <Method Name="ToUInt32" Return_type="System.UInt32">
        <Parameters>
          <Parameter Name="value" Type="System.Byte" />
        </Parameters>
      </Method>
      <Method Name="ToUInt32" Return_type="System.UInt32">
        <Parameters>
          <Parameter Name="value" Type="System.Int16" />
        </Parameters>
      </Method>
      <Method Name="ToUInt32" Return_type="System.UInt32">
        <Parameters>
          <Parameter Name="value" Type="System.UInt16" />
        </Parameters>
      </Method>
      <Method Name="ToUInt32" Return_type="System.UInt32">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToUInt32" Return_type="System.UInt32">
        <Parameters>
          <Parameter Name="value" Type="System.UInt32" />
        </Parameters>
      </Method>
      <Method Name="ToUInt32" Return_type="System.UInt32">
        <Parameters>
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="ToUInt32" Return_type="System.UInt32">
        <Parameters>
          <Parameter Name="value" Type="System.UInt64" />
        </Parameters>
      </Method>
      <Method Name="ToUInt32" Return_type="System.UInt32">
        <Parameters>
          <Parameter Name="value" Type="System.Single" />
        </Parameters>
      </Method>
      <Method Name="ToUInt32" Return_type="System.UInt32">
        <Parameters>
          <Parameter Name="value" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="ToUInt32" Return_type="System.UInt32">
        <Parameters>
          <Parameter Name="value" Type="System.Decimal" />
        </Parameters>
      </Method>
      <Method Name="ToUInt32" Return_type="System.UInt32">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ToUInt32" Return_type="System.UInt32">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="ToUInt32" Return_type="System.UInt32">
        <Parameters>
          <Parameter Name="value" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="ToInt64" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="ToInt64" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="ToInt64" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="ToInt64" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="value" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="ToInt64" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="value" Type="System.SByte" />
        </Parameters>
      </Method>
      <Method Name="ToInt64" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="value" Type="System.Byte" />
        </Parameters>
      </Method>
      <Method Name="ToInt64" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="value" Type="System.Int16" />
        </Parameters>
      </Method>
      <Method Name="ToInt64" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="value" Type="System.UInt16" />
        </Parameters>
      </Method>
      <Method Name="ToInt64" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToInt64" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="value" Type="System.UInt32" />
        </Parameters>
      </Method>
      <Method Name="ToInt64" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="value" Type="System.UInt64" />
        </Parameters>
      </Method>
      <Method Name="ToInt64" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="ToInt64" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="value" Type="System.Single" />
        </Parameters>
      </Method>
      <Method Name="ToInt64" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="value" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="ToInt64" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="value" Type="System.Decimal" />
        </Parameters>
      </Method>
      <Method Name="ToInt64" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ToInt64" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="ToInt64" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="value" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="ToUInt64" Return_type="System.UInt64">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="ToUInt64" Return_type="System.UInt64">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="ToUInt64" Return_type="System.UInt64">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="ToUInt64" Return_type="System.UInt64">
        <Parameters>
          <Parameter Name="value" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="ToUInt64" Return_type="System.UInt64">
        <Parameters>
          <Parameter Name="value" Type="System.SByte" />
        </Parameters>
      </Method>
      <Method Name="ToUInt64" Return_type="System.UInt64">
        <Parameters>
          <Parameter Name="value" Type="System.Byte" />
        </Parameters>
      </Method>
      <Method Name="ToUInt64" Return_type="System.UInt64">
        <Parameters>
          <Parameter Name="value" Type="System.Int16" />
        </Parameters>
      </Method>
      <Method Name="ToUInt64" Return_type="System.UInt64">
        <Parameters>
          <Parameter Name="value" Type="System.UInt16" />
        </Parameters>
      </Method>
      <Method Name="ToUInt64" Return_type="System.UInt64">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToUInt64" Return_type="System.UInt64">
        <Parameters>
          <Parameter Name="value" Type="System.UInt32" />
        </Parameters>
      </Method>
      <Method Name="ToUInt64" Return_type="System.UInt64">
        <Parameters>
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="ToUInt64" Return_type="System.UInt64">
        <Parameters>
          <Parameter Name="value" Type="System.UInt64" />
        </Parameters>
      </Method>
      <Method Name="ToUInt64" Return_type="System.UInt64">
        <Parameters>
          <Parameter Name="value" Type="System.Single" />
        </Parameters>
      </Method>
      <Method Name="ToUInt64" Return_type="System.UInt64">
        <Parameters>
          <Parameter Name="value" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="ToUInt64" Return_type="System.UInt64">
        <Parameters>
          <Parameter Name="value" Type="System.Decimal" />
        </Parameters>
      </Method>
      <Method Name="ToUInt64" Return_type="System.UInt64">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ToUInt64" Return_type="System.UInt64">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="ToUInt64" Return_type="System.UInt64">
        <Parameters>
          <Parameter Name="value" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="ToSingle" Return_type="System.Single">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="ToSingle" Return_type="System.Single">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="ToSingle" Return_type="System.Single">
        <Parameters>
          <Parameter Name="value" Type="System.SByte" />
        </Parameters>
      </Method>
      <Method Name="ToSingle" Return_type="System.Single">
        <Parameters>
          <Parameter Name="value" Type="System.Byte" />
        </Parameters>
      </Method>
      <Method Name="ToSingle" Return_type="System.Single">
        <Parameters>
          <Parameter Name="value" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="ToSingle" Return_type="System.Single">
        <Parameters>
          <Parameter Name="value" Type="System.Int16" />
        </Parameters>
      </Method>
      <Method Name="ToSingle" Return_type="System.Single">
        <Parameters>
          <Parameter Name="value" Type="System.UInt16" />
        </Parameters>
      </Method>
      <Method Name="ToSingle" Return_type="System.Single">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToSingle" Return_type="System.Single">
        <Parameters>
          <Parameter Name="value" Type="System.UInt32" />
        </Parameters>
      </Method>
      <Method Name="ToSingle" Return_type="System.Single">
        <Parameters>
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="ToSingle" Return_type="System.Single">
        <Parameters>
          <Parameter Name="value" Type="System.UInt64" />
        </Parameters>
      </Method>
      <Method Name="ToSingle" Return_type="System.Single">
        <Parameters>
          <Parameter Name="value" Type="System.Single" />
        </Parameters>
      </Method>
      <Method Name="ToSingle" Return_type="System.Single">
        <Parameters>
          <Parameter Name="value" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="ToSingle" Return_type="System.Single">
        <Parameters>
          <Parameter Name="value" Type="System.Decimal" />
        </Parameters>
      </Method>
      <Method Name="ToSingle" Return_type="System.Single">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ToSingle" Return_type="System.Single">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="ToSingle" Return_type="System.Single">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="ToSingle" Return_type="System.Single">
        <Parameters>
          <Parameter Name="value" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="ToDouble" Return_type="System.Double">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="ToDouble" Return_type="System.Double">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="ToDouble" Return_type="System.Double">
        <Parameters>
          <Parameter Name="value" Type="System.SByte" />
        </Parameters>
      </Method>
      <Method Name="ToDouble" Return_type="System.Double">
        <Parameters>
          <Parameter Name="value" Type="System.Byte" />
        </Parameters>
      </Method>
      <Method Name="ToDouble" Return_type="System.Double">
        <Parameters>
          <Parameter Name="value" Type="System.Int16" />
        </Parameters>
      </Method>
      <Method Name="ToDouble" Return_type="System.Double">
        <Parameters>
          <Parameter Name="value" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="ToDouble" Return_type="System.Double">
        <Parameters>
          <Parameter Name="value" Type="System.UInt16" />
        </Parameters>
      </Method>
      <Method Name="ToDouble" Return_type="System.Double">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToDouble" Return_type="System.Double">
        <Parameters>
          <Parameter Name="value" Type="System.UInt32" />
        </Parameters>
      </Method>
      <Method Name="ToDouble" Return_type="System.Double">
        <Parameters>
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="ToDouble" Return_type="System.Double">
        <Parameters>
          <Parameter Name="value" Type="System.UInt64" />
        </Parameters>
      </Method>
      <Method Name="ToDouble" Return_type="System.Double">
        <Parameters>
          <Parameter Name="value" Type="System.Single" />
        </Parameters>
      </Method>
      <Method Name="ToDouble" Return_type="System.Double">
        <Parameters>
          <Parameter Name="value" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="ToDouble" Return_type="System.Double">
        <Parameters>
          <Parameter Name="value" Type="System.Decimal" />
        </Parameters>
      </Method>
      <Method Name="ToDouble" Return_type="System.Double">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ToDouble" Return_type="System.Double">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="ToDouble" Return_type="System.Double">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="ToDouble" Return_type="System.Double">
        <Parameters>
          <Parameter Name="value" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="ToDecimal" Return_type="System.Decimal">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="ToDecimal" Return_type="System.Decimal">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="ToDecimal" Return_type="System.Decimal">
        <Parameters>
          <Parameter Name="value" Type="System.SByte" />
        </Parameters>
      </Method>
      <Method Name="ToDecimal" Return_type="System.Decimal">
        <Parameters>
          <Parameter Name="value" Type="System.Byte" />
        </Parameters>
      </Method>
      <Method Name="ToDecimal" Return_type="System.Decimal">
        <Parameters>
          <Parameter Name="value" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="ToDecimal" Return_type="System.Decimal">
        <Parameters>
          <Parameter Name="value" Type="System.Int16" />
        </Parameters>
      </Method>
      <Method Name="ToDecimal" Return_type="System.Decimal">
        <Parameters>
          <Parameter Name="value" Type="System.UInt16" />
        </Parameters>
      </Method>
      <Method Name="ToDecimal" Return_type="System.Decimal">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToDecimal" Return_type="System.Decimal">
        <Parameters>
          <Parameter Name="value" Type="System.UInt32" />
        </Parameters>
      </Method>
      <Method Name="ToDecimal" Return_type="System.Decimal">
        <Parameters>
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="ToDecimal" Return_type="System.Decimal">
        <Parameters>
          <Parameter Name="value" Type="System.UInt64" />
        </Parameters>
      </Method>
      <Method Name="ToDecimal" Return_type="System.Decimal">
        <Parameters>
          <Parameter Name="value" Type="System.Single" />
        </Parameters>
      </Method>
      <Method Name="ToDecimal" Return_type="System.Decimal">
        <Parameters>
          <Parameter Name="value" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="ToDecimal" Return_type="System.Decimal">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ToDecimal" Return_type="System.Decimal">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="ToDecimal" Return_type="System.Decimal">
        <Parameters>
          <Parameter Name="value" Type="System.Decimal" />
        </Parameters>
      </Method>
      <Method Name="ToDecimal" Return_type="System.Decimal">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="ToDecimal" Return_type="System.Decimal">
        <Parameters>
          <Parameter Name="value" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="ToDateTime" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="value" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="ToDateTime" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="ToDateTime" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="ToDateTime" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ToDateTime" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="ToDateTime" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="value" Type="System.SByte" />
        </Parameters>
      </Method>
      <Method Name="ToDateTime" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="value" Type="System.Byte" />
        </Parameters>
      </Method>
      <Method Name="ToDateTime" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="value" Type="System.Int16" />
        </Parameters>
      </Method>
      <Method Name="ToDateTime" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="value" Type="System.UInt16" />
        </Parameters>
      </Method>
      <Method Name="ToDateTime" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToDateTime" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="value" Type="System.UInt32" />
        </Parameters>
      </Method>
      <Method Name="ToDateTime" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="ToDateTime" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="value" Type="System.UInt64" />
        </Parameters>
      </Method>
      <Method Name="ToDateTime" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="ToDateTime" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="value" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="ToDateTime" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="value" Type="System.Single" />
        </Parameters>
      </Method>
      <Method Name="ToDateTime" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="value" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="ToDateTime" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="value" Type="System.Decimal" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="value" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="value" Type="System.Char" />
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="value" Type="System.SByte" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="value" Type="System.SByte" />
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="value" Type="System.Byte" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="value" Type="System.Byte" />
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="value" Type="System.Int16" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="value" Type="System.Int16" />
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="value" Type="System.UInt16" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="value" Type="System.UInt16" />
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="value" Type="System.UInt32" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="value" Type="System.UInt32" />
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="value" Type="System.Int64" />
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="value" Type="System.UInt64" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="value" Type="System.UInt64" />
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="value" Type="System.Single" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="value" Type="System.Single" />
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="value" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="value" Type="System.Double" />
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="value" Type="System.Decimal" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="value" Type="System.Decimal" />
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="value" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="value" Type="System.DateTime" />
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="ToByte" Return_type="System.Byte">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="fromBase" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToSByte" Return_type="System.SByte">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="fromBase" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToInt16" Return_type="System.Int16">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="fromBase" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToUInt16" Return_type="System.UInt16">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="fromBase" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToInt32" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="fromBase" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToUInt32" Return_type="System.UInt32">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="fromBase" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToInt64" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="fromBase" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToUInt64" Return_type="System.UInt64">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="fromBase" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="value" Type="System.Byte" />
          <Parameter Name="toBase" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="value" Type="System.Int16" />
          <Parameter Name="toBase" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
          <Parameter Name="toBase" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="value" Type="System.Int64" />
          <Parameter Name="toBase" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToBase64String" Return_type="System.String">
        <Parameters>
          <Parameter Name="inArray" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="ToBase64String" Return_type="System.String">
        <Parameters>
          <Parameter Name="inArray" Type="System.Byte[]" />
          <Parameter Name="options" Type="System.Base64FormattingOptions" />
        </Parameters>
      </Method>
      <Method Name="ToBase64String" Return_type="System.String">
        <Parameters>
          <Parameter Name="inArray" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="length" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToBase64String" Return_type="System.String">
        <Parameters>
          <Parameter Name="inArray" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="length" Type="System.Int32" />
          <Parameter Name="options" Type="System.Base64FormattingOptions" />
        </Parameters>
      </Method>
      <Method Name="ToBase64CharArray" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="inArray" Type="System.Byte[]" />
          <Parameter Name="offsetIn" Type="System.Int32" />
          <Parameter Name="length" Type="System.Int32" />
          <Parameter Name="outArray" Type="System.Char[]" />
          <Parameter Name="offsetOut" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToBase64CharArray" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="inArray" Type="System.Byte[]" />
          <Parameter Name="offsetIn" Type="System.Int32" />
          <Parameter Name="length" Type="System.Int32" />
          <Parameter Name="outArray" Type="System.Char[]" />
          <Parameter Name="offsetOut" Type="System.Int32" />
          <Parameter Name="options" Type="System.Base64FormattingOptions" />
        </Parameters>
      </Method>
      <Method Name="FromBase64String" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="s" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="FromBase64CharArray" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="inArray" Type="System.Char[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="length" Type="System.Int32" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.ContextBoundObject">
    <Properties />
    <Methods />
  </Type>
  <Type Full_Name="System.ContextStaticAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.DBNull">
    <Properties />
    <Methods>
      <Method Name="GetObjectData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="GetTypeCode" Return_type="System.TypeCode">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.DivideByZeroException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.DuplicateWaitObjectException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="ParamName" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Enum">
    <Properties />
    <Methods>
      <Method Name="TryParse" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="result" Type="TEnum&amp;" />
        </Parameters>
      </Method>
      <Method Name="TryParse" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="ignoreCase" Type="System.Boolean" />
          <Parameter Name="result" Type="TEnum&amp;" />
        </Parameters>
      </Method>
      <Method Name="Parse" Return_type="System.Object">
        <Parameters>
          <Parameter Name="enumType" Type="System.Type" />
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Parse" Return_type="System.Object">
        <Parameters>
          <Parameter Name="enumType" Type="System.Type" />
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="ignoreCase" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetUnderlyingType" Return_type="System.Type">
        <Parameters>
          <Parameter Name="enumType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetValues" Return_type="System.Array">
        <Parameters>
          <Parameter Name="enumType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetName" Return_type="System.String">
        <Parameters>
          <Parameter Name="enumType" Type="System.Type" />
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetNames" Return_type="System.String[]">
        <Parameters>
          <Parameter Name="enumType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="ToObject" Return_type="System.Object">
        <Parameters>
          <Parameter Name="enumType" Type="System.Type" />
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="IsDefined" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="enumType" Type="System.Type" />
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Format" Return_type="System.String">
        <Parameters>
          <Parameter Name="enumType" Type="System.Type" />
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="format" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="format" Type="System.String" />
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="CompareTo" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="target" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="format" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="HasFlag" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="flag" Type="System.Enum" />
        </Parameters>
      </Method>
      <Method Name="GetTypeCode" Return_type="System.TypeCode">
        <Parameters />
      </Method>
      <Method Name="ToObject" Return_type="System.Object">
        <Parameters>
          <Parameter Name="enumType" Type="System.Type" />
          <Parameter Name="value" Type="System.SByte" />
        </Parameters>
      </Method>
      <Method Name="ToObject" Return_type="System.Object">
        <Parameters>
          <Parameter Name="enumType" Type="System.Type" />
          <Parameter Name="value" Type="System.Int16" />
        </Parameters>
      </Method>
      <Method Name="ToObject" Return_type="System.Object">
        <Parameters>
          <Parameter Name="enumType" Type="System.Type" />
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToObject" Return_type="System.Object">
        <Parameters>
          <Parameter Name="enumType" Type="System.Type" />
          <Parameter Name="value" Type="System.Byte" />
        </Parameters>
      </Method>
      <Method Name="ToObject" Return_type="System.Object">
        <Parameters>
          <Parameter Name="enumType" Type="System.Type" />
          <Parameter Name="value" Type="System.UInt16" />
        </Parameters>
      </Method>
      <Method Name="ToObject" Return_type="System.Object">
        <Parameters>
          <Parameter Name="enumType" Type="System.Type" />
          <Parameter Name="value" Type="System.UInt32" />
        </Parameters>
      </Method>
      <Method Name="ToObject" Return_type="System.Object">
        <Parameters>
          <Parameter Name="enumType" Type="System.Type" />
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="ToObject" Return_type="System.Object">
        <Parameters>
          <Parameter Name="enumType" Type="System.Type" />
          <Parameter Name="value" Type="System.UInt64" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.EntryPointNotFoundException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="TypeName" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.DllNotFoundException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="TypeName" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Environment">
    <Properties>
      <Property Name="TickCount" Type="System.Int32" />
      <Property Name="ExitCode" Type="System.Int32" />
      <Property Name="CommandLine" Type="System.String" />
      <Property Name="CurrentDirectory" Type="System.String" />
      <Property Name="SystemDirectory" Type="System.String" />
      <Property Name="MachineName" Type="System.String" />
      <Property Name="ProcessorCount" Type="System.Int32" />
      <Property Name="SystemPageSize" Type="System.Int32" />
      <Property Name="NewLine" Type="System.String" />
      <Property Name="Version" Type="System.Version" />
      <Property Name="WorkingSet" Type="System.Int64" />
      <Property Name="OSVersion" Type="System.OperatingSystem" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="Is64BitProcess" Type="System.Boolean" />
      <Property Name="Is64BitOperatingSystem" Type="System.Boolean" />
      <Property Name="HasShutdownStarted" Type="System.Boolean" />
      <Property Name="UserName" Type="System.String" />
      <Property Name="UserInteractive" Type="System.Boolean" />
      <Property Name="UserDomainName" Type="System.String" />
      <Property Name="CurrentManagedThreadId" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_TickCount" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Exit" Return_type="System.Void">
        <Parameters>
          <Parameter Name="exitCode" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_ExitCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_ExitCode" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="FailFast" Return_type="System.Void">
        <Parameters>
          <Parameter Name="message" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="FailFast" Return_type="System.Void">
        <Parameters>
          <Parameter Name="message" Type="System.String" />
          <Parameter Name="exception" Type="System.Exception" />
        </Parameters>
      </Method>
      <Method Name="get_CommandLine" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_CurrentDirectory" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_CurrentDirectory" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_SystemDirectory" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="ExpandEnvironmentVariables" Return_type="System.String">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_MachineName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ProcessorCount" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_SystemPageSize" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetCommandLineArgs" Return_type="System.String[]">
        <Parameters />
      </Method>
      <Method Name="GetEnvironmentVariable" Return_type="System.String">
        <Parameters>
          <Parameter Name="variable" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetEnvironmentVariable" Return_type="System.String">
        <Parameters>
          <Parameter Name="variable" Type="System.String" />
          <Parameter Name="target" Type="System.EnvironmentVariableTarget" />
        </Parameters>
      </Method>
      <Method Name="GetEnvironmentVariables" Return_type="System.Collections.IDictionary">
        <Parameters />
      </Method>
      <Method Name="GetEnvironmentVariables" Return_type="System.Collections.IDictionary">
        <Parameters>
          <Parameter Name="target" Type="System.EnvironmentVariableTarget" />
        </Parameters>
      </Method>
      <Method Name="SetEnvironmentVariable" Return_type="System.Void">
        <Parameters>
          <Parameter Name="variable" Type="System.String" />
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="SetEnvironmentVariable" Return_type="System.Void">
        <Parameters>
          <Parameter Name="variable" Type="System.String" />
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="target" Type="System.EnvironmentVariableTarget" />
        </Parameters>
      </Method>
      <Method Name="GetLogicalDrives" Return_type="System.String[]">
        <Parameters />
      </Method>
      <Method Name="get_NewLine" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Version" Return_type="System.Version">
        <Parameters />
      </Method>
      <Method Name="get_WorkingSet" Return_type="System.Int64">
        <Parameters />
      </Method>
      <Method Name="get_OSVersion" Return_type="System.OperatingSystem">
        <Parameters />
      </Method>
      <Method Name="get_StackTrace" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Is64BitProcess" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Is64BitOperatingSystem" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_HasShutdownStarted" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_UserName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_UserInteractive" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetFolderPath" Return_type="System.String">
        <Parameters>
          <Parameter Name="folder" Type="System.Environment+SpecialFolder" />
        </Parameters>
      </Method>
      <Method Name="GetFolderPath" Return_type="System.String">
        <Parameters>
          <Parameter Name="folder" Type="System.Environment+SpecialFolder" />
          <Parameter Name="option" Type="System.Environment+SpecialFolderOption" />
        </Parameters>
      </Method>
      <Method Name="get_UserDomainName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_CurrentManagedThreadId" Return_type="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.EventArgs">
    <Properties />
    <Methods />
  </Type>
  <Type Full_Name="System.EventHandler">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="sender" Type="System.Object" />
          <Parameter Name="e" Type="System.EventArgs" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="sender" Type="System.Object" />
          <Parameter Name="e" Type="System.EventArgs" />
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="object" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.EventHandler`1">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="sender" Type="System.Object" />
          <Parameter Name="e" Type="TEventArgs" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="sender" Type="System.Object" />
          <Parameter Name="e" Type="TEventArgs" />
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="object" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.FieldAccessException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.FlagsAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.FormatException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.FormattableString">
    <Properties>
      <Property Name="Format" Type="System.String" />
      <Property Name="ArgumentCount" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Format" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetArguments" Return_type="System.Object[]">
        <Parameters />
      </Method>
      <Method Name="get_ArgumentCount" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetArgument" Return_type="System.Object">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="Invariant" Return_type="System.String">
        <Parameters>
          <Parameter Name="formattable" Type="System.FormattableString" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.GC">
    <Properties>
      <Property Name="MaxGeneration" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="AddMemoryPressure" Return_type="System.Void">
        <Parameters>
          <Parameter Name="bytesAllocated" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="RemoveMemoryPressure" Return_type="System.Void">
        <Parameters>
          <Parameter Name="bytesAllocated" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="GetGeneration" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Collect" Return_type="System.Void">
        <Parameters>
          <Parameter Name="generation" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Collect" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Collect" Return_type="System.Void">
        <Parameters>
          <Parameter Name="generation" Type="System.Int32" />
          <Parameter Name="mode" Type="System.GCCollectionMode" />
        </Parameters>
      </Method>
      <Method Name="Collect" Return_type="System.Void">
        <Parameters>
          <Parameter Name="generation" Type="System.Int32" />
          <Parameter Name="mode" Type="System.GCCollectionMode" />
          <Parameter Name="blocking" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="Collect" Return_type="System.Void">
        <Parameters>
          <Parameter Name="generation" Type="System.Int32" />
          <Parameter Name="mode" Type="System.GCCollectionMode" />
          <Parameter Name="blocking" Type="System.Boolean" />
          <Parameter Name="compacting" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="CollectionCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="generation" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="KeepAlive" Return_type="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetGeneration" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="wo" Type="System.WeakReference" />
        </Parameters>
      </Method>
      <Method Name="get_MaxGeneration" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="WaitForPendingFinalizers" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="SuppressFinalize" Return_type="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="ReRegisterForFinalize" Return_type="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetTotalMemory" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="forceFullCollection" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="RegisterForFullGCNotification" Return_type="System.Void">
        <Parameters>
          <Parameter Name="maxGenerationThreshold" Type="System.Int32" />
          <Parameter Name="largeObjectHeapThreshold" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="CancelFullGCNotification" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="WaitForFullGCApproach" Return_type="System.GCNotificationStatus">
        <Parameters />
      </Method>
      <Method Name="WaitForFullGCApproach" Return_type="System.GCNotificationStatus">
        <Parameters>
          <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="WaitForFullGCComplete" Return_type="System.GCNotificationStatus">
        <Parameters />
      </Method>
      <Method Name="WaitForFullGCComplete" Return_type="System.GCNotificationStatus">
        <Parameters>
          <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="TryStartNoGCRegion" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="totalSize" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="TryStartNoGCRegion" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="totalSize" Type="System.Int64" />
          <Parameter Name="lohSize" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="TryStartNoGCRegion" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="totalSize" Type="System.Int64" />
          <Parameter Name="disallowFullBlockingGC" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="TryStartNoGCRegion" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="totalSize" Type="System.Int64" />
          <Parameter Name="lohSize" Type="System.Int64" />
          <Parameter Name="disallowFullBlockingGC" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="EndNoGCRegion" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.IndexOutOfRangeException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.InsufficientMemoryException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.InsufficientExecutionStackException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Lazy`1">
    <Properties>
      <Property Name="IsValueCreated" Type="System.Boolean" />
      <Property Name="Value" Type="T" />
    </Properties>
    <Methods>
      <Method Name="get_IsValueCreated" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Value" Return_type="T">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.InvalidCastException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.InvalidOperationException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.InvalidProgramException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.InvalidTimeZoneException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.LocalDataStoreSlot">
    <Properties />
    <Methods />
  </Type>
  <Type Full_Name="System.MarshalByRefObject">
    <Properties />
    <Methods>
      <Method Name="GetLifetimeService" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="InitializeLifetimeService" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="CreateObjRef" Return_type="System.Runtime.Remoting.ObjRef">
        <Parameters>
          <Parameter Name="requestedType" Type="System.Type" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Math">
    <Properties />
    <Methods>
      <Method Name="Acos" Return_type="System.Double">
        <Parameters>
          <Parameter Name="d" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="Asin" Return_type="System.Double">
        <Parameters>
          <Parameter Name="d" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="Atan" Return_type="System.Double">
        <Parameters>
          <Parameter Name="d" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="Atan2" Return_type="System.Double">
        <Parameters>
          <Parameter Name="y" Type="System.Double" />
          <Parameter Name="x" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="Ceiling" Return_type="System.Decimal">
        <Parameters>
          <Parameter Name="d" Type="System.Decimal" />
        </Parameters>
      </Method>
      <Method Name="Ceiling" Return_type="System.Double">
        <Parameters>
          <Parameter Name="a" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="Cos" Return_type="System.Double">
        <Parameters>
          <Parameter Name="d" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="Cosh" Return_type="System.Double">
        <Parameters>
          <Parameter Name="value" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="Floor" Return_type="System.Decimal">
        <Parameters>
          <Parameter Name="d" Type="System.Decimal" />
        </Parameters>
      </Method>
      <Method Name="Floor" Return_type="System.Double">
        <Parameters>
          <Parameter Name="d" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="Sin" Return_type="System.Double">
        <Parameters>
          <Parameter Name="a" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="Tan" Return_type="System.Double">
        <Parameters>
          <Parameter Name="a" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="Sinh" Return_type="System.Double">
        <Parameters>
          <Parameter Name="value" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="Tanh" Return_type="System.Double">
        <Parameters>
          <Parameter Name="value" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="Round" Return_type="System.Double">
        <Parameters>
          <Parameter Name="a" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="Round" Return_type="System.Double">
        <Parameters>
          <Parameter Name="value" Type="System.Double" />
          <Parameter Name="digits" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Round" Return_type="System.Double">
        <Parameters>
          <Parameter Name="value" Type="System.Double" />
          <Parameter Name="mode" Type="System.MidpointRounding" />
        </Parameters>
      </Method>
      <Method Name="Round" Return_type="System.Double">
        <Parameters>
          <Parameter Name="value" Type="System.Double" />
          <Parameter Name="digits" Type="System.Int32" />
          <Parameter Name="mode" Type="System.MidpointRounding" />
        </Parameters>
      </Method>
      <Method Name="Round" Return_type="System.Decimal">
        <Parameters>
          <Parameter Name="d" Type="System.Decimal" />
        </Parameters>
      </Method>
      <Method Name="Round" Return_type="System.Decimal">
        <Parameters>
          <Parameter Name="d" Type="System.Decimal" />
          <Parameter Name="decimals" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Round" Return_type="System.Decimal">
        <Parameters>
          <Parameter Name="d" Type="System.Decimal" />
          <Parameter Name="mode" Type="System.MidpointRounding" />
        </Parameters>
      </Method>
      <Method Name="Round" Return_type="System.Decimal">
        <Parameters>
          <Parameter Name="d" Type="System.Decimal" />
          <Parameter Name="decimals" Type="System.Int32" />
          <Parameter Name="mode" Type="System.MidpointRounding" />
        </Parameters>
      </Method>
      <Method Name="Truncate" Return_type="System.Decimal">
        <Parameters>
          <Parameter Name="d" Type="System.Decimal" />
        </Parameters>
      </Method>
      <Method Name="Truncate" Return_type="System.Double">
        <Parameters>
          <Parameter Name="d" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="Sqrt" Return_type="System.Double">
        <Parameters>
          <Parameter Name="d" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="Log" Return_type="System.Double">
        <Parameters>
          <Parameter Name="d" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="Log10" Return_type="System.Double">
        <Parameters>
          <Parameter Name="d" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="Exp" Return_type="System.Double">
        <Parameters>
          <Parameter Name="d" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="Pow" Return_type="System.Double">
        <Parameters>
          <Parameter Name="x" Type="System.Double" />
          <Parameter Name="y" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="IEEERemainder" Return_type="System.Double">
        <Parameters>
          <Parameter Name="x" Type="System.Double" />
          <Parameter Name="y" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="Abs" Return_type="System.SByte">
        <Parameters>
          <Parameter Name="value" Type="System.SByte" />
        </Parameters>
      </Method>
      <Method Name="Abs" Return_type="System.Int16">
        <Parameters>
          <Parameter Name="value" Type="System.Int16" />
        </Parameters>
      </Method>
      <Method Name="Abs" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Abs" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="Abs" Return_type="System.Single">
        <Parameters>
          <Parameter Name="value" Type="System.Single" />
        </Parameters>
      </Method>
      <Method Name="Abs" Return_type="System.Double">
        <Parameters>
          <Parameter Name="value" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="Abs" Return_type="System.Decimal">
        <Parameters>
          <Parameter Name="value" Type="System.Decimal" />
        </Parameters>
      </Method>
      <Method Name="Max" Return_type="System.SByte">
        <Parameters>
          <Parameter Name="val1" Type="System.SByte" />
          <Parameter Name="val2" Type="System.SByte" />
        </Parameters>
      </Method>
      <Method Name="Max" Return_type="System.Byte">
        <Parameters>
          <Parameter Name="val1" Type="System.Byte" />
          <Parameter Name="val2" Type="System.Byte" />
        </Parameters>
      </Method>
      <Method Name="Max" Return_type="System.Int16">
        <Parameters>
          <Parameter Name="val1" Type="System.Int16" />
          <Parameter Name="val2" Type="System.Int16" />
        </Parameters>
      </Method>
      <Method Name="Max" Return_type="System.UInt16">
        <Parameters>
          <Parameter Name="val1" Type="System.UInt16" />
          <Parameter Name="val2" Type="System.UInt16" />
        </Parameters>
      </Method>
      <Method Name="Max" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="val1" Type="System.Int32" />
          <Parameter Name="val2" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Max" Return_type="System.UInt32">
        <Parameters>
          <Parameter Name="val1" Type="System.UInt32" />
          <Parameter Name="val2" Type="System.UInt32" />
        </Parameters>
      </Method>
      <Method Name="Max" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="val1" Type="System.Int64" />
          <Parameter Name="val2" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="Max" Return_type="System.UInt64">
        <Parameters>
          <Parameter Name="val1" Type="System.UInt64" />
          <Parameter Name="val2" Type="System.UInt64" />
        </Parameters>
      </Method>
      <Method Name="Max" Return_type="System.Single">
        <Parameters>
          <Parameter Name="val1" Type="System.Single" />
          <Parameter Name="val2" Type="System.Single" />
        </Parameters>
      </Method>
      <Method Name="Max" Return_type="System.Double">
        <Parameters>
          <Parameter Name="val1" Type="System.Double" />
          <Parameter Name="val2" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="Max" Return_type="System.Decimal">
        <Parameters>
          <Parameter Name="val1" Type="System.Decimal" />
          <Parameter Name="val2" Type="System.Decimal" />
        </Parameters>
      </Method>
      <Method Name="Min" Return_type="System.SByte">
        <Parameters>
          <Parameter Name="val1" Type="System.SByte" />
          <Parameter Name="val2" Type="System.SByte" />
        </Parameters>
      </Method>
      <Method Name="Min" Return_type="System.Byte">
        <Parameters>
          <Parameter Name="val1" Type="System.Byte" />
          <Parameter Name="val2" Type="System.Byte" />
        </Parameters>
      </Method>
      <Method Name="Min" Return_type="System.Int16">
        <Parameters>
          <Parameter Name="val1" Type="System.Int16" />
          <Parameter Name="val2" Type="System.Int16" />
        </Parameters>
      </Method>
      <Method Name="Min" Return_type="System.UInt16">
        <Parameters>
          <Parameter Name="val1" Type="System.UInt16" />
          <Parameter Name="val2" Type="System.UInt16" />
        </Parameters>
      </Method>
      <Method Name="Min" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="val1" Type="System.Int32" />
          <Parameter Name="val2" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Min" Return_type="System.UInt32">
        <Parameters>
          <Parameter Name="val1" Type="System.UInt32" />
          <Parameter Name="val2" Type="System.UInt32" />
        </Parameters>
      </Method>
      <Method Name="Min" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="val1" Type="System.Int64" />
          <Parameter Name="val2" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="Min" Return_type="System.UInt64">
        <Parameters>
          <Parameter Name="val1" Type="System.UInt64" />
          <Parameter Name="val2" Type="System.UInt64" />
        </Parameters>
      </Method>
      <Method Name="Min" Return_type="System.Single">
        <Parameters>
          <Parameter Name="val1" Type="System.Single" />
          <Parameter Name="val2" Type="System.Single" />
        </Parameters>
      </Method>
      <Method Name="Min" Return_type="System.Double">
        <Parameters>
          <Parameter Name="val1" Type="System.Double" />
          <Parameter Name="val2" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="Min" Return_type="System.Decimal">
        <Parameters>
          <Parameter Name="val1" Type="System.Decimal" />
          <Parameter Name="val2" Type="System.Decimal" />
        </Parameters>
      </Method>
      <Method Name="Log" Return_type="System.Double">
        <Parameters>
          <Parameter Name="a" Type="System.Double" />
          <Parameter Name="newBase" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="Sign" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.SByte" />
        </Parameters>
      </Method>
      <Method Name="Sign" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Int16" />
        </Parameters>
      </Method>
      <Method Name="Sign" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Sign" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="Sign" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Single" />
        </Parameters>
      </Method>
      <Method Name="Sign" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="Sign" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Decimal" />
        </Parameters>
      </Method>
      <Method Name="BigMul" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="a" Type="System.Int32" />
          <Parameter Name="b" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="DivRem" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="a" Type="System.Int32" />
          <Parameter Name="b" Type="System.Int32" />
          <Parameter Name="result" Type="System.Int32&amp;" />
        </Parameters>
      </Method>
      <Method Name="DivRem" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="a" Type="System.Int64" />
          <Parameter Name="b" Type="System.Int64" />
          <Parameter Name="result" Type="System.Int64&amp;" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.MethodAccessException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.MissingFieldException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Message" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.MissingMemberException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Message" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetObjectData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.MissingMethodException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Message" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.MulticastNotSupportedException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.NonSerializedAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.NotFiniteNumberException">
    <Properties>
      <Property Name="OffendingNumber" Type="System.Double" />
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_OffendingNumber" Return_type="System.Double">
        <Parameters />
      </Method>
      <Method Name="GetObjectData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.NotImplementedException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.NotSupportedException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.NullReferenceException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.ObjectDisposedException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="ObjectName" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Message" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ObjectName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetObjectData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.ObsoleteAttribute">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="IsError" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Message" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_IsError" Return_type="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.OperatingSystem">
    <Properties>
      <Property Name="Platform" Type="System.PlatformID" />
      <Property Name="ServicePack" Type="System.String" />
      <Property Name="Version" Type="System.Version" />
      <Property Name="VersionString" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="GetObjectData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
      <Method Name="get_Platform" Return_type="System.PlatformID">
        <Parameters />
      </Method>
      <Method Name="get_ServicePack" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Version" Return_type="System.Version">
        <Parameters />
      </Method>
      <Method Name="Clone" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_VersionString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.OperationCanceledException">
    <Properties>
      <Property Name="CancellationToken" Type="System.Threading.CancellationToken" />
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_CancellationToken" Return_type="System.Threading.CancellationToken">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.OverflowException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.ParamArrayAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.PlatformNotSupportedException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Progress`1">
    <Properties />
    <Methods>
      <Method Name="add_ProgressChanged" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.EventHandler`1[T]" />
        </Parameters>
      </Method>
      <Method Name="remove_ProgressChanged" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.EventHandler`1[T]" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Random">
    <Properties />
    <Methods>
      <Method Name="Next" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Next" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="minValue" Type="System.Int32" />
          <Parameter Name="maxValue" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Next" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="maxValue" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="NextDouble" Return_type="System.Double">
        <Parameters />
      </Method>
      <Method Name="NextBytes" Return_type="System.Void">
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.RankException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.SerializableAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.STAThreadAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.MTAThreadAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.TimeoutException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.TimeZone">
    <Properties>
      <Property Name="CurrentTimeZone" Type="System.TimeZone" />
      <Property Name="StandardName" Type="System.String" />
      <Property Name="DaylightName" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_CurrentTimeZone" Return_type="System.TimeZone">
        <Parameters />
      </Method>
      <Method Name="get_StandardName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_DaylightName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetUtcOffset" Return_type="System.TimeSpan">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="ToUniversalTime" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="ToLocalTime" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetDaylightChanges" Return_type="System.Globalization.DaylightTime">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IsDaylightSavingTime" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="IsDaylightSavingTime" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
          <Parameter Name="daylightTimes" Type="System.Globalization.DaylightTime" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.TimeZoneInfo">
    <Properties>
      <Property Name="Id" Type="System.String" />
      <Property Name="DisplayName" Type="System.String" />
      <Property Name="StandardName" Type="System.String" />
      <Property Name="DaylightName" Type="System.String" />
      <Property Name="BaseUtcOffset" Type="System.TimeSpan" />
      <Property Name="SupportsDaylightSavingTime" Type="System.Boolean" />
      <Property Name="Local" Type="System.TimeZoneInfo" />
      <Property Name="Utc" Type="System.TimeZoneInfo" />
    </Properties>
    <Methods>
      <Method Name="get_Id" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_DisplayName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_StandardName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_DaylightName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_BaseUtcOffset" Return_type="System.TimeSpan">
        <Parameters />
      </Method>
      <Method Name="get_SupportsDaylightSavingTime" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetAdjustmentRules" Return_type="System.TimeZoneInfo+AdjustmentRule[]">
        <Parameters />
      </Method>
      <Method Name="GetAmbiguousTimeOffsets" Return_type="System.TimeSpan[]">
        <Parameters>
          <Parameter Name="dateTimeOffset" Type="System.DateTimeOffset" />
        </Parameters>
      </Method>
      <Method Name="GetAmbiguousTimeOffsets" Return_type="System.TimeSpan[]">
        <Parameters>
          <Parameter Name="dateTime" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetUtcOffset" Return_type="System.TimeSpan">
        <Parameters>
          <Parameter Name="dateTimeOffset" Type="System.DateTimeOffset" />
        </Parameters>
      </Method>
      <Method Name="GetUtcOffset" Return_type="System.TimeSpan">
        <Parameters>
          <Parameter Name="dateTime" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="IsAmbiguousTime" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="dateTimeOffset" Type="System.DateTimeOffset" />
        </Parameters>
      </Method>
      <Method Name="IsAmbiguousTime" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="dateTime" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="IsDaylightSavingTime" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="dateTimeOffset" Type="System.DateTimeOffset" />
        </Parameters>
      </Method>
      <Method Name="IsDaylightSavingTime" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="dateTime" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="IsInvalidTime" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="dateTime" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="ClearCachedData" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="ConvertTimeBySystemTimeZoneId" Return_type="System.DateTimeOffset">
        <Parameters>
          <Parameter Name="dateTimeOffset" Type="System.DateTimeOffset" />
          <Parameter Name="destinationTimeZoneId" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ConvertTimeBySystemTimeZoneId" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="dateTime" Type="System.DateTime" />
          <Parameter Name="destinationTimeZoneId" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ConvertTimeBySystemTimeZoneId" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="dateTime" Type="System.DateTime" />
          <Parameter Name="sourceTimeZoneId" Type="System.String" />
          <Parameter Name="destinationTimeZoneId" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ConvertTime" Return_type="System.DateTimeOffset">
        <Parameters>
          <Parameter Name="dateTimeOffset" Type="System.DateTimeOffset" />
          <Parameter Name="destinationTimeZone" Type="System.TimeZoneInfo" />
        </Parameters>
      </Method>
      <Method Name="ConvertTime" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="dateTime" Type="System.DateTime" />
          <Parameter Name="destinationTimeZone" Type="System.TimeZoneInfo" />
        </Parameters>
      </Method>
      <Method Name="ConvertTime" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="dateTime" Type="System.DateTime" />
          <Parameter Name="sourceTimeZone" Type="System.TimeZoneInfo" />
          <Parameter Name="destinationTimeZone" Type="System.TimeZoneInfo" />
        </Parameters>
      </Method>
      <Method Name="ConvertTimeFromUtc" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="dateTime" Type="System.DateTime" />
          <Parameter Name="destinationTimeZone" Type="System.TimeZoneInfo" />
        </Parameters>
      </Method>
      <Method Name="ConvertTimeToUtc" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="dateTime" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="ConvertTimeToUtc" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="dateTime" Type="System.DateTime" />
          <Parameter Name="sourceTimeZone" Type="System.TimeZoneInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="other" Type="System.TimeZoneInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="FromSerializedString" Return_type="System.TimeZoneInfo">
        <Parameters>
          <Parameter Name="source" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetSystemTimeZones" Return_type="System.Collections.ObjectModel.ReadOnlyCollection`1[System.TimeZoneInfo]">
        <Parameters />
      </Method>
      <Method Name="HasSameRules" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="other" Type="System.TimeZoneInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Local" Return_type="System.TimeZoneInfo">
        <Parameters />
      </Method>
      <Method Name="ToSerializedString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Utc" Return_type="System.TimeZoneInfo">
        <Parameters />
      </Method>
      <Method Name="CreateCustomTimeZone" Return_type="System.TimeZoneInfo">
        <Parameters>
          <Parameter Name="id" Type="System.String" />
          <Parameter Name="baseUtcOffset" Type="System.TimeSpan" />
          <Parameter Name="displayName" Type="System.String" />
          <Parameter Name="standardDisplayName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="CreateCustomTimeZone" Return_type="System.TimeZoneInfo">
        <Parameters>
          <Parameter Name="id" Type="System.String" />
          <Parameter Name="baseUtcOffset" Type="System.TimeSpan" />
          <Parameter Name="displayName" Type="System.String" />
          <Parameter Name="standardDisplayName" Type="System.String" />
          <Parameter Name="daylightDisplayName" Type="System.String" />
          <Parameter Name="adjustmentRules" Type="System.TimeZoneInfo+AdjustmentRule[]" />
        </Parameters>
      </Method>
      <Method Name="CreateCustomTimeZone" Return_type="System.TimeZoneInfo">
        <Parameters>
          <Parameter Name="id" Type="System.String" />
          <Parameter Name="baseUtcOffset" Type="System.TimeSpan" />
          <Parameter Name="displayName" Type="System.String" />
          <Parameter Name="standardDisplayName" Type="System.String" />
          <Parameter Name="daylightDisplayName" Type="System.String" />
          <Parameter Name="adjustmentRules" Type="System.TimeZoneInfo+AdjustmentRule[]" />
          <Parameter Name="disableDaylightSavingTime" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="FindSystemTimeZoneById" Return_type="System.TimeZoneInfo">
        <Parameters>
          <Parameter Name="id" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.TimeZoneNotFoundException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Type">
    <Properties>
      <Property Name="MemberType" Type="System.Reflection.MemberTypes" />
      <Property Name="DeclaringType" Type="System.Type" />
      <Property Name="DeclaringMethod" Type="System.Reflection.MethodBase" />
      <Property Name="ReflectedType" Type="System.Type" />
      <Property Name="StructLayoutAttribute" Type="System.Runtime.InteropServices.StructLayoutAttribute" />
      <Property Name="GUID" Type="System.Guid" />
      <Property Name="DefaultBinder" Type="System.Reflection.Binder" />
      <Property Name="Module" Type="System.Reflection.Module" />
      <Property Name="Assembly" Type="System.Reflection.Assembly" />
      <Property Name="TypeHandle" Type="System.RuntimeTypeHandle" />
      <Property Name="FullName" Type="System.String" />
      <Property Name="Namespace" Type="System.String" />
      <Property Name="AssemblyQualifiedName" Type="System.String" />
      <Property Name="BaseType" Type="System.Type" />
      <Property Name="TypeInitializer" Type="System.Reflection.ConstructorInfo" />
      <Property Name="IsNested" Type="System.Boolean" />
      <Property Name="Attributes" Type="System.Reflection.TypeAttributes" />
      <Property Name="GenericParameterAttributes" Type="System.Reflection.GenericParameterAttributes" />
      <Property Name="IsVisible" Type="System.Boolean" />
      <Property Name="IsNotPublic" Type="System.Boolean" />
      <Property Name="IsPublic" Type="System.Boolean" />
      <Property Name="IsNestedPublic" Type="System.Boolean" />
      <Property Name="IsNestedPrivate" Type="System.Boolean" />
      <Property Name="IsNestedFamily" Type="System.Boolean" />
      <Property Name="IsNestedAssembly" Type="System.Boolean" />
      <Property Name="IsNestedFamANDAssem" Type="System.Boolean" />
      <Property Name="IsNestedFamORAssem" Type="System.Boolean" />
      <Property Name="IsAutoLayout" Type="System.Boolean" />
      <Property Name="IsLayoutSequential" Type="System.Boolean" />
      <Property Name="IsExplicitLayout" Type="System.Boolean" />
      <Property Name="IsClass" Type="System.Boolean" />
      <Property Name="IsInterface" Type="System.Boolean" />
      <Property Name="IsValueType" Type="System.Boolean" />
      <Property Name="IsAbstract" Type="System.Boolean" />
      <Property Name="IsSealed" Type="System.Boolean" />
      <Property Name="IsEnum" Type="System.Boolean" />
      <Property Name="IsSpecialName" Type="System.Boolean" />
      <Property Name="IsImport" Type="System.Boolean" />
      <Property Name="IsSerializable" Type="System.Boolean" />
      <Property Name="IsAnsiClass" Type="System.Boolean" />
      <Property Name="IsUnicodeClass" Type="System.Boolean" />
      <Property Name="IsAutoClass" Type="System.Boolean" />
      <Property Name="IsArray" Type="System.Boolean" />
      <Property Name="IsGenericType" Type="System.Boolean" />
      <Property Name="IsGenericTypeDefinition" Type="System.Boolean" />
      <Property Name="IsConstructedGenericType" Type="System.Boolean" />
      <Property Name="IsGenericParameter" Type="System.Boolean" />
      <Property Name="GenericParameterPosition" Type="System.Int32" />
      <Property Name="ContainsGenericParameters" Type="System.Boolean" />
      <Property Name="IsByRef" Type="System.Boolean" />
      <Property Name="IsPointer" Type="System.Boolean" />
      <Property Name="IsPrimitive" Type="System.Boolean" />
      <Property Name="IsCOMObject" Type="System.Boolean" />
      <Property Name="HasElementType" Type="System.Boolean" />
      <Property Name="IsContextful" Type="System.Boolean" />
      <Property Name="IsMarshalByRef" Type="System.Boolean" />
      <Property Name="GenericTypeArguments" Type="System.Type[]" />
      <Property Name="IsSecurityCritical" Type="System.Boolean" />
      <Property Name="IsSecuritySafeCritical" Type="System.Boolean" />
      <Property Name="IsSecurityTransparent" Type="System.Boolean" />
      <Property Name="UnderlyingSystemType" Type="System.Type" />
      <Property Name="Name" Type="System.String" />
      <Property Name="CustomAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]" />
      <Property Name="MetadataToken" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_MemberType" Return_type="System.Reflection.MemberTypes">
        <Parameters />
      </Method>
      <Method Name="get_DeclaringType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_DeclaringMethod" Return_type="System.Reflection.MethodBase">
        <Parameters />
      </Method>
      <Method Name="get_ReflectedType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="GetType" Return_type="System.Type">
        <Parameters>
          <Parameter Name="typeName" Type="System.String" />
          <Parameter Name="throwOnError" Type="System.Boolean" />
          <Parameter Name="ignoreCase" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetType" Return_type="System.Type">
        <Parameters>
          <Parameter Name="typeName" Type="System.String" />
          <Parameter Name="throwOnError" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetType" Return_type="System.Type">
        <Parameters>
          <Parameter Name="typeName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetType" Return_type="System.Type">
        <Parameters>
          <Parameter Name="typeName" Type="System.String" />
          <Parameter Name="assemblyResolver" Type="System.Func`2[System.Reflection.AssemblyName,System.Reflection.Assembly]" />
          <Parameter Name="typeResolver" Type="System.Func`4[System.Reflection.Assembly,System.String,System.Boolean,System.Type]" />
        </Parameters>
      </Method>
      <Method Name="GetType" Return_type="System.Type">
        <Parameters>
          <Parameter Name="typeName" Type="System.String" />
          <Parameter Name="assemblyResolver" Type="System.Func`2[System.Reflection.AssemblyName,System.Reflection.Assembly]" />
          <Parameter Name="typeResolver" Type="System.Func`4[System.Reflection.Assembly,System.String,System.Boolean,System.Type]" />
          <Parameter Name="throwOnError" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetType" Return_type="System.Type">
        <Parameters>
          <Parameter Name="typeName" Type="System.String" />
          <Parameter Name="assemblyResolver" Type="System.Func`2[System.Reflection.AssemblyName,System.Reflection.Assembly]" />
          <Parameter Name="typeResolver" Type="System.Func`4[System.Reflection.Assembly,System.String,System.Boolean,System.Type]" />
          <Parameter Name="throwOnError" Type="System.Boolean" />
          <Parameter Name="ignoreCase" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="ReflectionOnlyGetType" Return_type="System.Type">
        <Parameters>
          <Parameter Name="typeName" Type="System.String" />
          <Parameter Name="throwIfNotFound" Type="System.Boolean" />
          <Parameter Name="ignoreCase" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="MakePointerType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_StructLayoutAttribute" Return_type="System.Runtime.InteropServices.StructLayoutAttribute">
        <Parameters />
      </Method>
      <Method Name="MakeByRefType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="MakeArrayType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="MakeArrayType" Return_type="System.Type">
        <Parameters>
          <Parameter Name="rank" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetTypeFromProgID" Return_type="System.Type">
        <Parameters>
          <Parameter Name="progID" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetTypeFromProgID" Return_type="System.Type">
        <Parameters>
          <Parameter Name="progID" Type="System.String" />
          <Parameter Name="throwOnError" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetTypeFromProgID" Return_type="System.Type">
        <Parameters>
          <Parameter Name="progID" Type="System.String" />
          <Parameter Name="server" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetTypeFromProgID" Return_type="System.Type">
        <Parameters>
          <Parameter Name="progID" Type="System.String" />
          <Parameter Name="server" Type="System.String" />
          <Parameter Name="throwOnError" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetTypeFromCLSID" Return_type="System.Type">
        <Parameters>
          <Parameter Name="clsid" Type="System.Guid" />
        </Parameters>
      </Method>
      <Method Name="GetTypeFromCLSID" Return_type="System.Type">
        <Parameters>
          <Parameter Name="clsid" Type="System.Guid" />
          <Parameter Name="throwOnError" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetTypeFromCLSID" Return_type="System.Type">
        <Parameters>
          <Parameter Name="clsid" Type="System.Guid" />
          <Parameter Name="server" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetTypeFromCLSID" Return_type="System.Type">
        <Parameters>
          <Parameter Name="clsid" Type="System.Guid" />
          <Parameter Name="server" Type="System.String" />
          <Parameter Name="throwOnError" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetTypeCode" Return_type="System.TypeCode">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="get_GUID" Return_type="System.Guid">
        <Parameters />
      </Method>
      <Method Name="get_DefaultBinder" Return_type="System.Reflection.Binder">
        <Parameters />
      </Method>
      <Method Name="InvokeMember" Return_type="System.Object">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="binder" Type="System.Reflection.Binder" />
          <Parameter Name="target" Type="System.Object" />
          <Parameter Name="args" Type="System.Object[]" />
          <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
          <Parameter Name="namedParameters" Type="System.String[]" />
        </Parameters>
      </Method>
      <Method Name="InvokeMember" Return_type="System.Object">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="binder" Type="System.Reflection.Binder" />
          <Parameter Name="target" Type="System.Object" />
          <Parameter Name="args" Type="System.Object[]" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        </Parameters>
      </Method>
      <Method Name="InvokeMember" Return_type="System.Object">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="binder" Type="System.Reflection.Binder" />
          <Parameter Name="target" Type="System.Object" />
          <Parameter Name="args" Type="System.Object[]" />
        </Parameters>
      </Method>
      <Method Name="get_Module" Return_type="System.Reflection.Module">
        <Parameters />
      </Method>
      <Method Name="get_Assembly" Return_type="System.Reflection.Assembly">
        <Parameters />
      </Method>
      <Method Name="get_TypeHandle" Return_type="System.RuntimeTypeHandle">
        <Parameters />
      </Method>
      <Method Name="GetTypeHandle" Return_type="System.RuntimeTypeHandle">
        <Parameters>
          <Parameter Name="o" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetTypeFromHandle" Return_type="System.Type">
        <Parameters>
          <Parameter Name="handle" Type="System.RuntimeTypeHandle" />
        </Parameters>
      </Method>
      <Method Name="get_FullName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Namespace" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_AssemblyQualifiedName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetArrayRank" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_BaseType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="GetConstructor" Return_type="System.Reflection.ConstructorInfo">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="binder" Type="System.Reflection.Binder" />
          <Parameter Name="callConvention" Type="System.Reflection.CallingConventions" />
          <Parameter Name="types" Type="System.Type[]" />
          <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        </Parameters>
      </Method>
      <Method Name="GetConstructor" Return_type="System.Reflection.ConstructorInfo">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="binder" Type="System.Reflection.Binder" />
          <Parameter Name="types" Type="System.Type[]" />
          <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        </Parameters>
      </Method>
      <Method Name="GetConstructor" Return_type="System.Reflection.ConstructorInfo">
        <Parameters>
          <Parameter Name="types" Type="System.Type[]" />
        </Parameters>
      </Method>
      <Method Name="GetConstructors" Return_type="System.Reflection.ConstructorInfo[]">
        <Parameters />
      </Method>
      <Method Name="GetConstructors" Return_type="System.Reflection.ConstructorInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="get_TypeInitializer" Return_type="System.Reflection.ConstructorInfo">
        <Parameters />
      </Method>
      <Method Name="GetMethod" Return_type="System.Reflection.MethodInfo">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="binder" Type="System.Reflection.Binder" />
          <Parameter Name="callConvention" Type="System.Reflection.CallingConventions" />
          <Parameter Name="types" Type="System.Type[]" />
          <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        </Parameters>
      </Method>
      <Method Name="GetMethod" Return_type="System.Reflection.MethodInfo">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="binder" Type="System.Reflection.Binder" />
          <Parameter Name="types" Type="System.Type[]" />
          <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        </Parameters>
      </Method>
      <Method Name="GetMethod" Return_type="System.Reflection.MethodInfo">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="types" Type="System.Type[]" />
          <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        </Parameters>
      </Method>
      <Method Name="GetMethod" Return_type="System.Reflection.MethodInfo">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="types" Type="System.Type[]" />
        </Parameters>
      </Method>
      <Method Name="GetMethod" Return_type="System.Reflection.MethodInfo">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetMethod" Return_type="System.Reflection.MethodInfo">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetMethods" Return_type="System.Reflection.MethodInfo[]">
        <Parameters />
      </Method>
      <Method Name="GetMethods" Return_type="System.Reflection.MethodInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetField" Return_type="System.Reflection.FieldInfo">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetField" Return_type="System.Reflection.FieldInfo">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetFields" Return_type="System.Reflection.FieldInfo[]">
        <Parameters />
      </Method>
      <Method Name="GetFields" Return_type="System.Reflection.FieldInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetInterface" Return_type="System.Type">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetInterface" Return_type="System.Type">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="ignoreCase" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetInterfaces" Return_type="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="FindInterfaces" Return_type="System.Type[]">
        <Parameters>
          <Parameter Name="filter" Type="System.Reflection.TypeFilter" />
          <Parameter Name="filterCriteria" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetEvent" Return_type="System.Reflection.EventInfo">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetEvent" Return_type="System.Reflection.EventInfo">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetEvents" Return_type="System.Reflection.EventInfo[]">
        <Parameters />
      </Method>
      <Method Name="GetEvents" Return_type="System.Reflection.EventInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetProperty" Return_type="System.Reflection.PropertyInfo">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="binder" Type="System.Reflection.Binder" />
          <Parameter Name="returnType" Type="System.Type" />
          <Parameter Name="types" Type="System.Type[]" />
          <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        </Parameters>
      </Method>
      <Method Name="GetProperty" Return_type="System.Reflection.PropertyInfo">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="returnType" Type="System.Type" />
          <Parameter Name="types" Type="System.Type[]" />
          <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        </Parameters>
      </Method>
      <Method Name="GetProperty" Return_type="System.Reflection.PropertyInfo">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetProperty" Return_type="System.Reflection.PropertyInfo">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="returnType" Type="System.Type" />
          <Parameter Name="types" Type="System.Type[]" />
        </Parameters>
      </Method>
      <Method Name="GetProperty" Return_type="System.Reflection.PropertyInfo">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="types" Type="System.Type[]" />
        </Parameters>
      </Method>
      <Method Name="GetProperty" Return_type="System.Reflection.PropertyInfo">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="returnType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetProperty" Return_type="System.Reflection.PropertyInfo">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetProperties" Return_type="System.Reflection.PropertyInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetProperties" Return_type="System.Reflection.PropertyInfo[]">
        <Parameters />
      </Method>
      <Method Name="GetNestedTypes" Return_type="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="GetNestedTypes" Return_type="System.Type[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetNestedType" Return_type="System.Type">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetNestedType" Return_type="System.Type">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetMember" Return_type="System.Reflection.MemberInfo[]">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetMember" Return_type="System.Reflection.MemberInfo[]">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetMember" Return_type="System.Reflection.MemberInfo[]">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="type" Type="System.Reflection.MemberTypes" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetMembers" Return_type="System.Reflection.MemberInfo[]">
        <Parameters />
      </Method>
      <Method Name="GetMembers" Return_type="System.Reflection.MemberInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetDefaultMembers" Return_type="System.Reflection.MemberInfo[]">
        <Parameters />
      </Method>
      <Method Name="FindMembers" Return_type="System.Reflection.MemberInfo[]">
        <Parameters>
          <Parameter Name="memberType" Type="System.Reflection.MemberTypes" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="filter" Type="System.Reflection.MemberFilter" />
          <Parameter Name="filterCriteria" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="get_IsNested" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Attributes" Return_type="System.Reflection.TypeAttributes">
        <Parameters />
      </Method>
      <Method Name="get_GenericParameterAttributes" Return_type="System.Reflection.GenericParameterAttributes">
        <Parameters />
      </Method>
      <Method Name="get_IsVisible" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsNotPublic" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsPublic" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsNestedPublic" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsNestedPrivate" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsNestedFamily" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsNestedAssembly" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsNestedFamANDAssem" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsNestedFamORAssem" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsAutoLayout" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsLayoutSequential" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsExplicitLayout" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsClass" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsInterface" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsValueType" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsAbstract" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSealed" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsEnum" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSpecialName" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsImport" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSerializable" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsAnsiClass" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsUnicodeClass" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsAutoClass" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsArray" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsGenericType" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsGenericTypeDefinition" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsConstructedGenericType" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsGenericParameter" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_GenericParameterPosition" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_ContainsGenericParameters" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetGenericParameterConstraints" Return_type="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="get_IsByRef" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsPointer" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsPrimitive" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsCOMObject" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_HasElementType" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsContextful" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsMarshalByRef" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="MakeGenericType" Return_type="System.Type">
        <Parameters>
          <Parameter Name="typeArguments" Type="System.Type[]" />
        </Parameters>
      </Method>
      <Method Name="GetElementType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="GetGenericArguments" Return_type="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="get_GenericTypeArguments" Return_type="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="GetGenericTypeDefinition" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="GetEnumNames" Return_type="System.String[]">
        <Parameters />
      </Method>
      <Method Name="GetEnumValues" Return_type="System.Array">
        <Parameters />
      </Method>
      <Method Name="GetEnumUnderlyingType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="IsEnumDefined" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetEnumName" Return_type="System.String">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="get_IsSecurityCritical" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSecuritySafeCritical" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSecurityTransparent" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_UnderlyingSystemType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="IsSubclassOf" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="c" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="IsInstanceOfType" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="IsAssignableFrom" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="c" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="IsEquivalentTo" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="other" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetTypeArray" Return_type="System.Type[]">
        <Parameters>
          <Parameter Name="args" Type="System.Object[]" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="op_Equality" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="left" Type="System.Type" />
          <Parameter Name="right" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="op_Inequality" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="left" Type="System.Type" />
          <Parameter Name="right" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetInterfaceMap" Return_type="System.Reflection.InterfaceMapping">
        <Parameters>
          <Parameter Name="interfaceType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetType" Return_type="System.Type">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.TypeAccessException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="TypeName" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.TypeInitializationException">
    <Properties>
      <Property Name="TypeName" Type="System.String" />
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_TypeName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetObjectData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.TypeLoadException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="TypeName" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Message" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_TypeName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetObjectData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.UnauthorizedAccessException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.UnhandledExceptionEventArgs">
    <Properties>
      <Property Name="ExceptionObject" Type="System.Object" />
      <Property Name="IsTerminating" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_ExceptionObject" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_IsTerminating" Return_type="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.UnhandledExceptionEventHandler">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="sender" Type="System.Object" />
          <Parameter Name="e" Type="System.UnhandledExceptionEventArgs" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="sender" Type="System.Object" />
          <Parameter Name="e" Type="System.UnhandledExceptionEventArgs" />
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="object" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.ValueType">
    <Properties />
    <Methods>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Version">
    <Properties>
      <Property Name="Major" Type="System.Int32" />
      <Property Name="Minor" Type="System.Int32" />
      <Property Name="Build" Type="System.Int32" />
      <Property Name="Revision" Type="System.Int32" />
      <Property Name="MajorRevision" Type="System.Int16" />
      <Property Name="MinorRevision" Type="System.Int16" />
    </Properties>
    <Methods>
      <Method Name="get_Major" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_Minor" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_Build" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_Revision" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_MajorRevision" Return_type="System.Int16">
        <Parameters />
      </Method>
      <Method Name="get_MinorRevision" Return_type="System.Int16">
        <Parameters />
      </Method>
      <Method Name="Clone" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="CompareTo" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="version" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="CompareTo" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Version" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Version" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="fieldCount" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Parse" Return_type="System.Version">
        <Parameters>
          <Parameter Name="input" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="TryParse" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="input" Type="System.String" />
          <Parameter Name="result" Type="System.Version&amp;" />
        </Parameters>
      </Method>
      <Method Name="op_Equality" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="v1" Type="System.Version" />
          <Parameter Name="v2" Type="System.Version" />
        </Parameters>
      </Method>
      <Method Name="op_Inequality" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="v1" Type="System.Version" />
          <Parameter Name="v2" Type="System.Version" />
        </Parameters>
      </Method>
      <Method Name="op_LessThan" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="v1" Type="System.Version" />
          <Parameter Name="v2" Type="System.Version" />
        </Parameters>
      </Method>
      <Method Name="op_LessThanOrEqual" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="v1" Type="System.Version" />
          <Parameter Name="v2" Type="System.Version" />
        </Parameters>
      </Method>
      <Method Name="op_GreaterThan" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="v1" Type="System.Version" />
          <Parameter Name="v2" Type="System.Version" />
        </Parameters>
      </Method>
      <Method Name="op_GreaterThanOrEqual" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="v1" Type="System.Version" />
          <Parameter Name="v2" Type="System.Version" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.WeakReference">
    <Properties>
      <Property Name="IsAlive" Type="System.Boolean" />
      <Property Name="TrackResurrection" Type="System.Boolean" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_IsAlive" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_TrackResurrection" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Target" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="set_Target" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetObjectData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.WeakReference`1">
    <Properties />
    <Methods>
      <Method Name="TryGetTarget" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="target" Type="T&amp;" />
        </Parameters>
      </Method>
      <Method Name="SetTarget" Return_type="System.Void">
        <Parameters>
          <Parameter Name="target" Type="T" />
        </Parameters>
      </Method>
      <Method Name="GetObjectData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.ThreadStaticAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Nullable">
    <Properties />
    <Methods>
      <Method Name="Compare" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="n1" Type="System.Nullable`1[T]" />
          <Parameter Name="n2" Type="System.Nullable`1[T]" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="n1" Type="System.Nullable`1[T]" />
          <Parameter Name="n2" Type="System.Nullable`1[T]" />
        </Parameters>
      </Method>
      <Method Name="GetUnderlyingType" Return_type="System.Type">
        <Parameters>
          <Parameter Name="nullableType" Type="System.Type" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.IO.BinaryReader">
    <Properties>
      <Property Name="BaseStream" Type="System.IO.Stream" />
    </Properties>
    <Methods>
      <Method Name="get_BaseStream" Return_type="System.IO.Stream">
        <Parameters />
      </Method>
      <Method Name="Close" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Dispose" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="PeekChar" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Read" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ReadBoolean" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="ReadByte" Return_type="System.Byte">
        <Parameters />
      </Method>
      <Method Name="ReadSByte" Return_type="System.SByte">
        <Parameters />
      </Method>
      <Method Name="ReadChar" Return_type="System.Char">
        <Parameters />
      </Method>
      <Method Name="ReadInt16" Return_type="System.Int16">
        <Parameters />
      </Method>
      <Method Name="ReadUInt16" Return_type="System.UInt16">
        <Parameters />
      </Method>
      <Method Name="ReadInt32" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ReadUInt32" Return_type="System.UInt32">
        <Parameters />
      </Method>
      <Method Name="ReadInt64" Return_type="System.Int64">
        <Parameters />
      </Method>
      <Method Name="ReadUInt64" Return_type="System.UInt64">
        <Parameters />
      </Method>
      <Method Name="ReadSingle" Return_type="System.Single">
        <Parameters />
      </Method>
      <Method Name="ReadDouble" Return_type="System.Double">
        <Parameters />
      </Method>
      <Method Name="ReadDecimal" Return_type="System.Decimal">
        <Parameters />
      </Method>
      <Method Name="ReadString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Read" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="buffer" Type="System.Char[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ReadChars" Return_type="System.Char[]">
        <Parameters>
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Read" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ReadBytes" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.IO.BinaryWriter">
    <Properties>
      <Property Name="BaseStream" Type="System.IO.Stream" />
    </Properties>
    <Methods>
      <Method Name="Close" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Dispose" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_BaseStream" Return_type="System.IO.Stream">
        <Parameters />
      </Method>
      <Method Name="Flush" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Seek" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="origin" Type="System.IO.SeekOrigin" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Byte" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.SByte" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="ch" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="chars" Type="System.Char[]" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="chars" Type="System.Char[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Decimal" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int16" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.UInt16" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.UInt32" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.UInt64" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Single" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.IO.BufferedStream">
    <Properties>
      <Property Name="CanRead" Type="System.Boolean" />
      <Property Name="CanWrite" Type="System.Boolean" />
      <Property Name="CanSeek" Type="System.Boolean" />
      <Property Name="Length" Type="System.Int64" />
      <Property Name="Position" Type="System.Int64" />
      <Property Name="CanTimeout" Type="System.Boolean" />
      <Property Name="ReadTimeout" Type="System.Int32" />
      <Property Name="WriteTimeout" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_CanRead" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CanWrite" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CanSeek" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Length" Return_type="System.Int64">
        <Parameters />
      </Method>
      <Method Name="get_Position" Return_type="System.Int64">
        <Parameters />
      </Method>
      <Method Name="set_Position" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="Flush" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="FlushAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="Read" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="array" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="BeginRead" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndRead" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
      <Method Name="ReadAsync" Return_type="System.Threading.Tasks.Task`1[System.Int32]">
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="ReadByte" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="BeginWrite" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndWrite" Return_type="System.Void">
        <Parameters>
          <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
      <Method Name="WriteAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="WriteByte" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Byte" />
        </Parameters>
      </Method>
      <Method Name="Seek" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="offset" Type="System.Int64" />
          <Parameter Name="origin" Type="System.IO.SeekOrigin" />
        </Parameters>
      </Method>
      <Method Name="SetLength" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.IO.Directory">
    <Properties />
    <Methods>
      <Method Name="GetParent" Return_type="System.IO.DirectoryInfo">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="CreateDirectory" Return_type="System.IO.DirectoryInfo">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="CreateDirectory" Return_type="System.IO.DirectoryInfo">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" />
        </Parameters>
      </Method>
      <Method Name="Exists" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="SetCreationTime" Return_type="System.Void">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="creationTime" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="SetCreationTimeUtc" Return_type="System.Void">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="creationTimeUtc" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetCreationTime" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetCreationTimeUtc" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="SetLastWriteTime" Return_type="System.Void">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="lastWriteTime" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="SetLastWriteTimeUtc" Return_type="System.Void">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="lastWriteTimeUtc" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetLastWriteTime" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetLastWriteTimeUtc" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="SetLastAccessTime" Return_type="System.Void">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="lastAccessTime" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="SetLastAccessTimeUtc" Return_type="System.Void">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="lastAccessTimeUtc" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetLastAccessTime" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetLastAccessTimeUtc" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetAccessControl" Return_type="System.Security.AccessControl.DirectorySecurity">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetAccessControl" Return_type="System.Security.AccessControl.DirectorySecurity">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
        </Parameters>
      </Method>
      <Method Name="SetAccessControl" Return_type="System.Void">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" />
        </Parameters>
      </Method>
      <Method Name="GetFiles" Return_type="System.String[]">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetFiles" Return_type="System.String[]">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="searchPattern" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetFiles" Return_type="System.String[]">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="searchPattern" Type="System.String" />
          <Parameter Name="searchOption" Type="System.IO.SearchOption" />
        </Parameters>
      </Method>
      <Method Name="GetDirectories" Return_type="System.String[]">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetDirectories" Return_type="System.String[]">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="searchPattern" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetDirectories" Return_type="System.String[]">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="searchPattern" Type="System.String" />
          <Parameter Name="searchOption" Type="System.IO.SearchOption" />
        </Parameters>
      </Method>
      <Method Name="GetFileSystemEntries" Return_type="System.String[]">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetFileSystemEntries" Return_type="System.String[]">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="searchPattern" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetFileSystemEntries" Return_type="System.String[]">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="searchPattern" Type="System.String" />
          <Parameter Name="searchOption" Type="System.IO.SearchOption" />
        </Parameters>
      </Method>
      <Method Name="EnumerateDirectories" Return_type="System.Collections.Generic.IEnumerable`1[System.String]">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="EnumerateDirectories" Return_type="System.Collections.Generic.IEnumerable`1[System.String]">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="searchPattern" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="EnumerateDirectories" Return_type="System.Collections.Generic.IEnumerable`1[System.String]">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="searchPattern" Type="System.String" />
          <Parameter Name="searchOption" Type="System.IO.SearchOption" />
        </Parameters>
      </Method>
      <Method Name="EnumerateFiles" Return_type="System.Collections.Generic.IEnumerable`1[System.String]">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="EnumerateFiles" Return_type="System.Collections.Generic.IEnumerable`1[System.String]">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="searchPattern" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="EnumerateFiles" Return_type="System.Collections.Generic.IEnumerable`1[System.String]">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="searchPattern" Type="System.String" />
          <Parameter Name="searchOption" Type="System.IO.SearchOption" />
        </Parameters>
      </Method>
      <Method Name="EnumerateFileSystemEntries" Return_type="System.Collections.Generic.IEnumerable`1[System.String]">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="EnumerateFileSystemEntries" Return_type="System.Collections.Generic.IEnumerable`1[System.String]">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="searchPattern" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="EnumerateFileSystemEntries" Return_type="System.Collections.Generic.IEnumerable`1[System.String]">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="searchPattern" Type="System.String" />
          <Parameter Name="searchOption" Type="System.IO.SearchOption" />
        </Parameters>
      </Method>
      <Method Name="GetLogicalDrives" Return_type="System.String[]">
        <Parameters />
      </Method>
      <Method Name="GetDirectoryRoot" Return_type="System.String">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetCurrentDirectory" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="SetCurrentDirectory" Return_type="System.Void">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Move" Return_type="System.Void">
        <Parameters>
          <Parameter Name="sourceDirName" Type="System.String" />
          <Parameter Name="destDirName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Delete" Return_type="System.Void">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Delete" Return_type="System.Void">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="recursive" Type="System.Boolean" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.IO.DirectoryInfo">
    <Properties>
      <Property Name="Name" Type="System.String" />
      <Property Name="Parent" Type="System.IO.DirectoryInfo" />
      <Property Name="Exists" Type="System.Boolean" />
      <Property Name="Root" Type="System.IO.DirectoryInfo" />
      <Property Name="FullName" Type="System.String" />
      <Property Name="Extension" Type="System.String" />
      <Property Name="CreationTime" Type="System.DateTime" />
      <Property Name="CreationTimeUtc" Type="System.DateTime" />
      <Property Name="LastAccessTime" Type="System.DateTime" />
      <Property Name="LastAccessTimeUtc" Type="System.DateTime" />
      <Property Name="LastWriteTime" Type="System.DateTime" />
      <Property Name="LastWriteTimeUtc" Type="System.DateTime" />
      <Property Name="Attributes" Type="System.IO.FileAttributes" />
    </Properties>
    <Methods>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Parent" Return_type="System.IO.DirectoryInfo">
        <Parameters />
      </Method>
      <Method Name="CreateSubdirectory" Return_type="System.IO.DirectoryInfo">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="CreateSubdirectory" Return_type="System.IO.DirectoryInfo">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" />
        </Parameters>
      </Method>
      <Method Name="Create" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Create" Return_type="System.Void">
        <Parameters>
          <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" />
        </Parameters>
      </Method>
      <Method Name="get_Exists" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetAccessControl" Return_type="System.Security.AccessControl.DirectorySecurity">
        <Parameters />
      </Method>
      <Method Name="GetAccessControl" Return_type="System.Security.AccessControl.DirectorySecurity">
        <Parameters>
          <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
        </Parameters>
      </Method>
      <Method Name="SetAccessControl" Return_type="System.Void">
        <Parameters>
          <Parameter Name="directorySecurity" Type="System.Security.AccessControl.DirectorySecurity" />
        </Parameters>
      </Method>
      <Method Name="GetFiles" Return_type="System.IO.FileInfo[]">
        <Parameters>
          <Parameter Name="searchPattern" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetFiles" Return_type="System.IO.FileInfo[]">
        <Parameters>
          <Parameter Name="searchPattern" Type="System.String" />
          <Parameter Name="searchOption" Type="System.IO.SearchOption" />
        </Parameters>
      </Method>
      <Method Name="GetFiles" Return_type="System.IO.FileInfo[]">
        <Parameters />
      </Method>
      <Method Name="GetDirectories" Return_type="System.IO.DirectoryInfo[]">
        <Parameters />
      </Method>
      <Method Name="GetFileSystemInfos" Return_type="System.IO.FileSystemInfo[]">
        <Parameters>
          <Parameter Name="searchPattern" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetFileSystemInfos" Return_type="System.IO.FileSystemInfo[]">
        <Parameters>
          <Parameter Name="searchPattern" Type="System.String" />
          <Parameter Name="searchOption" Type="System.IO.SearchOption" />
        </Parameters>
      </Method>
      <Method Name="GetFileSystemInfos" Return_type="System.IO.FileSystemInfo[]">
        <Parameters />
      </Method>
      <Method Name="GetDirectories" Return_type="System.IO.DirectoryInfo[]">
        <Parameters>
          <Parameter Name="searchPattern" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetDirectories" Return_type="System.IO.DirectoryInfo[]">
        <Parameters>
          <Parameter Name="searchPattern" Type="System.String" />
          <Parameter Name="searchOption" Type="System.IO.SearchOption" />
        </Parameters>
      </Method>
      <Method Name="EnumerateDirectories" Return_type="System.Collections.Generic.IEnumerable`1[System.IO.DirectoryInfo]">
        <Parameters />
      </Method>
      <Method Name="EnumerateDirectories" Return_type="System.Collections.Generic.IEnumerable`1[System.IO.DirectoryInfo]">
        <Parameters>
          <Parameter Name="searchPattern" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="EnumerateDirectories" Return_type="System.Collections.Generic.IEnumerable`1[System.IO.DirectoryInfo]">
        <Parameters>
          <Parameter Name="searchPattern" Type="System.String" />
          <Parameter Name="searchOption" Type="System.IO.SearchOption" />
        </Parameters>
      </Method>
      <Method Name="EnumerateFiles" Return_type="System.Collections.Generic.IEnumerable`1[System.IO.FileInfo]">
        <Parameters />
      </Method>
      <Method Name="EnumerateFiles" Return_type="System.Collections.Generic.IEnumerable`1[System.IO.FileInfo]">
        <Parameters>
          <Parameter Name="searchPattern" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="EnumerateFiles" Return_type="System.Collections.Generic.IEnumerable`1[System.IO.FileInfo]">
        <Parameters>
          <Parameter Name="searchPattern" Type="System.String" />
          <Parameter Name="searchOption" Type="System.IO.SearchOption" />
        </Parameters>
      </Method>
      <Method Name="EnumerateFileSystemInfos" Return_type="System.Collections.Generic.IEnumerable`1[System.IO.FileSystemInfo]">
        <Parameters />
      </Method>
      <Method Name="EnumerateFileSystemInfos" Return_type="System.Collections.Generic.IEnumerable`1[System.IO.FileSystemInfo]">
        <Parameters>
          <Parameter Name="searchPattern" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="EnumerateFileSystemInfos" Return_type="System.Collections.Generic.IEnumerable`1[System.IO.FileSystemInfo]">
        <Parameters>
          <Parameter Name="searchPattern" Type="System.String" />
          <Parameter Name="searchOption" Type="System.IO.SearchOption" />
        </Parameters>
      </Method>
      <Method Name="get_Root" Return_type="System.IO.DirectoryInfo">
        <Parameters />
      </Method>
      <Method Name="MoveTo" Return_type="System.Void">
        <Parameters>
          <Parameter Name="destDirName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Delete" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Delete" Return_type="System.Void">
        <Parameters>
          <Parameter Name="recursive" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.IO.DirectoryNotFoundException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.IO.DriveInfo">
    <Properties>
      <Property Name="Name" Type="System.String" />
      <Property Name="DriveType" Type="System.IO.DriveType" />
      <Property Name="DriveFormat" Type="System.String" />
      <Property Name="IsReady" Type="System.Boolean" />
      <Property Name="AvailableFreeSpace" Type="System.Int64" />
      <Property Name="TotalFreeSpace" Type="System.Int64" />
      <Property Name="TotalSize" Type="System.Int64" />
      <Property Name="RootDirectory" Type="System.IO.DirectoryInfo" />
      <Property Name="VolumeLabel" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_DriveType" Return_type="System.IO.DriveType">
        <Parameters />
      </Method>
      <Method Name="get_DriveFormat" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_IsReady" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_AvailableFreeSpace" Return_type="System.Int64">
        <Parameters />
      </Method>
      <Method Name="get_TotalFreeSpace" Return_type="System.Int64">
        <Parameters />
      </Method>
      <Method Name="get_TotalSize" Return_type="System.Int64">
        <Parameters />
      </Method>
      <Method Name="GetDrives" Return_type="System.IO.DriveInfo[]">
        <Parameters />
      </Method>
      <Method Name="get_RootDirectory" Return_type="System.IO.DirectoryInfo">
        <Parameters />
      </Method>
      <Method Name="get_VolumeLabel" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_VolumeLabel" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.IO.DriveNotFoundException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.IO.EndOfStreamException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.IO.File">
    <Properties />
    <Methods>
      <Method Name="OpenText" Return_type="System.IO.StreamReader">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="CreateText" Return_type="System.IO.StreamWriter">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="AppendText" Return_type="System.IO.StreamWriter">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Void">
        <Parameters>
          <Parameter Name="sourceFileName" Type="System.String" />
          <Parameter Name="destFileName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Void">
        <Parameters>
          <Parameter Name="sourceFileName" Type="System.String" />
          <Parameter Name="destFileName" Type="System.String" />
          <Parameter Name="overwrite" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="Create" Return_type="System.IO.FileStream">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Create" Return_type="System.IO.FileStream">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="bufferSize" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Create" Return_type="System.IO.FileStream">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="bufferSize" Type="System.Int32" />
          <Parameter Name="options" Type="System.IO.FileOptions" />
        </Parameters>
      </Method>
      <Method Name="Create" Return_type="System.IO.FileStream">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="bufferSize" Type="System.Int32" />
          <Parameter Name="options" Type="System.IO.FileOptions" />
          <Parameter Name="fileSecurity" Type="System.Security.AccessControl.FileSecurity" />
        </Parameters>
      </Method>
      <Method Name="Delete" Return_type="System.Void">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Decrypt" Return_type="System.Void">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Encrypt" Return_type="System.Void">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Exists" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Open" Return_type="System.IO.FileStream">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="mode" Type="System.IO.FileMode" />
        </Parameters>
      </Method>
      <Method Name="Open" Return_type="System.IO.FileStream">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="mode" Type="System.IO.FileMode" />
          <Parameter Name="access" Type="System.IO.FileAccess" />
        </Parameters>
      </Method>
      <Method Name="Open" Return_type="System.IO.FileStream">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="mode" Type="System.IO.FileMode" />
          <Parameter Name="access" Type="System.IO.FileAccess" />
          <Parameter Name="share" Type="System.IO.FileShare" />
        </Parameters>
      </Method>
      <Method Name="SetCreationTime" Return_type="System.Void">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="creationTime" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="SetCreationTimeUtc" Return_type="System.Void">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="creationTimeUtc" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetCreationTime" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetCreationTimeUtc" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="SetLastAccessTime" Return_type="System.Void">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="lastAccessTime" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="SetLastAccessTimeUtc" Return_type="System.Void">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="lastAccessTimeUtc" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetLastAccessTime" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetLastAccessTimeUtc" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="SetLastWriteTime" Return_type="System.Void">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="lastWriteTime" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="SetLastWriteTimeUtc" Return_type="System.Void">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="lastWriteTimeUtc" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetLastWriteTime" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetLastWriteTimeUtc" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetAttributes" Return_type="System.IO.FileAttributes">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="SetAttributes" Return_type="System.Void">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="fileAttributes" Type="System.IO.FileAttributes" />
        </Parameters>
      </Method>
      <Method Name="GetAccessControl" Return_type="System.Security.AccessControl.FileSecurity">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetAccessControl" Return_type="System.Security.AccessControl.FileSecurity">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
        </Parameters>
      </Method>
      <Method Name="SetAccessControl" Return_type="System.Void">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="fileSecurity" Type="System.Security.AccessControl.FileSecurity" />
        </Parameters>
      </Method>
      <Method Name="OpenRead" Return_type="System.IO.FileStream">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="OpenWrite" Return_type="System.IO.FileStream">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ReadAllText" Return_type="System.String">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ReadAllText" Return_type="System.String">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="encoding" Type="System.Text.Encoding" />
        </Parameters>
      </Method>
      <Method Name="WriteAllText" Return_type="System.Void">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="contents" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="WriteAllText" Return_type="System.Void">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="contents" Type="System.String" />
          <Parameter Name="encoding" Type="System.Text.Encoding" />
        </Parameters>
      </Method>
      <Method Name="ReadAllBytes" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="WriteAllBytes" Return_type="System.Void">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="bytes" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="ReadAllLines" Return_type="System.String[]">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ReadAllLines" Return_type="System.String[]">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="encoding" Type="System.Text.Encoding" />
        </Parameters>
      </Method>
      <Method Name="ReadLines" Return_type="System.Collections.Generic.IEnumerable`1[System.String]">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ReadLines" Return_type="System.Collections.Generic.IEnumerable`1[System.String]">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="encoding" Type="System.Text.Encoding" />
        </Parameters>
      </Method>
      <Method Name="WriteAllLines" Return_type="System.Void">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="contents" Type="System.String[]" />
        </Parameters>
      </Method>
      <Method Name="WriteAllLines" Return_type="System.Void">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="contents" Type="System.String[]" />
          <Parameter Name="encoding" Type="System.Text.Encoding" />
        </Parameters>
      </Method>
      <Method Name="WriteAllLines" Return_type="System.Void">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="contents" Type="System.Collections.Generic.IEnumerable`1[System.String]" />
        </Parameters>
      </Method>
      <Method Name="WriteAllLines" Return_type="System.Void">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="contents" Type="System.Collections.Generic.IEnumerable`1[System.String]" />
          <Parameter Name="encoding" Type="System.Text.Encoding" />
        </Parameters>
      </Method>
      <Method Name="AppendAllText" Return_type="System.Void">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="contents" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="AppendAllText" Return_type="System.Void">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="contents" Type="System.String" />
          <Parameter Name="encoding" Type="System.Text.Encoding" />
        </Parameters>
      </Method>
      <Method Name="AppendAllLines" Return_type="System.Void">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="contents" Type="System.Collections.Generic.IEnumerable`1[System.String]" />
        </Parameters>
      </Method>
      <Method Name="AppendAllLines" Return_type="System.Void">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="contents" Type="System.Collections.Generic.IEnumerable`1[System.String]" />
          <Parameter Name="encoding" Type="System.Text.Encoding" />
        </Parameters>
      </Method>
      <Method Name="Move" Return_type="System.Void">
        <Parameters>
          <Parameter Name="sourceFileName" Type="System.String" />
          <Parameter Name="destFileName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Replace" Return_type="System.Void">
        <Parameters>
          <Parameter Name="sourceFileName" Type="System.String" />
          <Parameter Name="destinationFileName" Type="System.String" />
          <Parameter Name="destinationBackupFileName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Replace" Return_type="System.Void">
        <Parameters>
          <Parameter Name="sourceFileName" Type="System.String" />
          <Parameter Name="destinationFileName" Type="System.String" />
          <Parameter Name="destinationBackupFileName" Type="System.String" />
          <Parameter Name="ignoreMetadataErrors" Type="System.Boolean" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.IO.FileInfo">
    <Properties>
      <Property Name="Name" Type="System.String" />
      <Property Name="Length" Type="System.Int64" />
      <Property Name="DirectoryName" Type="System.String" />
      <Property Name="Directory" Type="System.IO.DirectoryInfo" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="Exists" Type="System.Boolean" />
      <Property Name="FullName" Type="System.String" />
      <Property Name="Extension" Type="System.String" />
      <Property Name="CreationTime" Type="System.DateTime" />
      <Property Name="CreationTimeUtc" Type="System.DateTime" />
      <Property Name="LastAccessTime" Type="System.DateTime" />
      <Property Name="LastAccessTimeUtc" Type="System.DateTime" />
      <Property Name="LastWriteTime" Type="System.DateTime" />
      <Property Name="LastWriteTimeUtc" Type="System.DateTime" />
      <Property Name="Attributes" Type="System.IO.FileAttributes" />
    </Properties>
    <Methods>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Length" Return_type="System.Int64">
        <Parameters />
      </Method>
      <Method Name="get_DirectoryName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Directory" Return_type="System.IO.DirectoryInfo">
        <Parameters />
      </Method>
      <Method Name="get_IsReadOnly" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_IsReadOnly" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetAccessControl" Return_type="System.Security.AccessControl.FileSecurity">
        <Parameters />
      </Method>
      <Method Name="GetAccessControl" Return_type="System.Security.AccessControl.FileSecurity">
        <Parameters>
          <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
        </Parameters>
      </Method>
      <Method Name="SetAccessControl" Return_type="System.Void">
        <Parameters>
          <Parameter Name="fileSecurity" Type="System.Security.AccessControl.FileSecurity" />
        </Parameters>
      </Method>
      <Method Name="OpenText" Return_type="System.IO.StreamReader">
        <Parameters />
      </Method>
      <Method Name="CreateText" Return_type="System.IO.StreamWriter">
        <Parameters />
      </Method>
      <Method Name="AppendText" Return_type="System.IO.StreamWriter">
        <Parameters />
      </Method>
      <Method Name="CopyTo" Return_type="System.IO.FileInfo">
        <Parameters>
          <Parameter Name="destFileName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="CopyTo" Return_type="System.IO.FileInfo">
        <Parameters>
          <Parameter Name="destFileName" Type="System.String" />
          <Parameter Name="overwrite" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="Create" Return_type="System.IO.FileStream">
        <Parameters />
      </Method>
      <Method Name="Delete" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Decrypt" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Encrypt" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_Exists" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Open" Return_type="System.IO.FileStream">
        <Parameters>
          <Parameter Name="mode" Type="System.IO.FileMode" />
        </Parameters>
      </Method>
      <Method Name="Open" Return_type="System.IO.FileStream">
        <Parameters>
          <Parameter Name="mode" Type="System.IO.FileMode" />
          <Parameter Name="access" Type="System.IO.FileAccess" />
        </Parameters>
      </Method>
      <Method Name="Open" Return_type="System.IO.FileStream">
        <Parameters>
          <Parameter Name="mode" Type="System.IO.FileMode" />
          <Parameter Name="access" Type="System.IO.FileAccess" />
          <Parameter Name="share" Type="System.IO.FileShare" />
        </Parameters>
      </Method>
      <Method Name="OpenRead" Return_type="System.IO.FileStream">
        <Parameters />
      </Method>
      <Method Name="OpenWrite" Return_type="System.IO.FileStream">
        <Parameters />
      </Method>
      <Method Name="MoveTo" Return_type="System.Void">
        <Parameters>
          <Parameter Name="destFileName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Replace" Return_type="System.IO.FileInfo">
        <Parameters>
          <Parameter Name="destinationFileName" Type="System.String" />
          <Parameter Name="destinationBackupFileName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Replace" Return_type="System.IO.FileInfo">
        <Parameters>
          <Parameter Name="destinationFileName" Type="System.String" />
          <Parameter Name="destinationBackupFileName" Type="System.String" />
          <Parameter Name="ignoreMetadataErrors" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.IO.FileLoadException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="FileName" Type="System.String" />
      <Property Name="FusionLog" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Message" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_FileName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_FusionLog" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetObjectData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.IO.FileNotFoundException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="FileName" Type="System.String" />
      <Property Name="FusionLog" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Message" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_FileName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_FusionLog" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetObjectData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.IO.FileStream">
    <Properties>
      <Property Name="CanRead" Type="System.Boolean" />
      <Property Name="CanWrite" Type="System.Boolean" />
      <Property Name="CanSeek" Type="System.Boolean" />
      <Property Name="IsAsync" Type="System.Boolean" />
      <Property Name="Length" Type="System.Int64" />
      <Property Name="Name" Type="System.String" />
      <Property Name="Position" Type="System.Int64" />
      <Property Name="Handle" Type="System.IntPtr" />
      <Property Name="SafeFileHandle" Type="Microsoft.Win32.SafeHandles.SafeFileHandle" />
      <Property Name="CanTimeout" Type="System.Boolean" />
      <Property Name="ReadTimeout" Type="System.Int32" />
      <Property Name="WriteTimeout" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_CanRead" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CanWrite" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CanSeek" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsAsync" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Length" Return_type="System.Int64">
        <Parameters />
      </Method>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Position" Return_type="System.Int64">
        <Parameters />
      </Method>
      <Method Name="set_Position" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="GetAccessControl" Return_type="System.Security.AccessControl.FileSecurity">
        <Parameters />
      </Method>
      <Method Name="SetAccessControl" Return_type="System.Void">
        <Parameters>
          <Parameter Name="fileSecurity" Type="System.Security.AccessControl.FileSecurity" />
        </Parameters>
      </Method>
      <Method Name="Flush" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Flush" Return_type="System.Void">
        <Parameters>
          <Parameter Name="flushToDisk" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_Handle" Return_type="System.IntPtr">
        <Parameters />
      </Method>
      <Method Name="get_SafeFileHandle" Return_type="Microsoft.Win32.SafeHandles.SafeFileHandle">
        <Parameters />
      </Method>
      <Method Name="SetLength" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="Read" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="array" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Seek" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="offset" Type="System.Int64" />
          <Parameter Name="origin" Type="System.IO.SeekOrigin" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="BeginRead" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="array" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="numBytes" Type="System.Int32" />
          <Parameter Name="userCallback" Type="System.AsyncCallback" />
          <Parameter Name="stateObject" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndRead" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
      <Method Name="ReadByte" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="BeginWrite" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="array" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="numBytes" Type="System.Int32" />
          <Parameter Name="userCallback" Type="System.AsyncCallback" />
          <Parameter Name="stateObject" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndWrite" Return_type="System.Void">
        <Parameters>
          <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
      <Method Name="WriteByte" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Byte" />
        </Parameters>
      </Method>
      <Method Name="Lock" Return_type="System.Void">
        <Parameters>
          <Parameter Name="position" Type="System.Int64" />
          <Parameter Name="length" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="Unlock" Return_type="System.Void">
        <Parameters>
          <Parameter Name="position" Type="System.Int64" />
          <Parameter Name="length" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="ReadAsync" Return_type="System.Threading.Tasks.Task`1[System.Int32]">
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="WriteAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="FlushAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.IO.FileSystemInfo">
    <Properties>
      <Property Name="FullName" Type="System.String" />
      <Property Name="Extension" Type="System.String" />
      <Property Name="Name" Type="System.String" />
      <Property Name="Exists" Type="System.Boolean" />
      <Property Name="CreationTime" Type="System.DateTime" />
      <Property Name="CreationTimeUtc" Type="System.DateTime" />
      <Property Name="LastAccessTime" Type="System.DateTime" />
      <Property Name="LastAccessTimeUtc" Type="System.DateTime" />
      <Property Name="LastWriteTime" Type="System.DateTime" />
      <Property Name="LastWriteTimeUtc" Type="System.DateTime" />
      <Property Name="Attributes" Type="System.IO.FileAttributes" />
    </Properties>
    <Methods>
      <Method Name="get_FullName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Extension" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Exists" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Delete" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_CreationTime" Return_type="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="set_CreationTime" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="get_CreationTimeUtc" Return_type="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="set_CreationTimeUtc" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="get_LastAccessTime" Return_type="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="set_LastAccessTime" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="get_LastAccessTimeUtc" Return_type="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="set_LastAccessTimeUtc" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="get_LastWriteTime" Return_type="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="set_LastWriteTime" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="get_LastWriteTimeUtc" Return_type="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="set_LastWriteTimeUtc" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="Refresh" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_Attributes" Return_type="System.IO.FileAttributes">
        <Parameters />
      </Method>
      <Method Name="set_Attributes" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.IO.FileAttributes" />
        </Parameters>
      </Method>
      <Method Name="GetObjectData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.IO.IOException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.IO.MemoryStream">
    <Properties>
      <Property Name="CanRead" Type="System.Boolean" />
      <Property Name="CanSeek" Type="System.Boolean" />
      <Property Name="CanWrite" Type="System.Boolean" />
      <Property Name="Capacity" Type="System.Int32" />
      <Property Name="Length" Type="System.Int64" />
      <Property Name="Position" Type="System.Int64" />
      <Property Name="CanTimeout" Type="System.Boolean" />
      <Property Name="ReadTimeout" Type="System.Int32" />
      <Property Name="WriteTimeout" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_CanRead" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CanSeek" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CanWrite" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Flush" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="FlushAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="GetBuffer" Return_type="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="TryGetBuffer" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="buffer" Type="System.ArraySegment`1[System.Byte]&amp;" />
        </Parameters>
      </Method>
      <Method Name="get_Capacity" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_Capacity" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_Length" Return_type="System.Int64">
        <Parameters />
      </Method>
      <Method Name="get_Position" Return_type="System.Int64">
        <Parameters />
      </Method>
      <Method Name="set_Position" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="Read" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ReadAsync" Return_type="System.Threading.Tasks.Task`1[System.Int32]">
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="ReadByte" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="CopyToAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="destination" Type="System.IO.Stream" />
          <Parameter Name="bufferSize" Type="System.Int32" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="Seek" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="offset" Type="System.Int64" />
          <Parameter Name="loc" Type="System.IO.SeekOrigin" />
        </Parameters>
      </Method>
      <Method Name="SetLength" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="ToArray" Return_type="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="WriteAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="WriteByte" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Byte" />
        </Parameters>
      </Method>
      <Method Name="WriteTo" Return_type="System.Void">
        <Parameters>
          <Parameter Name="stream" Type="System.IO.Stream" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.IO.Path">
    <Properties />
    <Methods>
      <Method Name="ChangeExtension" Return_type="System.String">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="extension" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetDirectoryName" Return_type="System.String">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetInvalidPathChars" Return_type="System.Char[]">
        <Parameters />
      </Method>
      <Method Name="GetInvalidFileNameChars" Return_type="System.Char[]">
        <Parameters />
      </Method>
      <Method Name="GetExtension" Return_type="System.String">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetFullPath" Return_type="System.String">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetFileName" Return_type="System.String">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetFileNameWithoutExtension" Return_type="System.String">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetPathRoot" Return_type="System.String">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetTempPath" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetRandomFileName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetTempFileName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="HasExtension" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="IsPathRooted" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Combine" Return_type="System.String">
        <Parameters>
          <Parameter Name="path1" Type="System.String" />
          <Parameter Name="path2" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Combine" Return_type="System.String">
        <Parameters>
          <Parameter Name="path1" Type="System.String" />
          <Parameter Name="path2" Type="System.String" />
          <Parameter Name="path3" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Combine" Return_type="System.String">
        <Parameters>
          <Parameter Name="path1" Type="System.String" />
          <Parameter Name="path2" Type="System.String" />
          <Parameter Name="path3" Type="System.String" />
          <Parameter Name="path4" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Combine" Return_type="System.String">
        <Parameters>
          <Parameter Name="paths" Type="System.String[]" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.IO.PathTooLongException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.IO.Stream">
    <Properties>
      <Property Name="CanRead" Type="System.Boolean" />
      <Property Name="CanSeek" Type="System.Boolean" />
      <Property Name="CanTimeout" Type="System.Boolean" />
      <Property Name="CanWrite" Type="System.Boolean" />
      <Property Name="Length" Type="System.Int64" />
      <Property Name="Position" Type="System.Int64" />
      <Property Name="ReadTimeout" Type="System.Int32" />
      <Property Name="WriteTimeout" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_CanRead" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CanSeek" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CanTimeout" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CanWrite" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Length" Return_type="System.Int64">
        <Parameters />
      </Method>
      <Method Name="get_Position" Return_type="System.Int64">
        <Parameters />
      </Method>
      <Method Name="set_Position" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="get_ReadTimeout" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_ReadTimeout" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_WriteTimeout" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_WriteTimeout" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="CopyToAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="destination" Type="System.IO.Stream" />
        </Parameters>
      </Method>
      <Method Name="CopyToAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="destination" Type="System.IO.Stream" />
          <Parameter Name="bufferSize" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="CopyToAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="destination" Type="System.IO.Stream" />
          <Parameter Name="bufferSize" Type="System.Int32" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="CopyTo" Return_type="System.Void">
        <Parameters>
          <Parameter Name="destination" Type="System.IO.Stream" />
        </Parameters>
      </Method>
      <Method Name="CopyTo" Return_type="System.Void">
        <Parameters>
          <Parameter Name="destination" Type="System.IO.Stream" />
          <Parameter Name="bufferSize" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Close" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Dispose" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Flush" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="FlushAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters />
      </Method>
      <Method Name="FlushAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="BeginRead" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndRead" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
      <Method Name="ReadAsync" Return_type="System.Threading.Tasks.Task`1[System.Int32]">
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ReadAsync" Return_type="System.Threading.Tasks.Task`1[System.Int32]">
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="BeginWrite" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndWrite" Return_type="System.Void">
        <Parameters>
          <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
      <Method Name="WriteAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="WriteAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="Seek" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="offset" Type="System.Int64" />
          <Parameter Name="origin" Type="System.IO.SeekOrigin" />
        </Parameters>
      </Method>
      <Method Name="SetLength" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="Read" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ReadByte" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="WriteByte" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Byte" />
        </Parameters>
      </Method>
      <Method Name="Synchronized" Return_type="System.IO.Stream">
        <Parameters>
          <Parameter Name="stream" Type="System.IO.Stream" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.IO.StreamReader">
    <Properties>
      <Property Name="CurrentEncoding" Type="System.Text.Encoding" />
      <Property Name="BaseStream" Type="System.IO.Stream" />
      <Property Name="EndOfStream" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="Close" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_CurrentEncoding" Return_type="System.Text.Encoding">
        <Parameters />
      </Method>
      <Method Name="get_BaseStream" Return_type="System.IO.Stream">
        <Parameters />
      </Method>
      <Method Name="DiscardBufferedData" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_EndOfStream" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Peek" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Read" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Read" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="buffer" Type="System.Char[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ReadToEnd" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="ReadBlock" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="buffer" Type="System.Char[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ReadLine" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="ReadLineAsync" Return_type="System.Threading.Tasks.Task`1[System.String]">
        <Parameters />
      </Method>
      <Method Name="ReadToEndAsync" Return_type="System.Threading.Tasks.Task`1[System.String]">
        <Parameters />
      </Method>
      <Method Name="ReadAsync" Return_type="System.Threading.Tasks.Task`1[System.Int32]">
        <Parameters>
          <Parameter Name="buffer" Type="System.Char[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ReadBlockAsync" Return_type="System.Threading.Tasks.Task`1[System.Int32]">
        <Parameters>
          <Parameter Name="buffer" Type="System.Char[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.IO.StreamWriter">
    <Properties>
      <Property Name="AutoFlush" Type="System.Boolean" />
      <Property Name="BaseStream" Type="System.IO.Stream" />
      <Property Name="Encoding" Type="System.Text.Encoding" />
      <Property Name="FormatProvider" Type="System.IFormatProvider" />
      <Property Name="NewLine" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="Close" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Flush" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_AutoFlush" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_AutoFlush" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_BaseStream" Return_type="System.IO.Stream">
        <Parameters />
      </Method>
      <Method Name="get_Encoding" Return_type="System.Text.Encoding">
        <Parameters />
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="buffer" Type="System.Char[]" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="buffer" Type="System.Char[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="WriteAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="value" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="WriteAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="WriteAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="buffer" Type="System.Char[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="WriteLineAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters />
      </Method>
      <Method Name="WriteLineAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="value" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="WriteLineAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="WriteLineAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="buffer" Type="System.Char[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="FlushAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.IO.StringReader">
    <Properties />
    <Methods>
      <Method Name="Close" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Peek" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Read" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Read" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="buffer" Type="System.Char[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ReadToEnd" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="ReadLine" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="ReadLineAsync" Return_type="System.Threading.Tasks.Task`1[System.String]">
        <Parameters />
      </Method>
      <Method Name="ReadToEndAsync" Return_type="System.Threading.Tasks.Task`1[System.String]">
        <Parameters />
      </Method>
      <Method Name="ReadBlockAsync" Return_type="System.Threading.Tasks.Task`1[System.Int32]">
        <Parameters>
          <Parameter Name="buffer" Type="System.Char[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ReadAsync" Return_type="System.Threading.Tasks.Task`1[System.Int32]">
        <Parameters>
          <Parameter Name="buffer" Type="System.Char[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.IO.StringWriter">
    <Properties>
      <Property Name="Encoding" Type="System.Text.Encoding" />
      <Property Name="FormatProvider" Type="System.IFormatProvider" />
      <Property Name="NewLine" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="Close" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_Encoding" Return_type="System.Text.Encoding">
        <Parameters />
      </Method>
      <Method Name="GetStringBuilder" Return_type="System.Text.StringBuilder">
        <Parameters />
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="buffer" Type="System.Char[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="WriteAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="value" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="WriteAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="WriteAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="buffer" Type="System.Char[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="WriteLineAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="value" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="WriteLineAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="WriteLineAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="buffer" Type="System.Char[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="FlushAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.IO.TextReader">
    <Properties />
    <Methods>
      <Method Name="Close" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Dispose" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Peek" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Read" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Read" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="buffer" Type="System.Char[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ReadToEnd" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="ReadBlock" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="buffer" Type="System.Char[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ReadLine" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="ReadLineAsync" Return_type="System.Threading.Tasks.Task`1[System.String]">
        <Parameters />
      </Method>
      <Method Name="ReadToEndAsync" Return_type="System.Threading.Tasks.Task`1[System.String]">
        <Parameters />
      </Method>
      <Method Name="ReadAsync" Return_type="System.Threading.Tasks.Task`1[System.Int32]">
        <Parameters>
          <Parameter Name="buffer" Type="System.Char[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ReadBlockAsync" Return_type="System.Threading.Tasks.Task`1[System.Int32]">
        <Parameters>
          <Parameter Name="buffer" Type="System.Char[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Synchronized" Return_type="System.IO.TextReader">
        <Parameters>
          <Parameter Name="reader" Type="System.IO.TextReader" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.IO.TextWriter">
    <Properties>
      <Property Name="FormatProvider" Type="System.IFormatProvider" />
      <Property Name="Encoding" Type="System.Text.Encoding" />
      <Property Name="NewLine" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_FormatProvider" Return_type="System.IFormatProvider">
        <Parameters />
      </Method>
      <Method Name="Close" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Dispose" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Flush" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_Encoding" Return_type="System.Text.Encoding">
        <Parameters />
      </Method>
      <Method Name="get_NewLine" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_NewLine" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Synchronized" Return_type="System.IO.TextWriter">
        <Parameters>
          <Parameter Name="writer" Type="System.IO.TextWriter" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="buffer" Type="System.Char[]" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="buffer" Type="System.Char[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.UInt32" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.UInt64" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Single" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Decimal" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="format" Type="System.String" />
          <Parameter Name="arg0" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="format" Type="System.String" />
          <Parameter Name="arg0" Type="System.Object" />
          <Parameter Name="arg1" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="format" Type="System.String" />
          <Parameter Name="arg0" Type="System.Object" />
          <Parameter Name="arg1" Type="System.Object" />
          <Parameter Name="arg2" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="format" Type="System.String" />
          <Parameter Name="arg" Type="System.Object[]" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="WriteLine" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" Return_type="System.Void">
        <Parameters>
          <Parameter Name="buffer" Type="System.Char[]" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" Return_type="System.Void">
        <Parameters>
          <Parameter Name="buffer" Type="System.Char[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.UInt32" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.UInt64" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Single" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Decimal" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" Return_type="System.Void">
        <Parameters>
          <Parameter Name="format" Type="System.String" />
          <Parameter Name="arg0" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" Return_type="System.Void">
        <Parameters>
          <Parameter Name="format" Type="System.String" />
          <Parameter Name="arg0" Type="System.Object" />
          <Parameter Name="arg1" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" Return_type="System.Void">
        <Parameters>
          <Parameter Name="format" Type="System.String" />
          <Parameter Name="arg0" Type="System.Object" />
          <Parameter Name="arg1" Type="System.Object" />
          <Parameter Name="arg2" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="WriteLine" Return_type="System.Void">
        <Parameters>
          <Parameter Name="format" Type="System.String" />
          <Parameter Name="arg" Type="System.Object[]" />
        </Parameters>
      </Method>
      <Method Name="WriteAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="value" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="WriteAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="WriteAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="buffer" Type="System.Char[]" />
        </Parameters>
      </Method>
      <Method Name="WriteAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="buffer" Type="System.Char[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="WriteLineAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="value" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="WriteLineAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="WriteLineAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="buffer" Type="System.Char[]" />
        </Parameters>
      </Method>
      <Method Name="WriteLineAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="buffer" Type="System.Char[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="WriteLineAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters />
      </Method>
      <Method Name="FlushAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.IO.UnmanagedMemoryAccessor">
    <Properties>
      <Property Name="Capacity" Type="System.Int64" />
      <Property Name="CanRead" Type="System.Boolean" />
      <Property Name="CanWrite" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_Capacity" Return_type="System.Int64">
        <Parameters />
      </Method>
      <Method Name="get_CanRead" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CanWrite" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Dispose" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="ReadBoolean" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="position" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="ReadByte" Return_type="System.Byte">
        <Parameters>
          <Parameter Name="position" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="ReadChar" Return_type="System.Char">
        <Parameters>
          <Parameter Name="position" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="ReadInt16" Return_type="System.Int16">
        <Parameters>
          <Parameter Name="position" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="ReadInt32" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="position" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="ReadInt64" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="position" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="ReadDecimal" Return_type="System.Decimal">
        <Parameters>
          <Parameter Name="position" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="ReadSingle" Return_type="System.Single">
        <Parameters>
          <Parameter Name="position" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="ReadDouble" Return_type="System.Double">
        <Parameters>
          <Parameter Name="position" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="ReadSByte" Return_type="System.SByte">
        <Parameters>
          <Parameter Name="position" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="ReadUInt16" Return_type="System.UInt16">
        <Parameters>
          <Parameter Name="position" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="ReadUInt32" Return_type="System.UInt32">
        <Parameters>
          <Parameter Name="position" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="ReadUInt64" Return_type="System.UInt64">
        <Parameters>
          <Parameter Name="position" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="Read" Return_type="System.Void">
        <Parameters>
          <Parameter Name="position" Type="System.Int64" />
          <Parameter Name="structure" Type="T&amp;" />
        </Parameters>
      </Method>
      <Method Name="ReadArray" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="position" Type="System.Int64" />
          <Parameter Name="array" Type="T[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="position" Type="System.Int64" />
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="position" Type="System.Int64" />
          <Parameter Name="value" Type="System.Byte" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="position" Type="System.Int64" />
          <Parameter Name="value" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="position" Type="System.Int64" />
          <Parameter Name="value" Type="System.Int16" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="position" Type="System.Int64" />
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="position" Type="System.Int64" />
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="position" Type="System.Int64" />
          <Parameter Name="value" Type="System.Decimal" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="position" Type="System.Int64" />
          <Parameter Name="value" Type="System.Single" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="position" Type="System.Int64" />
          <Parameter Name="value" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="position" Type="System.Int64" />
          <Parameter Name="value" Type="System.SByte" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="position" Type="System.Int64" />
          <Parameter Name="value" Type="System.UInt16" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="position" Type="System.Int64" />
          <Parameter Name="value" Type="System.UInt32" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="position" Type="System.Int64" />
          <Parameter Name="value" Type="System.UInt64" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="position" Type="System.Int64" />
          <Parameter Name="structure" Type="T&amp;" />
        </Parameters>
      </Method>
      <Method Name="WriteArray" Return_type="System.Void">
        <Parameters>
          <Parameter Name="position" Type="System.Int64" />
          <Parameter Name="array" Type="T[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.IO.UnmanagedMemoryStream">
    <Properties>
      <Property Name="CanRead" Type="System.Boolean" />
      <Property Name="CanSeek" Type="System.Boolean" />
      <Property Name="CanWrite" Type="System.Boolean" />
      <Property Name="Length" Type="System.Int64" />
      <Property Name="Capacity" Type="System.Int64" />
      <Property Name="Position" Type="System.Int64" />
      <Property Name="PositionPointer" Type="System.Byte*" />
      <Property Name="CanTimeout" Type="System.Boolean" />
      <Property Name="ReadTimeout" Type="System.Int32" />
      <Property Name="WriteTimeout" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_CanRead" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CanSeek" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CanWrite" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Flush" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="FlushAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="get_Length" Return_type="System.Int64">
        <Parameters />
      </Method>
      <Method Name="get_Capacity" Return_type="System.Int64">
        <Parameters />
      </Method>
      <Method Name="get_Position" Return_type="System.Int64">
        <Parameters />
      </Method>
      <Method Name="set_Position" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="get_PositionPointer" Return_type="System.Byte*">
        <Parameters />
      </Method>
      <Method Name="set_PositionPointer" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Byte*" />
        </Parameters>
      </Method>
      <Method Name="Read" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ReadAsync" Return_type="System.Threading.Tasks.Task`1[System.Int32]">
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="ReadByte" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Seek" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="offset" Type="System.Int64" />
          <Parameter Name="loc" Type="System.IO.SeekOrigin" />
        </Parameters>
      </Method>
      <Method Name="SetLength" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="WriteAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="WriteByte" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Byte" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.IO.IsolatedStorage.IsolatedStorage">
    <Properties>
      <Property Name="MaximumSize" Type="System.UInt64" />
      <Property Name="CurrentSize" Type="System.UInt64" />
      <Property Name="UsedSize" Type="System.Int64" />
      <Property Name="Quota" Type="System.Int64" />
      <Property Name="AvailableFreeSpace" Type="System.Int64" />
      <Property Name="DomainIdentity" Type="System.Object" />
      <Property Name="ApplicationIdentity" Type="System.Object" />
      <Property Name="AssemblyIdentity" Type="System.Object" />
      <Property Name="Scope" Type="System.IO.IsolatedStorage.IsolatedStorageScope" />
    </Properties>
    <Methods>
      <Method Name="get_MaximumSize" Return_type="System.UInt64">
        <Parameters />
      </Method>
      <Method Name="get_CurrentSize" Return_type="System.UInt64">
        <Parameters />
      </Method>
      <Method Name="get_UsedSize" Return_type="System.Int64">
        <Parameters />
      </Method>
      <Method Name="get_Quota" Return_type="System.Int64">
        <Parameters />
      </Method>
      <Method Name="get_AvailableFreeSpace" Return_type="System.Int64">
        <Parameters />
      </Method>
      <Method Name="get_DomainIdentity" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_ApplicationIdentity" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_AssemblyIdentity" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="IncreaseQuotaTo" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="newQuotaSize" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="get_Scope" Return_type="System.IO.IsolatedStorage.IsolatedStorageScope">
        <Parameters />
      </Method>
      <Method Name="Remove" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.IO.IsolatedStorage.IsolatedStorageFileStream">
    <Properties>
      <Property Name="CanRead" Type="System.Boolean" />
      <Property Name="CanWrite" Type="System.Boolean" />
      <Property Name="CanSeek" Type="System.Boolean" />
      <Property Name="IsAsync" Type="System.Boolean" />
      <Property Name="Length" Type="System.Int64" />
      <Property Name="Position" Type="System.Int64" />
      <Property Name="Handle" Type="System.IntPtr" />
      <Property Name="SafeFileHandle" Type="Microsoft.Win32.SafeHandles.SafeFileHandle" />
      <Property Name="Name" Type="System.String" />
      <Property Name="CanTimeout" Type="System.Boolean" />
      <Property Name="ReadTimeout" Type="System.Int32" />
      <Property Name="WriteTimeout" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_CanRead" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CanWrite" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CanSeek" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsAsync" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Length" Return_type="System.Int64">
        <Parameters />
      </Method>
      <Method Name="get_Position" Return_type="System.Int64">
        <Parameters />
      </Method>
      <Method Name="set_Position" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="Flush" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Flush" Return_type="System.Void">
        <Parameters>
          <Parameter Name="flushToDisk" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_Handle" Return_type="System.IntPtr">
        <Parameters />
      </Method>
      <Method Name="get_SafeFileHandle" Return_type="Microsoft.Win32.SafeHandles.SafeFileHandle">
        <Parameters />
      </Method>
      <Method Name="SetLength" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="Lock" Return_type="System.Void">
        <Parameters>
          <Parameter Name="position" Type="System.Int64" />
          <Parameter Name="length" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="Unlock" Return_type="System.Void">
        <Parameters>
          <Parameter Name="position" Type="System.Int64" />
          <Parameter Name="length" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="Read" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ReadByte" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Seek" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="offset" Type="System.Int64" />
          <Parameter Name="origin" Type="System.IO.SeekOrigin" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="WriteByte" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Byte" />
        </Parameters>
      </Method>
      <Method Name="BeginRead" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="numBytes" Type="System.Int32" />
          <Parameter Name="userCallback" Type="System.AsyncCallback" />
          <Parameter Name="stateObject" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndRead" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
      <Method Name="BeginWrite" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="numBytes" Type="System.Int32" />
          <Parameter Name="userCallback" Type="System.AsyncCallback" />
          <Parameter Name="stateObject" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndWrite" Return_type="System.Void">
        <Parameters>
          <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.IO.IsolatedStorage.IsolatedStorageException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.IO.IsolatedStorage.IsolatedStorageSecurityState">
    <Properties>
      <Property Name="Options" Type="System.IO.IsolatedStorage.IsolatedStorageSecurityOptions" />
      <Property Name="UsedSize" Type="System.Int64" />
      <Property Name="Quota" Type="System.Int64" />
    </Properties>
    <Methods>
      <Method Name="get_Options" Return_type="System.IO.IsolatedStorage.IsolatedStorageSecurityOptions">
        <Parameters />
      </Method>
      <Method Name="get_UsedSize" Return_type="System.Int64">
        <Parameters />
      </Method>
      <Method Name="get_Quota" Return_type="System.Int64">
        <Parameters />
      </Method>
      <Method Name="set_Quota" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="EnsureState" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.IO.IsolatedStorage.IsolatedStorageFile">
    <Properties>
      <Property Name="UsedSize" Type="System.Int64" />
      <Property Name="CurrentSize" Type="System.UInt64" />
      <Property Name="AvailableFreeSpace" Type="System.Int64" />
      <Property Name="Quota" Type="System.Int64" />
      <Property Name="IsEnabled" Type="System.Boolean" />
      <Property Name="MaximumSize" Type="System.UInt64" />
      <Property Name="DomainIdentity" Type="System.Object" />
      <Property Name="ApplicationIdentity" Type="System.Object" />
      <Property Name="AssemblyIdentity" Type="System.Object" />
      <Property Name="Scope" Type="System.IO.IsolatedStorage.IsolatedStorageScope" />
    </Properties>
    <Methods>
      <Method Name="GetUserStoreForDomain" Return_type="System.IO.IsolatedStorage.IsolatedStorageFile">
        <Parameters />
      </Method>
      <Method Name="GetUserStoreForAssembly" Return_type="System.IO.IsolatedStorage.IsolatedStorageFile">
        <Parameters />
      </Method>
      <Method Name="GetUserStoreForApplication" Return_type="System.IO.IsolatedStorage.IsolatedStorageFile">
        <Parameters />
      </Method>
      <Method Name="GetUserStoreForSite" Return_type="System.IO.IsolatedStorage.IsolatedStorageFile">
        <Parameters />
      </Method>
      <Method Name="GetMachineStoreForDomain" Return_type="System.IO.IsolatedStorage.IsolatedStorageFile">
        <Parameters />
      </Method>
      <Method Name="GetMachineStoreForAssembly" Return_type="System.IO.IsolatedStorage.IsolatedStorageFile">
        <Parameters />
      </Method>
      <Method Name="GetMachineStoreForApplication" Return_type="System.IO.IsolatedStorage.IsolatedStorageFile">
        <Parameters />
      </Method>
      <Method Name="GetStore" Return_type="System.IO.IsolatedStorage.IsolatedStorageFile">
        <Parameters>
          <Parameter Name="scope" Type="System.IO.IsolatedStorage.IsolatedStorageScope" />
          <Parameter Name="domainEvidenceType" Type="System.Type" />
          <Parameter Name="assemblyEvidenceType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetStore" Return_type="System.IO.IsolatedStorage.IsolatedStorageFile">
        <Parameters>
          <Parameter Name="scope" Type="System.IO.IsolatedStorage.IsolatedStorageScope" />
          <Parameter Name="domainIdentity" Type="System.Object" />
          <Parameter Name="assemblyIdentity" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetStore" Return_type="System.IO.IsolatedStorage.IsolatedStorageFile">
        <Parameters>
          <Parameter Name="scope" Type="System.IO.IsolatedStorage.IsolatedStorageScope" />
          <Parameter Name="domainEvidence" Type="System.Security.Policy.Evidence" />
          <Parameter Name="domainEvidenceType" Type="System.Type" />
          <Parameter Name="assemblyEvidence" Type="System.Security.Policy.Evidence" />
          <Parameter Name="assemblyEvidenceType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetStore" Return_type="System.IO.IsolatedStorage.IsolatedStorageFile">
        <Parameters>
          <Parameter Name="scope" Type="System.IO.IsolatedStorage.IsolatedStorageScope" />
          <Parameter Name="applicationEvidenceType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetStore" Return_type="System.IO.IsolatedStorage.IsolatedStorageFile">
        <Parameters>
          <Parameter Name="scope" Type="System.IO.IsolatedStorage.IsolatedStorageScope" />
          <Parameter Name="applicationIdentity" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="get_UsedSize" Return_type="System.Int64">
        <Parameters />
      </Method>
      <Method Name="get_CurrentSize" Return_type="System.UInt64">
        <Parameters />
      </Method>
      <Method Name="get_AvailableFreeSpace" Return_type="System.Int64">
        <Parameters />
      </Method>
      <Method Name="get_Quota" Return_type="System.Int64">
        <Parameters />
      </Method>
      <Method Name="get_IsEnabled" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_MaximumSize" Return_type="System.UInt64">
        <Parameters />
      </Method>
      <Method Name="IncreaseQuotaTo" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="newQuotaSize" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="DeleteFile" Return_type="System.Void">
        <Parameters>
          <Parameter Name="file" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="FileExists" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="DirectoryExists" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="CreateDirectory" Return_type="System.Void">
        <Parameters>
          <Parameter Name="dir" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetCreationTime" Return_type="System.DateTimeOffset">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetLastAccessTime" Return_type="System.DateTimeOffset">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetLastWriteTime" Return_type="System.DateTimeOffset">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="CopyFile" Return_type="System.Void">
        <Parameters>
          <Parameter Name="sourceFileName" Type="System.String" />
          <Parameter Name="destinationFileName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="CopyFile" Return_type="System.Void">
        <Parameters>
          <Parameter Name="sourceFileName" Type="System.String" />
          <Parameter Name="destinationFileName" Type="System.String" />
          <Parameter Name="overwrite" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="MoveFile" Return_type="System.Void">
        <Parameters>
          <Parameter Name="sourceFileName" Type="System.String" />
          <Parameter Name="destinationFileName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="MoveDirectory" Return_type="System.Void">
        <Parameters>
          <Parameter Name="sourceDirectoryName" Type="System.String" />
          <Parameter Name="destinationDirectoryName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="DeleteDirectory" Return_type="System.Void">
        <Parameters>
          <Parameter Name="dir" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetFileNames" Return_type="System.String[]">
        <Parameters />
      </Method>
      <Method Name="GetFileNames" Return_type="System.String[]">
        <Parameters>
          <Parameter Name="searchPattern" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetDirectoryNames" Return_type="System.String[]">
        <Parameters />
      </Method>
      <Method Name="GetDirectoryNames" Return_type="System.String[]">
        <Parameters>
          <Parameter Name="searchPattern" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="OpenFile" Return_type="System.IO.IsolatedStorage.IsolatedStorageFileStream">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="mode" Type="System.IO.FileMode" />
        </Parameters>
      </Method>
      <Method Name="OpenFile" Return_type="System.IO.IsolatedStorage.IsolatedStorageFileStream">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="mode" Type="System.IO.FileMode" />
          <Parameter Name="access" Type="System.IO.FileAccess" />
        </Parameters>
      </Method>
      <Method Name="OpenFile" Return_type="System.IO.IsolatedStorage.IsolatedStorageFileStream">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="mode" Type="System.IO.FileMode" />
          <Parameter Name="access" Type="System.IO.FileAccess" />
          <Parameter Name="share" Type="System.IO.FileShare" />
        </Parameters>
      </Method>
      <Method Name="CreateFile" Return_type="System.IO.IsolatedStorage.IsolatedStorageFileStream">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Remove" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Close" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Dispose" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Remove" Return_type="System.Void">
        <Parameters>
          <Parameter Name="scope" Type="System.IO.IsolatedStorage.IsolatedStorageScope" />
        </Parameters>
      </Method>
      <Method Name="GetEnumerator" Return_type="System.Collections.IEnumerator">
        <Parameters>
          <Parameter Name="scope" Type="System.IO.IsolatedStorage.IsolatedStorageScope" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.SecurityElement">
    <Properties>
      <Property Name="Tag" Type="System.String" />
      <Property Name="Attributes" Type="System.Collections.Hashtable" />
      <Property Name="Text" Type="System.String" />
      <Property Name="Children" Type="System.Collections.ArrayList" />
    </Properties>
    <Methods>
      <Method Name="AddAttribute" Return_type="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Attribute" Return_type="System.String">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="FromString" Return_type="System.Security.SecurityElement">
        <Parameters>
          <Parameter Name="xml" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_Tag" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Tag" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_Attributes" Return_type="System.Collections.Hashtable">
        <Parameters />
      </Method>
      <Method Name="set_Attributes" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Collections.Hashtable" />
        </Parameters>
      </Method>
      <Method Name="get_Text" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Text" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_Children" Return_type="System.Collections.ArrayList">
        <Parameters />
      </Method>
      <Method Name="set_Children" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Collections.ArrayList" />
        </Parameters>
      </Method>
      <Method Name="AddChild" Return_type="System.Void">
        <Parameters>
          <Parameter Name="child" Type="System.Security.SecurityElement" />
        </Parameters>
      </Method>
      <Method Name="Equal" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="other" Type="System.Security.SecurityElement" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="IsValidTag" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="tag" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="IsValidText" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="text" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="IsValidAttributeName" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="IsValidAttributeValue" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Escape" Return_type="System.String">
        <Parameters>
          <Parameter Name="str" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="SearchForChildByTag" Return_type="System.Security.SecurityElement">
        <Parameters>
          <Parameter Name="tag" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="SearchForTextOfTag" Return_type="System.String">
        <Parameters>
          <Parameter Name="tag" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.XmlSyntaxException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Security.SuppressUnmanagedCodeSecurityAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Security.UnverifiableCodeAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Security.AllowPartiallyTrustedCallersAttribute">
    <Properties>
      <Property Name="PartialTrustVisibilityLevel" Type="System.Security.PartialTrustVisibilityLevel" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_PartialTrustVisibilityLevel" Return_type="System.Security.PartialTrustVisibilityLevel">
        <Parameters />
      </Method>
      <Method Name="set_PartialTrustVisibilityLevel" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.PartialTrustVisibilityLevel" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.SecurityCriticalAttribute">
    <Properties>
      <Property Name="Scope" Type="System.Security.SecurityCriticalScope" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Scope" Return_type="System.Security.SecurityCriticalScope">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.SecurityTreatAsSafeAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Security.SecuritySafeCriticalAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Security.SecurityTransparentAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Security.SecurityRulesAttribute">
    <Properties>
      <Property Name="SkipVerificationInFullTrust" Type="System.Boolean" />
      <Property Name="RuleSet" Type="System.Security.SecurityRuleSet" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_SkipVerificationInFullTrust" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_SkipVerificationInFullTrust" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_RuleSet" Return_type="System.Security.SecurityRuleSet">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.CodeAccessPermission">
    <Properties />
    <Methods>
      <Method Name="RevertAssert" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="RevertDeny" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="RevertPermitOnly" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="RevertAll" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Demand" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Assert" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Deny" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="PermitOnly" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Union" Return_type="System.Security.IPermission">
        <Parameters>
          <Parameter Name="other" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="ToXml" Return_type="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" Return_type="System.Void">
        <Parameters>
          <Parameter Name="elem" Type="System.Security.SecurityElement" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Copy" Return_type="System.Security.IPermission">
        <Parameters />
      </Method>
      <Method Name="Intersect" Return_type="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="IsSubsetOf" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="target" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.HostSecurityManager">
    <Properties>
      <Property Name="Flags" Type="System.Security.HostSecurityManagerOptions" />
      <Property Name="DomainPolicy" Type="System.Security.Policy.PolicyLevel" />
    </Properties>
    <Methods>
      <Method Name="get_Flags" Return_type="System.Security.HostSecurityManagerOptions">
        <Parameters />
      </Method>
      <Method Name="get_DomainPolicy" Return_type="System.Security.Policy.PolicyLevel">
        <Parameters />
      </Method>
      <Method Name="ProvideAppDomainEvidence" Return_type="System.Security.Policy.Evidence">
        <Parameters>
          <Parameter Name="inputEvidence" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="ProvideAssemblyEvidence" Return_type="System.Security.Policy.Evidence">
        <Parameters>
          <Parameter Name="loadedAssembly" Type="System.Reflection.Assembly" />
          <Parameter Name="inputEvidence" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="DetermineApplicationTrust" Return_type="System.Security.Policy.ApplicationTrust">
        <Parameters>
          <Parameter Name="applicationEvidence" Type="System.Security.Policy.Evidence" />
          <Parameter Name="activatorEvidence" Type="System.Security.Policy.Evidence" />
          <Parameter Name="context" Type="System.Security.Policy.TrustManagerContext" />
        </Parameters>
      </Method>
      <Method Name="ResolvePolicy" Return_type="System.Security.PermissionSet">
        <Parameters>
          <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="GetHostSuppliedAppDomainEvidenceTypes" Return_type="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="GetHostSuppliedAssemblyEvidenceTypes" Return_type="System.Type[]">
        <Parameters>
          <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        </Parameters>
      </Method>
      <Method Name="GenerateAppDomainEvidence" Return_type="System.Security.Policy.EvidenceBase">
        <Parameters>
          <Parameter Name="evidenceType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GenerateAssemblyEvidence" Return_type="System.Security.Policy.EvidenceBase">
        <Parameters>
          <Parameter Name="evidenceType" Type="System.Type" />
          <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.NamedPermissionSet">
    <Properties>
      <Property Name="Name" Type="System.String" />
      <Property Name="Description" Type="System.String" />
      <Property Name="SyncRoot" Type="System.Object" />
      <Property Name="IsSynchronized" Type="System.Boolean" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="Count" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="ToXml" Return_type="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Name" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_Description" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Description" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Security.PermissionSet">
        <Parameters />
      </Method>
      <Method Name="Copy" Return_type="System.Security.NamedPermissionSet">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="FromXml" Return_type="System.Void">
        <Parameters>
          <Parameter Name="et" Type="System.Security.SecurityElement" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.PermissionSet">
    <Properties>
      <Property Name="SyncRoot" Type="System.Object" />
      <Property Name="IsSynchronized" Type="System.Boolean" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="Count" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="CopyTo" Return_type="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Array" />
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_SyncRoot" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_IsSynchronized" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsReadOnly" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="IsEmpty" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Count" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetPermission" Return_type="System.Security.IPermission">
        <Parameters>
          <Parameter Name="permClass" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="SetPermission" Return_type="System.Security.IPermission">
        <Parameters>
          <Parameter Name="perm" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="AddPermission" Return_type="System.Security.IPermission">
        <Parameters>
          <Parameter Name="perm" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="RemovePermission" Return_type="System.Security.IPermission">
        <Parameters>
          <Parameter Name="permClass" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="IsUnrestricted" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="IsSubsetOf" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="target" Type="System.Security.PermissionSet" />
        </Parameters>
      </Method>
      <Method Name="Intersect" Return_type="System.Security.PermissionSet">
        <Parameters>
          <Parameter Name="other" Type="System.Security.PermissionSet" />
        </Parameters>
      </Method>
      <Method Name="Union" Return_type="System.Security.PermissionSet">
        <Parameters>
          <Parameter Name="other" Type="System.Security.PermissionSet" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Demand" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Assert" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Deny" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="PermitOnly" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Copy" Return_type="System.Security.PermissionSet">
        <Parameters />
      </Method>
      <Method Name="GetEnumerator" Return_type="System.Collections.IEnumerator">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="FromXml" Return_type="System.Void">
        <Parameters>
          <Parameter Name="et" Type="System.Security.SecurityElement" />
        </Parameters>
      </Method>
      <Method Name="ToXml" Return_type="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="ConvertPermissionSet" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="inFormat" Type="System.String" />
          <Parameter Name="inData" Type="System.Byte[]" />
          <Parameter Name="outFormat" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ContainsNonCodeAccessPermissions" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="RevertAssert" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.ReadOnlyPermissionSet">
    <Properties>
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="SyncRoot" Type="System.Object" />
      <Property Name="IsSynchronized" Type="System.Boolean" />
      <Property Name="Count" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_IsReadOnly" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Copy" Return_type="System.Security.PermissionSet">
        <Parameters />
      </Method>
      <Method Name="ToXml" Return_type="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" Return_type="System.Void">
        <Parameters>
          <Parameter Name="et" Type="System.Security.SecurityElement" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.SecureString">
    <Properties>
      <Property Name="Length" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Length" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="AppendChar" Return_type="System.Void">
        <Parameters>
          <Parameter Name="c" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="Clear" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Copy" Return_type="System.Security.SecureString">
        <Parameters />
      </Method>
      <Method Name="Dispose" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="InsertAt" Return_type="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="c" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="IsReadOnly" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="MakeReadOnly" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="RemoveAt" Return_type="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="SetAt" Return_type="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="c" Type="System.Char" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.SecurityContext">
    <Properties />
    <Methods>
      <Method Name="Run" Return_type="System.Void">
        <Parameters>
          <Parameter Name="securityContext" Type="System.Security.SecurityContext" />
          <Parameter Name="callback" Type="System.Threading.ContextCallback" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="CreateCopy" Return_type="System.Security.SecurityContext">
        <Parameters />
      </Method>
      <Method Name="Capture" Return_type="System.Security.SecurityContext">
        <Parameters />
      </Method>
      <Method Name="Dispose" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="SuppressFlow" Return_type="System.Threading.AsyncFlowControl">
        <Parameters />
      </Method>
      <Method Name="SuppressFlowWindowsIdentity" Return_type="System.Threading.AsyncFlowControl">
        <Parameters />
      </Method>
      <Method Name="RestoreFlow" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="IsFlowSuppressed" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="IsWindowsIdentityFlowSuppressed" Return_type="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.SecurityException">
    <Properties>
      <Property Name="Action" Type="System.Security.Permissions.SecurityAction" />
      <Property Name="PermissionType" Type="System.Type" />
      <Property Name="FirstPermissionThatFailed" Type="System.Security.IPermission" />
      <Property Name="PermissionState" Type="System.String" />
      <Property Name="Demanded" Type="System.Object" />
      <Property Name="GrantedSet" Type="System.String" />
      <Property Name="RefusedSet" Type="System.String" />
      <Property Name="DenySetInstance" Type="System.Object" />
      <Property Name="PermitOnlySetInstance" Type="System.Object" />
      <Property Name="FailedAssemblyInfo" Type="System.Reflection.AssemblyName" />
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Zone" Type="System.Security.SecurityZone" />
      <Property Name="Url" Type="System.String" />
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Action" Return_type="System.Security.Permissions.SecurityAction">
        <Parameters />
      </Method>
      <Method Name="set_Action" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Permissions.SecurityAction" />
        </Parameters>
      </Method>
      <Method Name="get_PermissionType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="set_PermissionType" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="get_FirstPermissionThatFailed" Return_type="System.Security.IPermission">
        <Parameters />
      </Method>
      <Method Name="set_FirstPermissionThatFailed" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="get_PermissionState" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_PermissionState" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_Demanded" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="set_Demanded" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="get_GrantedSet" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_GrantedSet" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_RefusedSet" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_RefusedSet" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_DenySetInstance" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="set_DenySetInstance" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="get_PermitOnlySetInstance" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="set_PermitOnlySetInstance" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="get_FailedAssemblyInfo" Return_type="System.Reflection.AssemblyName">
        <Parameters />
      </Method>
      <Method Name="set_FailedAssemblyInfo" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.AssemblyName" />
        </Parameters>
      </Method>
      <Method Name="get_Method" Return_type="System.Reflection.MethodInfo">
        <Parameters />
      </Method>
      <Method Name="set_Method" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.MethodInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Zone" Return_type="System.Security.SecurityZone">
        <Parameters />
      </Method>
      <Method Name="set_Zone" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.SecurityZone" />
        </Parameters>
      </Method>
      <Method Name="get_Url" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Url" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetObjectData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.SecurityState">
    <Properties />
    <Methods>
      <Method Name="IsStateAvailable" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="EnsureState" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.HostProtectionException">
    <Properties>
      <Property Name="ProtectedResources" Type="System.Security.Permissions.HostProtectionResource" />
      <Property Name="DemandedResources" Type="System.Security.Permissions.HostProtectionResource" />
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_ProtectedResources" Return_type="System.Security.Permissions.HostProtectionResource">
        <Parameters />
      </Method>
      <Method Name="get_DemandedResources" Return_type="System.Security.Permissions.HostProtectionResource">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetObjectData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.SecurityManager">
    <Properties>
      <Property Name="CheckExecutionRights" Type="System.Boolean" />
      <Property Name="SecurityEnabled" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="GetStandardSandbox" Return_type="System.Security.PermissionSet">
        <Parameters>
          <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="LoadPolicyLevelFromString" Return_type="System.Security.Policy.PolicyLevel">
        <Parameters>
          <Parameter Name="str" Type="System.String" />
          <Parameter Name="type" Type="System.Security.PolicyLevelType" />
        </Parameters>
      </Method>
      <Method Name="IsGranted" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="perm" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="GetZoneAndOrigin" Return_type="System.Void">
        <Parameters>
          <Parameter Name="zone" Type="System.Collections.ArrayList&amp;" />
          <Parameter Name="origin" Type="System.Collections.ArrayList&amp;" />
        </Parameters>
      </Method>
      <Method Name="LoadPolicyLevelFromFile" Return_type="System.Security.Policy.PolicyLevel">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="type" Type="System.Security.PolicyLevelType" />
        </Parameters>
      </Method>
      <Method Name="SavePolicyLevel" Return_type="System.Void">
        <Parameters>
          <Parameter Name="level" Type="System.Security.Policy.PolicyLevel" />
        </Parameters>
      </Method>
      <Method Name="ResolvePolicy" Return_type="System.Security.PermissionSet">
        <Parameters>
          <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
          <Parameter Name="reqdPset" Type="System.Security.PermissionSet" />
          <Parameter Name="optPset" Type="System.Security.PermissionSet" />
          <Parameter Name="denyPset" Type="System.Security.PermissionSet" />
          <Parameter Name="denied" Type="System.Security.PermissionSet&amp;" />
        </Parameters>
      </Method>
      <Method Name="ResolvePolicy" Return_type="System.Security.PermissionSet">
        <Parameters>
          <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="ResolvePolicy" Return_type="System.Security.PermissionSet">
        <Parameters>
          <Parameter Name="evidences" Type="System.Security.Policy.Evidence[]" />
        </Parameters>
      </Method>
      <Method Name="CurrentThreadRequiresSecurityContextCapture" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="ResolveSystemPolicy" Return_type="System.Security.PermissionSet">
        <Parameters>
          <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="ResolvePolicyGroups" Return_type="System.Collections.IEnumerator">
        <Parameters>
          <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="PolicyHierarchy" Return_type="System.Collections.IEnumerator">
        <Parameters />
      </Method>
      <Method Name="SavePolicy" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_CheckExecutionRights" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_CheckExecutionRights" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_SecurityEnabled" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_SecurityEnabled" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.VerificationException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Security.AccessControl.GenericAce">
    <Properties>
      <Property Name="AceType" Type="System.Security.AccessControl.AceType" />
      <Property Name="AceFlags" Type="System.Security.AccessControl.AceFlags" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
      <Property Name="AuditFlags" Type="System.Security.AccessControl.AuditFlags" />
      <Property Name="BinaryLength" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="CreateFromBinaryForm" Return_type="System.Security.AccessControl.GenericAce">
        <Parameters>
          <Parameter Name="binaryForm" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_AceType" Return_type="System.Security.AccessControl.AceType">
        <Parameters />
      </Method>
      <Method Name="get_AceFlags" Return_type="System.Security.AccessControl.AceFlags">
        <Parameters />
      </Method>
      <Method Name="set_AceFlags" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.AccessControl.AceFlags" />
        </Parameters>
      </Method>
      <Method Name="get_IsInherited" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_InheritanceFlags" Return_type="System.Security.AccessControl.InheritanceFlags">
        <Parameters />
      </Method>
      <Method Name="get_PropagationFlags" Return_type="System.Security.AccessControl.PropagationFlags">
        <Parameters />
      </Method>
      <Method Name="get_AuditFlags" Return_type="System.Security.AccessControl.AuditFlags">
        <Parameters />
      </Method>
      <Method Name="get_BinaryLength" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetBinaryForm" Return_type="System.Void">
        <Parameters>
          <Parameter Name="binaryForm" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Security.AccessControl.GenericAce">
        <Parameters />
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="op_Equality" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="left" Type="System.Security.AccessControl.GenericAce" />
          <Parameter Name="right" Type="System.Security.AccessControl.GenericAce" />
        </Parameters>
      </Method>
      <Method Name="op_Inequality" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="left" Type="System.Security.AccessControl.GenericAce" />
          <Parameter Name="right" Type="System.Security.AccessControl.GenericAce" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.AccessControl.KnownAce">
    <Properties>
      <Property Name="AccessMask" Type="System.Int32" />
      <Property Name="SecurityIdentifier" Type="System.Security.Principal.SecurityIdentifier" />
      <Property Name="AceType" Type="System.Security.AccessControl.AceType" />
      <Property Name="AceFlags" Type="System.Security.AccessControl.AceFlags" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
      <Property Name="AuditFlags" Type="System.Security.AccessControl.AuditFlags" />
      <Property Name="BinaryLength" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_AccessMask" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_AccessMask" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_SecurityIdentifier" Return_type="System.Security.Principal.SecurityIdentifier">
        <Parameters />
      </Method>
      <Method Name="set_SecurityIdentifier" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Principal.SecurityIdentifier" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.AccessControl.CustomAce">
    <Properties>
      <Property Name="OpaqueLength" Type="System.Int32" />
      <Property Name="BinaryLength" Type="System.Int32" />
      <Property Name="AceType" Type="System.Security.AccessControl.AceType" />
      <Property Name="AceFlags" Type="System.Security.AccessControl.AceFlags" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
      <Property Name="AuditFlags" Type="System.Security.AccessControl.AuditFlags" />
    </Properties>
    <Methods>
      <Method Name="get_OpaqueLength" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_BinaryLength" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetOpaque" Return_type="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="SetOpaque" Return_type="System.Void">
        <Parameters>
          <Parameter Name="opaque" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="GetBinaryForm" Return_type="System.Void">
        <Parameters>
          <Parameter Name="binaryForm" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.AccessControl.CompoundAce">
    <Properties>
      <Property Name="CompoundAceType" Type="System.Security.AccessControl.CompoundAceType" />
      <Property Name="BinaryLength" Type="System.Int32" />
      <Property Name="AccessMask" Type="System.Int32" />
      <Property Name="SecurityIdentifier" Type="System.Security.Principal.SecurityIdentifier" />
      <Property Name="AceType" Type="System.Security.AccessControl.AceType" />
      <Property Name="AceFlags" Type="System.Security.AccessControl.AceFlags" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
      <Property Name="AuditFlags" Type="System.Security.AccessControl.AuditFlags" />
    </Properties>
    <Methods>
      <Method Name="get_CompoundAceType" Return_type="System.Security.AccessControl.CompoundAceType">
        <Parameters />
      </Method>
      <Method Name="set_CompoundAceType" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.AccessControl.CompoundAceType" />
        </Parameters>
      </Method>
      <Method Name="get_BinaryLength" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetBinaryForm" Return_type="System.Void">
        <Parameters>
          <Parameter Name="binaryForm" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.AccessControl.QualifiedAce">
    <Properties>
      <Property Name="AceQualifier" Type="System.Security.AccessControl.AceQualifier" />
      <Property Name="IsCallback" Type="System.Boolean" />
      <Property Name="OpaqueLength" Type="System.Int32" />
      <Property Name="AccessMask" Type="System.Int32" />
      <Property Name="SecurityIdentifier" Type="System.Security.Principal.SecurityIdentifier" />
      <Property Name="AceType" Type="System.Security.AccessControl.AceType" />
      <Property Name="AceFlags" Type="System.Security.AccessControl.AceFlags" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
      <Property Name="AuditFlags" Type="System.Security.AccessControl.AuditFlags" />
      <Property Name="BinaryLength" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_AceQualifier" Return_type="System.Security.AccessControl.AceQualifier">
        <Parameters />
      </Method>
      <Method Name="get_IsCallback" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_OpaqueLength" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetOpaque" Return_type="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="SetOpaque" Return_type="System.Void">
        <Parameters>
          <Parameter Name="opaque" Type="System.Byte[]" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.AccessControl.CommonAce">
    <Properties>
      <Property Name="BinaryLength" Type="System.Int32" />
      <Property Name="AceQualifier" Type="System.Security.AccessControl.AceQualifier" />
      <Property Name="IsCallback" Type="System.Boolean" />
      <Property Name="OpaqueLength" Type="System.Int32" />
      <Property Name="AccessMask" Type="System.Int32" />
      <Property Name="SecurityIdentifier" Type="System.Security.Principal.SecurityIdentifier" />
      <Property Name="AceType" Type="System.Security.AccessControl.AceType" />
      <Property Name="AceFlags" Type="System.Security.AccessControl.AceFlags" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
      <Property Name="AuditFlags" Type="System.Security.AccessControl.AuditFlags" />
    </Properties>
    <Methods>
      <Method Name="get_BinaryLength" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="MaxOpaqueLength" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="isCallback" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetBinaryForm" Return_type="System.Void">
        <Parameters>
          <Parameter Name="binaryForm" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.AccessControl.ObjectAce">
    <Properties>
      <Property Name="ObjectAceFlags" Type="System.Security.AccessControl.ObjectAceFlags" />
      <Property Name="ObjectAceType" Type="System.Guid" />
      <Property Name="InheritedObjectAceType" Type="System.Guid" />
      <Property Name="BinaryLength" Type="System.Int32" />
      <Property Name="AceQualifier" Type="System.Security.AccessControl.AceQualifier" />
      <Property Name="IsCallback" Type="System.Boolean" />
      <Property Name="OpaqueLength" Type="System.Int32" />
      <Property Name="AccessMask" Type="System.Int32" />
      <Property Name="SecurityIdentifier" Type="System.Security.Principal.SecurityIdentifier" />
      <Property Name="AceType" Type="System.Security.AccessControl.AceType" />
      <Property Name="AceFlags" Type="System.Security.AccessControl.AceFlags" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
      <Property Name="AuditFlags" Type="System.Security.AccessControl.AuditFlags" />
    </Properties>
    <Methods>
      <Method Name="get_ObjectAceFlags" Return_type="System.Security.AccessControl.ObjectAceFlags">
        <Parameters />
      </Method>
      <Method Name="set_ObjectAceFlags" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.AccessControl.ObjectAceFlags" />
        </Parameters>
      </Method>
      <Method Name="get_ObjectAceType" Return_type="System.Guid">
        <Parameters />
      </Method>
      <Method Name="set_ObjectAceType" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Guid" />
        </Parameters>
      </Method>
      <Method Name="get_InheritedObjectAceType" Return_type="System.Guid">
        <Parameters />
      </Method>
      <Method Name="set_InheritedObjectAceType" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Guid" />
        </Parameters>
      </Method>
      <Method Name="get_BinaryLength" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="MaxOpaqueLength" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="isCallback" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetBinaryForm" Return_type="System.Void">
        <Parameters>
          <Parameter Name="binaryForm" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.AccessControl.AceEnumerator">
    <Properties>
      <Property Name="Current" Type="System.Security.AccessControl.GenericAce" />
    </Properties>
    <Methods>
      <Method Name="get_Current" Return_type="System.Security.AccessControl.GenericAce">
        <Parameters />
      </Method>
      <Method Name="MoveNext" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Reset" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.AccessControl.GenericAcl">
    <Properties>
      <Property Name="Revision" Type="System.Byte" />
      <Property Name="BinaryLength" Type="System.Int32" />
      <Property Name="Item" Type="System.Security.AccessControl.GenericAce" />
      <Property Name="Count" Type="System.Int32" />
      <Property Name="IsSynchronized" Type="System.Boolean" />
      <Property Name="SyncRoot" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Revision" Return_type="System.Byte">
        <Parameters />
      </Method>
      <Method Name="get_BinaryLength" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_Item" Return_type="System.Security.AccessControl.GenericAce">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="set_Item" Return_type="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="value" Type="System.Security.AccessControl.GenericAce" />
        </Parameters>
      </Method>
      <Method Name="GetBinaryForm" Return_type="System.Void">
        <Parameters>
          <Parameter Name="binaryForm" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="CopyTo" Return_type="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Security.AccessControl.GenericAce[]" />
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_Count" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_IsSynchronized" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_SyncRoot" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="GetEnumerator" Return_type="System.Security.AccessControl.AceEnumerator">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.AccessControl.RawAcl">
    <Properties>
      <Property Name="Revision" Type="System.Byte" />
      <Property Name="Count" Type="System.Int32" />
      <Property Name="BinaryLength" Type="System.Int32" />
      <Property Name="Item" Type="System.Security.AccessControl.GenericAce" />
      <Property Name="IsSynchronized" Type="System.Boolean" />
      <Property Name="SyncRoot" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Revision" Return_type="System.Byte">
        <Parameters />
      </Method>
      <Method Name="get_Count" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_BinaryLength" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetBinaryForm" Return_type="System.Void">
        <Parameters>
          <Parameter Name="binaryForm" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_Item" Return_type="System.Security.AccessControl.GenericAce">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="set_Item" Return_type="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="value" Type="System.Security.AccessControl.GenericAce" />
        </Parameters>
      </Method>
      <Method Name="InsertAce" Return_type="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="ace" Type="System.Security.AccessControl.GenericAce" />
        </Parameters>
      </Method>
      <Method Name="RemoveAce" Return_type="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.AccessControl.CommonAcl">
    <Properties>
      <Property Name="Revision" Type="System.Byte" />
      <Property Name="Count" Type="System.Int32" />
      <Property Name="BinaryLength" Type="System.Int32" />
      <Property Name="IsCanonical" Type="System.Boolean" />
      <Property Name="IsContainer" Type="System.Boolean" />
      <Property Name="IsDS" Type="System.Boolean" />
      <Property Name="Item" Type="System.Security.AccessControl.GenericAce" />
      <Property Name="IsSynchronized" Type="System.Boolean" />
      <Property Name="SyncRoot" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Revision" Return_type="System.Byte">
        <Parameters />
      </Method>
      <Method Name="get_Count" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_BinaryLength" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_IsCanonical" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsContainer" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsDS" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetBinaryForm" Return_type="System.Void">
        <Parameters>
          <Parameter Name="binaryForm" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_Item" Return_type="System.Security.AccessControl.GenericAce">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="set_Item" Return_type="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="value" Type="System.Security.AccessControl.GenericAce" />
        </Parameters>
      </Method>
      <Method Name="RemoveInheritedAces" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Purge" Return_type="System.Void">
        <Parameters>
          <Parameter Name="sid" Type="System.Security.Principal.SecurityIdentifier" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.AccessControl.SystemAcl">
    <Properties>
      <Property Name="Revision" Type="System.Byte" />
      <Property Name="Count" Type="System.Int32" />
      <Property Name="BinaryLength" Type="System.Int32" />
      <Property Name="IsCanonical" Type="System.Boolean" />
      <Property Name="IsContainer" Type="System.Boolean" />
      <Property Name="IsDS" Type="System.Boolean" />
      <Property Name="Item" Type="System.Security.AccessControl.GenericAce" />
      <Property Name="IsSynchronized" Type="System.Boolean" />
      <Property Name="SyncRoot" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="AddAudit" Return_type="System.Void">
        <Parameters>
          <Parameter Name="auditFlags" Type="System.Security.AccessControl.AuditFlags" />
          <Parameter Name="sid" Type="System.Security.Principal.SecurityIdentifier" />
          <Parameter Name="accessMask" Type="System.Int32" />
          <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
          <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        </Parameters>
      </Method>
      <Method Name="SetAudit" Return_type="System.Void">
        <Parameters>
          <Parameter Name="auditFlags" Type="System.Security.AccessControl.AuditFlags" />
          <Parameter Name="sid" Type="System.Security.Principal.SecurityIdentifier" />
          <Parameter Name="accessMask" Type="System.Int32" />
          <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
          <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        </Parameters>
      </Method>
      <Method Name="RemoveAudit" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="auditFlags" Type="System.Security.AccessControl.AuditFlags" />
          <Parameter Name="sid" Type="System.Security.Principal.SecurityIdentifier" />
          <Parameter Name="accessMask" Type="System.Int32" />
          <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
          <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        </Parameters>
      </Method>
      <Method Name="RemoveAuditSpecific" Return_type="System.Void">
        <Parameters>
          <Parameter Name="auditFlags" Type="System.Security.AccessControl.AuditFlags" />
          <Parameter Name="sid" Type="System.Security.Principal.SecurityIdentifier" />
          <Parameter Name="accessMask" Type="System.Int32" />
          <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
          <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        </Parameters>
      </Method>
      <Method Name="AddAudit" Return_type="System.Void">
        <Parameters>
          <Parameter Name="sid" Type="System.Security.Principal.SecurityIdentifier" />
          <Parameter Name="rule" Type="System.Security.AccessControl.ObjectAuditRule" />
        </Parameters>
      </Method>
      <Method Name="AddAudit" Return_type="System.Void">
        <Parameters>
          <Parameter Name="auditFlags" Type="System.Security.AccessControl.AuditFlags" />
          <Parameter Name="sid" Type="System.Security.Principal.SecurityIdentifier" />
          <Parameter Name="accessMask" Type="System.Int32" />
          <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
          <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
          <Parameter Name="objectFlags" Type="System.Security.AccessControl.ObjectAceFlags" />
          <Parameter Name="objectType" Type="System.Guid" />
          <Parameter Name="inheritedObjectType" Type="System.Guid" />
        </Parameters>
      </Method>
      <Method Name="SetAudit" Return_type="System.Void">
        <Parameters>
          <Parameter Name="sid" Type="System.Security.Principal.SecurityIdentifier" />
          <Parameter Name="rule" Type="System.Security.AccessControl.ObjectAuditRule" />
        </Parameters>
      </Method>
      <Method Name="SetAudit" Return_type="System.Void">
        <Parameters>
          <Parameter Name="auditFlags" Type="System.Security.AccessControl.AuditFlags" />
          <Parameter Name="sid" Type="System.Security.Principal.SecurityIdentifier" />
          <Parameter Name="accessMask" Type="System.Int32" />
          <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
          <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
          <Parameter Name="objectFlags" Type="System.Security.AccessControl.ObjectAceFlags" />
          <Parameter Name="objectType" Type="System.Guid" />
          <Parameter Name="inheritedObjectType" Type="System.Guid" />
        </Parameters>
      </Method>
      <Method Name="RemoveAudit" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="sid" Type="System.Security.Principal.SecurityIdentifier" />
          <Parameter Name="rule" Type="System.Security.AccessControl.ObjectAuditRule" />
        </Parameters>
      </Method>
      <Method Name="RemoveAudit" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="auditFlags" Type="System.Security.AccessControl.AuditFlags" />
          <Parameter Name="sid" Type="System.Security.Principal.SecurityIdentifier" />
          <Parameter Name="accessMask" Type="System.Int32" />
          <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
          <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
          <Parameter Name="objectFlags" Type="System.Security.AccessControl.ObjectAceFlags" />
          <Parameter Name="objectType" Type="System.Guid" />
          <Parameter Name="inheritedObjectType" Type="System.Guid" />
        </Parameters>
      </Method>
      <Method Name="RemoveAuditSpecific" Return_type="System.Void">
        <Parameters>
          <Parameter Name="sid" Type="System.Security.Principal.SecurityIdentifier" />
          <Parameter Name="rule" Type="System.Security.AccessControl.ObjectAuditRule" />
        </Parameters>
      </Method>
      <Method Name="RemoveAuditSpecific" Return_type="System.Void">
        <Parameters>
          <Parameter Name="auditFlags" Type="System.Security.AccessControl.AuditFlags" />
          <Parameter Name="sid" Type="System.Security.Principal.SecurityIdentifier" />
          <Parameter Name="accessMask" Type="System.Int32" />
          <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
          <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
          <Parameter Name="objectFlags" Type="System.Security.AccessControl.ObjectAceFlags" />
          <Parameter Name="objectType" Type="System.Guid" />
          <Parameter Name="inheritedObjectType" Type="System.Guid" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.AccessControl.DiscretionaryAcl">
    <Properties>
      <Property Name="Revision" Type="System.Byte" />
      <Property Name="Count" Type="System.Int32" />
      <Property Name="BinaryLength" Type="System.Int32" />
      <Property Name="IsCanonical" Type="System.Boolean" />
      <Property Name="IsContainer" Type="System.Boolean" />
      <Property Name="IsDS" Type="System.Boolean" />
      <Property Name="Item" Type="System.Security.AccessControl.GenericAce" />
      <Property Name="IsSynchronized" Type="System.Boolean" />
      <Property Name="SyncRoot" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="AddAccess" Return_type="System.Void">
        <Parameters>
          <Parameter Name="accessType" Type="System.Security.AccessControl.AccessControlType" />
          <Parameter Name="sid" Type="System.Security.Principal.SecurityIdentifier" />
          <Parameter Name="accessMask" Type="System.Int32" />
          <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
          <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        </Parameters>
      </Method>
      <Method Name="SetAccess" Return_type="System.Void">
        <Parameters>
          <Parameter Name="accessType" Type="System.Security.AccessControl.AccessControlType" />
          <Parameter Name="sid" Type="System.Security.Principal.SecurityIdentifier" />
          <Parameter Name="accessMask" Type="System.Int32" />
          <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
          <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccess" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="accessType" Type="System.Security.AccessControl.AccessControlType" />
          <Parameter Name="sid" Type="System.Security.Principal.SecurityIdentifier" />
          <Parameter Name="accessMask" Type="System.Int32" />
          <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
          <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccessSpecific" Return_type="System.Void">
        <Parameters>
          <Parameter Name="accessType" Type="System.Security.AccessControl.AccessControlType" />
          <Parameter Name="sid" Type="System.Security.Principal.SecurityIdentifier" />
          <Parameter Name="accessMask" Type="System.Int32" />
          <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
          <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
        </Parameters>
      </Method>
      <Method Name="AddAccess" Return_type="System.Void">
        <Parameters>
          <Parameter Name="accessType" Type="System.Security.AccessControl.AccessControlType" />
          <Parameter Name="sid" Type="System.Security.Principal.SecurityIdentifier" />
          <Parameter Name="rule" Type="System.Security.AccessControl.ObjectAccessRule" />
        </Parameters>
      </Method>
      <Method Name="AddAccess" Return_type="System.Void">
        <Parameters>
          <Parameter Name="accessType" Type="System.Security.AccessControl.AccessControlType" />
          <Parameter Name="sid" Type="System.Security.Principal.SecurityIdentifier" />
          <Parameter Name="accessMask" Type="System.Int32" />
          <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
          <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
          <Parameter Name="objectFlags" Type="System.Security.AccessControl.ObjectAceFlags" />
          <Parameter Name="objectType" Type="System.Guid" />
          <Parameter Name="inheritedObjectType" Type="System.Guid" />
        </Parameters>
      </Method>
      <Method Name="SetAccess" Return_type="System.Void">
        <Parameters>
          <Parameter Name="accessType" Type="System.Security.AccessControl.AccessControlType" />
          <Parameter Name="sid" Type="System.Security.Principal.SecurityIdentifier" />
          <Parameter Name="rule" Type="System.Security.AccessControl.ObjectAccessRule" />
        </Parameters>
      </Method>
      <Method Name="SetAccess" Return_type="System.Void">
        <Parameters>
          <Parameter Name="accessType" Type="System.Security.AccessControl.AccessControlType" />
          <Parameter Name="sid" Type="System.Security.Principal.SecurityIdentifier" />
          <Parameter Name="accessMask" Type="System.Int32" />
          <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
          <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
          <Parameter Name="objectFlags" Type="System.Security.AccessControl.ObjectAceFlags" />
          <Parameter Name="objectType" Type="System.Guid" />
          <Parameter Name="inheritedObjectType" Type="System.Guid" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccess" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="accessType" Type="System.Security.AccessControl.AccessControlType" />
          <Parameter Name="sid" Type="System.Security.Principal.SecurityIdentifier" />
          <Parameter Name="rule" Type="System.Security.AccessControl.ObjectAccessRule" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccess" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="accessType" Type="System.Security.AccessControl.AccessControlType" />
          <Parameter Name="sid" Type="System.Security.Principal.SecurityIdentifier" />
          <Parameter Name="accessMask" Type="System.Int32" />
          <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
          <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
          <Parameter Name="objectFlags" Type="System.Security.AccessControl.ObjectAceFlags" />
          <Parameter Name="objectType" Type="System.Guid" />
          <Parameter Name="inheritedObjectType" Type="System.Guid" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccessSpecific" Return_type="System.Void">
        <Parameters>
          <Parameter Name="accessType" Type="System.Security.AccessControl.AccessControlType" />
          <Parameter Name="sid" Type="System.Security.Principal.SecurityIdentifier" />
          <Parameter Name="rule" Type="System.Security.AccessControl.ObjectAccessRule" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccessSpecific" Return_type="System.Void">
        <Parameters>
          <Parameter Name="accessType" Type="System.Security.AccessControl.AccessControlType" />
          <Parameter Name="sid" Type="System.Security.Principal.SecurityIdentifier" />
          <Parameter Name="accessMask" Type="System.Int32" />
          <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
          <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
          <Parameter Name="objectFlags" Type="System.Security.AccessControl.ObjectAceFlags" />
          <Parameter Name="objectType" Type="System.Guid" />
          <Parameter Name="inheritedObjectType" Type="System.Guid" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.AccessControl.CryptoKeyAccessRule">
    <Properties>
      <Property Name="CryptoKeyRights" Type="System.Security.AccessControl.CryptoKeyRights" />
      <Property Name="AccessControlType" Type="System.Security.AccessControl.AccessControlType" />
      <Property Name="IdentityReference" Type="System.Security.Principal.IdentityReference" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
    </Properties>
    <Methods>
      <Method Name="get_CryptoKeyRights" Return_type="System.Security.AccessControl.CryptoKeyRights">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.AccessControl.CryptoKeyAuditRule">
    <Properties>
      <Property Name="CryptoKeyRights" Type="System.Security.AccessControl.CryptoKeyRights" />
      <Property Name="AuditFlags" Type="System.Security.AccessControl.AuditFlags" />
      <Property Name="IdentityReference" Type="System.Security.Principal.IdentityReference" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
    </Properties>
    <Methods>
      <Method Name="get_CryptoKeyRights" Return_type="System.Security.AccessControl.CryptoKeyRights">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.AccessControl.CryptoKeySecurity">
    <Properties>
      <Property Name="AccessRightType" Type="System.Type" />
      <Property Name="AccessRuleType" Type="System.Type" />
      <Property Name="AuditRuleType" Type="System.Type" />
      <Property Name="AreAccessRulesProtected" Type="System.Boolean" />
      <Property Name="AreAuditRulesProtected" Type="System.Boolean" />
      <Property Name="AreAccessRulesCanonical" Type="System.Boolean" />
      <Property Name="AreAuditRulesCanonical" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="AccessRuleFactory" Return_type="System.Security.AccessControl.AccessRule">
        <Parameters>
          <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
          <Parameter Name="accessMask" Type="System.Int32" />
          <Parameter Name="isInherited" Type="System.Boolean" />
          <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
          <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
          <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
        </Parameters>
      </Method>
      <Method Name="AuditRuleFactory" Return_type="System.Security.AccessControl.AuditRule">
        <Parameters>
          <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
          <Parameter Name="accessMask" Type="System.Int32" />
          <Parameter Name="isInherited" Type="System.Boolean" />
          <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
          <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
          <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
        </Parameters>
      </Method>
      <Method Name="AddAccessRule" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.CryptoKeyAccessRule" />
        </Parameters>
      </Method>
      <Method Name="SetAccessRule" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.CryptoKeyAccessRule" />
        </Parameters>
      </Method>
      <Method Name="ResetAccessRule" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.CryptoKeyAccessRule" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccessRule" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.CryptoKeyAccessRule" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccessRuleAll" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.CryptoKeyAccessRule" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccessRuleSpecific" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.CryptoKeyAccessRule" />
        </Parameters>
      </Method>
      <Method Name="AddAuditRule" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.CryptoKeyAuditRule" />
        </Parameters>
      </Method>
      <Method Name="SetAuditRule" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.CryptoKeyAuditRule" />
        </Parameters>
      </Method>
      <Method Name="RemoveAuditRule" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.CryptoKeyAuditRule" />
        </Parameters>
      </Method>
      <Method Name="RemoveAuditRuleAll" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.CryptoKeyAuditRule" />
        </Parameters>
      </Method>
      <Method Name="RemoveAuditRuleSpecific" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.CryptoKeyAuditRule" />
        </Parameters>
      </Method>
      <Method Name="get_AccessRightType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_AccessRuleType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_AuditRuleType" Return_type="System.Type">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.AccessControl.EventWaitHandleAccessRule">
    <Properties>
      <Property Name="EventWaitHandleRights" Type="System.Security.AccessControl.EventWaitHandleRights" />
      <Property Name="AccessControlType" Type="System.Security.AccessControl.AccessControlType" />
      <Property Name="IdentityReference" Type="System.Security.Principal.IdentityReference" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
    </Properties>
    <Methods>
      <Method Name="get_EventWaitHandleRights" Return_type="System.Security.AccessControl.EventWaitHandleRights">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.AccessControl.EventWaitHandleAuditRule">
    <Properties>
      <Property Name="EventWaitHandleRights" Type="System.Security.AccessControl.EventWaitHandleRights" />
      <Property Name="AuditFlags" Type="System.Security.AccessControl.AuditFlags" />
      <Property Name="IdentityReference" Type="System.Security.Principal.IdentityReference" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
    </Properties>
    <Methods>
      <Method Name="get_EventWaitHandleRights" Return_type="System.Security.AccessControl.EventWaitHandleRights">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.AccessControl.EventWaitHandleSecurity">
    <Properties>
      <Property Name="AccessRightType" Type="System.Type" />
      <Property Name="AccessRuleType" Type="System.Type" />
      <Property Name="AuditRuleType" Type="System.Type" />
      <Property Name="AreAccessRulesProtected" Type="System.Boolean" />
      <Property Name="AreAuditRulesProtected" Type="System.Boolean" />
      <Property Name="AreAccessRulesCanonical" Type="System.Boolean" />
      <Property Name="AreAuditRulesCanonical" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="AccessRuleFactory" Return_type="System.Security.AccessControl.AccessRule">
        <Parameters>
          <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
          <Parameter Name="accessMask" Type="System.Int32" />
          <Parameter Name="isInherited" Type="System.Boolean" />
          <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
          <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
          <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
        </Parameters>
      </Method>
      <Method Name="AuditRuleFactory" Return_type="System.Security.AccessControl.AuditRule">
        <Parameters>
          <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
          <Parameter Name="accessMask" Type="System.Int32" />
          <Parameter Name="isInherited" Type="System.Boolean" />
          <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
          <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
          <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
        </Parameters>
      </Method>
      <Method Name="AddAccessRule" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.EventWaitHandleAccessRule" />
        </Parameters>
      </Method>
      <Method Name="SetAccessRule" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.EventWaitHandleAccessRule" />
        </Parameters>
      </Method>
      <Method Name="ResetAccessRule" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.EventWaitHandleAccessRule" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccessRule" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.EventWaitHandleAccessRule" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccessRuleAll" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.EventWaitHandleAccessRule" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccessRuleSpecific" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.EventWaitHandleAccessRule" />
        </Parameters>
      </Method>
      <Method Name="AddAuditRule" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.EventWaitHandleAuditRule" />
        </Parameters>
      </Method>
      <Method Name="SetAuditRule" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.EventWaitHandleAuditRule" />
        </Parameters>
      </Method>
      <Method Name="RemoveAuditRule" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.EventWaitHandleAuditRule" />
        </Parameters>
      </Method>
      <Method Name="RemoveAuditRuleAll" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.EventWaitHandleAuditRule" />
        </Parameters>
      </Method>
      <Method Name="RemoveAuditRuleSpecific" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.EventWaitHandleAuditRule" />
        </Parameters>
      </Method>
      <Method Name="get_AccessRightType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_AccessRuleType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_AuditRuleType" Return_type="System.Type">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.AccessControl.FileSystemAccessRule">
    <Properties>
      <Property Name="FileSystemRights" Type="System.Security.AccessControl.FileSystemRights" />
      <Property Name="AccessControlType" Type="System.Security.AccessControl.AccessControlType" />
      <Property Name="IdentityReference" Type="System.Security.Principal.IdentityReference" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
    </Properties>
    <Methods>
      <Method Name="get_FileSystemRights" Return_type="System.Security.AccessControl.FileSystemRights">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.AccessControl.FileSystemAuditRule">
    <Properties>
      <Property Name="FileSystemRights" Type="System.Security.AccessControl.FileSystemRights" />
      <Property Name="AuditFlags" Type="System.Security.AccessControl.AuditFlags" />
      <Property Name="IdentityReference" Type="System.Security.Principal.IdentityReference" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
    </Properties>
    <Methods>
      <Method Name="get_FileSystemRights" Return_type="System.Security.AccessControl.FileSystemRights">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.AccessControl.FileSystemSecurity">
    <Properties>
      <Property Name="AccessRightType" Type="System.Type" />
      <Property Name="AccessRuleType" Type="System.Type" />
      <Property Name="AuditRuleType" Type="System.Type" />
      <Property Name="AreAccessRulesProtected" Type="System.Boolean" />
      <Property Name="AreAuditRulesProtected" Type="System.Boolean" />
      <Property Name="AreAccessRulesCanonical" Type="System.Boolean" />
      <Property Name="AreAuditRulesCanonical" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="AccessRuleFactory" Return_type="System.Security.AccessControl.AccessRule">
        <Parameters>
          <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
          <Parameter Name="accessMask" Type="System.Int32" />
          <Parameter Name="isInherited" Type="System.Boolean" />
          <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
          <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
          <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
        </Parameters>
      </Method>
      <Method Name="AuditRuleFactory" Return_type="System.Security.AccessControl.AuditRule">
        <Parameters>
          <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
          <Parameter Name="accessMask" Type="System.Int32" />
          <Parameter Name="isInherited" Type="System.Boolean" />
          <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
          <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
          <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
        </Parameters>
      </Method>
      <Method Name="AddAccessRule" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
        </Parameters>
      </Method>
      <Method Name="SetAccessRule" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
        </Parameters>
      </Method>
      <Method Name="ResetAccessRule" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccessRule" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccessRuleAll" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccessRuleSpecific" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAccessRule" />
        </Parameters>
      </Method>
      <Method Name="AddAuditRule" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
        </Parameters>
      </Method>
      <Method Name="SetAuditRule" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
        </Parameters>
      </Method>
      <Method Name="RemoveAuditRule" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
        </Parameters>
      </Method>
      <Method Name="RemoveAuditRuleAll" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
        </Parameters>
      </Method>
      <Method Name="RemoveAuditRuleSpecific" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.FileSystemAuditRule" />
        </Parameters>
      </Method>
      <Method Name="get_AccessRightType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_AccessRuleType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_AuditRuleType" Return_type="System.Type">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.AccessControl.FileSecurity">
    <Properties>
      <Property Name="AccessRightType" Type="System.Type" />
      <Property Name="AccessRuleType" Type="System.Type" />
      <Property Name="AuditRuleType" Type="System.Type" />
      <Property Name="AreAccessRulesProtected" Type="System.Boolean" />
      <Property Name="AreAuditRulesProtected" Type="System.Boolean" />
      <Property Name="AreAccessRulesCanonical" Type="System.Boolean" />
      <Property Name="AreAuditRulesCanonical" Type="System.Boolean" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Security.AccessControl.DirectorySecurity">
    <Properties>
      <Property Name="AccessRightType" Type="System.Type" />
      <Property Name="AccessRuleType" Type="System.Type" />
      <Property Name="AuditRuleType" Type="System.Type" />
      <Property Name="AreAccessRulesProtected" Type="System.Boolean" />
      <Property Name="AreAuditRulesProtected" Type="System.Boolean" />
      <Property Name="AreAccessRulesCanonical" Type="System.Boolean" />
      <Property Name="AreAuditRulesCanonical" Type="System.Boolean" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Security.AccessControl.MutexAccessRule">
    <Properties>
      <Property Name="MutexRights" Type="System.Security.AccessControl.MutexRights" />
      <Property Name="AccessControlType" Type="System.Security.AccessControl.AccessControlType" />
      <Property Name="IdentityReference" Type="System.Security.Principal.IdentityReference" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
    </Properties>
    <Methods>
      <Method Name="get_MutexRights" Return_type="System.Security.AccessControl.MutexRights">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.AccessControl.MutexAuditRule">
    <Properties>
      <Property Name="MutexRights" Type="System.Security.AccessControl.MutexRights" />
      <Property Name="AuditFlags" Type="System.Security.AccessControl.AuditFlags" />
      <Property Name="IdentityReference" Type="System.Security.Principal.IdentityReference" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
    </Properties>
    <Methods>
      <Method Name="get_MutexRights" Return_type="System.Security.AccessControl.MutexRights">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.AccessControl.MutexSecurity">
    <Properties>
      <Property Name="AccessRightType" Type="System.Type" />
      <Property Name="AccessRuleType" Type="System.Type" />
      <Property Name="AuditRuleType" Type="System.Type" />
      <Property Name="AreAccessRulesProtected" Type="System.Boolean" />
      <Property Name="AreAuditRulesProtected" Type="System.Boolean" />
      <Property Name="AreAccessRulesCanonical" Type="System.Boolean" />
      <Property Name="AreAuditRulesCanonical" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="AccessRuleFactory" Return_type="System.Security.AccessControl.AccessRule">
        <Parameters>
          <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
          <Parameter Name="accessMask" Type="System.Int32" />
          <Parameter Name="isInherited" Type="System.Boolean" />
          <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
          <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
          <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
        </Parameters>
      </Method>
      <Method Name="AuditRuleFactory" Return_type="System.Security.AccessControl.AuditRule">
        <Parameters>
          <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
          <Parameter Name="accessMask" Type="System.Int32" />
          <Parameter Name="isInherited" Type="System.Boolean" />
          <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
          <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
          <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
        </Parameters>
      </Method>
      <Method Name="AddAccessRule" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.MutexAccessRule" />
        </Parameters>
      </Method>
      <Method Name="SetAccessRule" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.MutexAccessRule" />
        </Parameters>
      </Method>
      <Method Name="ResetAccessRule" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.MutexAccessRule" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccessRule" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.MutexAccessRule" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccessRuleAll" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.MutexAccessRule" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccessRuleSpecific" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.MutexAccessRule" />
        </Parameters>
      </Method>
      <Method Name="AddAuditRule" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.MutexAuditRule" />
        </Parameters>
      </Method>
      <Method Name="SetAuditRule" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.MutexAuditRule" />
        </Parameters>
      </Method>
      <Method Name="RemoveAuditRule" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.MutexAuditRule" />
        </Parameters>
      </Method>
      <Method Name="RemoveAuditRuleAll" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.MutexAuditRule" />
        </Parameters>
      </Method>
      <Method Name="RemoveAuditRuleSpecific" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.MutexAuditRule" />
        </Parameters>
      </Method>
      <Method Name="get_AccessRightType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_AccessRuleType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_AuditRuleType" Return_type="System.Type">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.AccessControl.NativeObjectSecurity">
    <Properties>
      <Property Name="AreAccessRulesProtected" Type="System.Boolean" />
      <Property Name="AreAuditRulesProtected" Type="System.Boolean" />
      <Property Name="AreAccessRulesCanonical" Type="System.Boolean" />
      <Property Name="AreAuditRulesCanonical" Type="System.Boolean" />
      <Property Name="AccessRightType" Type="System.Type" />
      <Property Name="AccessRuleType" Type="System.Type" />
      <Property Name="AuditRuleType" Type="System.Type" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Security.AccessControl.ObjectSecurity">
    <Properties>
      <Property Name="AreAccessRulesProtected" Type="System.Boolean" />
      <Property Name="AreAuditRulesProtected" Type="System.Boolean" />
      <Property Name="AreAccessRulesCanonical" Type="System.Boolean" />
      <Property Name="AreAuditRulesCanonical" Type="System.Boolean" />
      <Property Name="AccessRightType" Type="System.Type" />
      <Property Name="AccessRuleType" Type="System.Type" />
      <Property Name="AuditRuleType" Type="System.Type" />
    </Properties>
    <Methods>
      <Method Name="GetOwner" Return_type="System.Security.Principal.IdentityReference">
        <Parameters>
          <Parameter Name="targetType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="SetOwner" Return_type="System.Void">
        <Parameters>
          <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        </Parameters>
      </Method>
      <Method Name="GetGroup" Return_type="System.Security.Principal.IdentityReference">
        <Parameters>
          <Parameter Name="targetType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="SetGroup" Return_type="System.Void">
        <Parameters>
          <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        </Parameters>
      </Method>
      <Method Name="PurgeAccessRules" Return_type="System.Void">
        <Parameters>
          <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        </Parameters>
      </Method>
      <Method Name="PurgeAuditRules" Return_type="System.Void">
        <Parameters>
          <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        </Parameters>
      </Method>
      <Method Name="get_AreAccessRulesProtected" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="SetAccessRuleProtection" Return_type="System.Void">
        <Parameters>
          <Parameter Name="isProtected" Type="System.Boolean" />
          <Parameter Name="preserveInheritance" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_AreAuditRulesProtected" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="SetAuditRuleProtection" Return_type="System.Void">
        <Parameters>
          <Parameter Name="isProtected" Type="System.Boolean" />
          <Parameter Name="preserveInheritance" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_AreAccessRulesCanonical" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_AreAuditRulesCanonical" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="IsSddlConversionSupported" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetSecurityDescriptorSddlForm" Return_type="System.String">
        <Parameters>
          <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
        </Parameters>
      </Method>
      <Method Name="SetSecurityDescriptorSddlForm" Return_type="System.Void">
        <Parameters>
          <Parameter Name="sddlForm" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="SetSecurityDescriptorSddlForm" Return_type="System.Void">
        <Parameters>
          <Parameter Name="sddlForm" Type="System.String" />
          <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
        </Parameters>
      </Method>
      <Method Name="GetSecurityDescriptorBinaryForm" Return_type="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="SetSecurityDescriptorBinaryForm" Return_type="System.Void">
        <Parameters>
          <Parameter Name="binaryForm" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="SetSecurityDescriptorBinaryForm" Return_type="System.Void">
        <Parameters>
          <Parameter Name="binaryForm" Type="System.Byte[]" />
          <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
        </Parameters>
      </Method>
      <Method Name="get_AccessRightType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_AccessRuleType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_AuditRuleType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="ModifyAccessRule" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="modification" Type="System.Security.AccessControl.AccessControlModification" />
          <Parameter Name="rule" Type="System.Security.AccessControl.AccessRule" />
          <Parameter Name="modified" Type="System.Boolean&amp;" />
        </Parameters>
      </Method>
      <Method Name="ModifyAuditRule" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="modification" Type="System.Security.AccessControl.AccessControlModification" />
          <Parameter Name="rule" Type="System.Security.AccessControl.AuditRule" />
          <Parameter Name="modified" Type="System.Boolean&amp;" />
        </Parameters>
      </Method>
      <Method Name="AccessRuleFactory" Return_type="System.Security.AccessControl.AccessRule">
        <Parameters>
          <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
          <Parameter Name="accessMask" Type="System.Int32" />
          <Parameter Name="isInherited" Type="System.Boolean" />
          <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
          <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
          <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
        </Parameters>
      </Method>
      <Method Name="AuditRuleFactory" Return_type="System.Security.AccessControl.AuditRule">
        <Parameters>
          <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
          <Parameter Name="accessMask" Type="System.Int32" />
          <Parameter Name="isInherited" Type="System.Boolean" />
          <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
          <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
          <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.AccessControl.AccessRule`1">
    <Properties>
      <Property Name="Rights" Type="T" />
      <Property Name="AccessControlType" Type="System.Security.AccessControl.AccessControlType" />
      <Property Name="IdentityReference" Type="System.Security.Principal.IdentityReference" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
    </Properties>
    <Methods>
      <Method Name="get_Rights" Return_type="T">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.AccessControl.AuditRule`1">
    <Properties>
      <Property Name="Rights" Type="T" />
      <Property Name="AuditFlags" Type="System.Security.AccessControl.AuditFlags" />
      <Property Name="IdentityReference" Type="System.Security.Principal.IdentityReference" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
    </Properties>
    <Methods>
      <Method Name="get_Rights" Return_type="T">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.AccessControl.ObjectSecurity`1">
    <Properties>
      <Property Name="AccessRightType" Type="System.Type" />
      <Property Name="AccessRuleType" Type="System.Type" />
      <Property Name="AuditRuleType" Type="System.Type" />
      <Property Name="AreAccessRulesProtected" Type="System.Boolean" />
      <Property Name="AreAuditRulesProtected" Type="System.Boolean" />
      <Property Name="AreAccessRulesCanonical" Type="System.Boolean" />
      <Property Name="AreAuditRulesCanonical" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="AccessRuleFactory" Return_type="System.Security.AccessControl.AccessRule">
        <Parameters>
          <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
          <Parameter Name="accessMask" Type="System.Int32" />
          <Parameter Name="isInherited" Type="System.Boolean" />
          <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
          <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
          <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
        </Parameters>
      </Method>
      <Method Name="AuditRuleFactory" Return_type="System.Security.AccessControl.AuditRule">
        <Parameters>
          <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
          <Parameter Name="accessMask" Type="System.Int32" />
          <Parameter Name="isInherited" Type="System.Boolean" />
          <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
          <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
          <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
        </Parameters>
      </Method>
      <Method Name="AddAccessRule" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.AccessRule`1[T]" />
        </Parameters>
      </Method>
      <Method Name="SetAccessRule" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.AccessRule`1[T]" />
        </Parameters>
      </Method>
      <Method Name="ResetAccessRule" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.AccessRule`1[T]" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccessRule" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.AccessRule`1[T]" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccessRuleAll" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.AccessRule`1[T]" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccessRuleSpecific" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.AccessRule`1[T]" />
        </Parameters>
      </Method>
      <Method Name="AddAuditRule" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.AuditRule`1[T]" />
        </Parameters>
      </Method>
      <Method Name="SetAuditRule" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.AuditRule`1[T]" />
        </Parameters>
      </Method>
      <Method Name="RemoveAuditRule" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.AuditRule`1[T]" />
        </Parameters>
      </Method>
      <Method Name="RemoveAuditRuleAll" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.AuditRule`1[T]" />
        </Parameters>
      </Method>
      <Method Name="RemoveAuditRuleSpecific" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.AuditRule`1[T]" />
        </Parameters>
      </Method>
      <Method Name="get_AccessRightType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_AccessRuleType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_AuditRuleType" Return_type="System.Type">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.AccessControl.CommonObjectSecurity">
    <Properties>
      <Property Name="AreAccessRulesProtected" Type="System.Boolean" />
      <Property Name="AreAuditRulesProtected" Type="System.Boolean" />
      <Property Name="AreAccessRulesCanonical" Type="System.Boolean" />
      <Property Name="AreAuditRulesCanonical" Type="System.Boolean" />
      <Property Name="AccessRightType" Type="System.Type" />
      <Property Name="AccessRuleType" Type="System.Type" />
      <Property Name="AuditRuleType" Type="System.Type" />
    </Properties>
    <Methods>
      <Method Name="GetAccessRules" Return_type="System.Security.AccessControl.AuthorizationRuleCollection">
        <Parameters>
          <Parameter Name="includeExplicit" Type="System.Boolean" />
          <Parameter Name="includeInherited" Type="System.Boolean" />
          <Parameter Name="targetType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetAuditRules" Return_type="System.Security.AccessControl.AuthorizationRuleCollection">
        <Parameters>
          <Parameter Name="includeExplicit" Type="System.Boolean" />
          <Parameter Name="includeInherited" Type="System.Boolean" />
          <Parameter Name="targetType" Type="System.Type" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.AccessControl.DirectoryObjectSecurity">
    <Properties>
      <Property Name="AreAccessRulesProtected" Type="System.Boolean" />
      <Property Name="AreAuditRulesProtected" Type="System.Boolean" />
      <Property Name="AreAccessRulesCanonical" Type="System.Boolean" />
      <Property Name="AreAuditRulesCanonical" Type="System.Boolean" />
      <Property Name="AccessRightType" Type="System.Type" />
      <Property Name="AccessRuleType" Type="System.Type" />
      <Property Name="AuditRuleType" Type="System.Type" />
    </Properties>
    <Methods>
      <Method Name="AccessRuleFactory" Return_type="System.Security.AccessControl.AccessRule">
        <Parameters>
          <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
          <Parameter Name="accessMask" Type="System.Int32" />
          <Parameter Name="isInherited" Type="System.Boolean" />
          <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
          <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
          <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
          <Parameter Name="objectType" Type="System.Guid" />
          <Parameter Name="inheritedObjectType" Type="System.Guid" />
        </Parameters>
      </Method>
      <Method Name="AuditRuleFactory" Return_type="System.Security.AccessControl.AuditRule">
        <Parameters>
          <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
          <Parameter Name="accessMask" Type="System.Int32" />
          <Parameter Name="isInherited" Type="System.Boolean" />
          <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
          <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
          <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
          <Parameter Name="objectType" Type="System.Guid" />
          <Parameter Name="inheritedObjectType" Type="System.Guid" />
        </Parameters>
      </Method>
      <Method Name="GetAccessRules" Return_type="System.Security.AccessControl.AuthorizationRuleCollection">
        <Parameters>
          <Parameter Name="includeExplicit" Type="System.Boolean" />
          <Parameter Name="includeInherited" Type="System.Boolean" />
          <Parameter Name="targetType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetAuditRules" Return_type="System.Security.AccessControl.AuthorizationRuleCollection">
        <Parameters>
          <Parameter Name="includeExplicit" Type="System.Boolean" />
          <Parameter Name="includeInherited" Type="System.Boolean" />
          <Parameter Name="targetType" Type="System.Type" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.AccessControl.PrivilegeNotHeldException">
    <Properties>
      <Property Name="PrivilegeName" Type="System.String" />
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_PrivilegeName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetObjectData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.AccessControl.RegistryAccessRule">
    <Properties>
      <Property Name="RegistryRights" Type="System.Security.AccessControl.RegistryRights" />
      <Property Name="AccessControlType" Type="System.Security.AccessControl.AccessControlType" />
      <Property Name="IdentityReference" Type="System.Security.Principal.IdentityReference" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
    </Properties>
    <Methods>
      <Method Name="get_RegistryRights" Return_type="System.Security.AccessControl.RegistryRights">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.AccessControl.RegistryAuditRule">
    <Properties>
      <Property Name="RegistryRights" Type="System.Security.AccessControl.RegistryRights" />
      <Property Name="AuditFlags" Type="System.Security.AccessControl.AuditFlags" />
      <Property Name="IdentityReference" Type="System.Security.Principal.IdentityReference" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
    </Properties>
    <Methods>
      <Method Name="get_RegistryRights" Return_type="System.Security.AccessControl.RegistryRights">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.AccessControl.RegistrySecurity">
    <Properties>
      <Property Name="AccessRightType" Type="System.Type" />
      <Property Name="AccessRuleType" Type="System.Type" />
      <Property Name="AuditRuleType" Type="System.Type" />
      <Property Name="AreAccessRulesProtected" Type="System.Boolean" />
      <Property Name="AreAuditRulesProtected" Type="System.Boolean" />
      <Property Name="AreAccessRulesCanonical" Type="System.Boolean" />
      <Property Name="AreAuditRulesCanonical" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="AccessRuleFactory" Return_type="System.Security.AccessControl.AccessRule">
        <Parameters>
          <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
          <Parameter Name="accessMask" Type="System.Int32" />
          <Parameter Name="isInherited" Type="System.Boolean" />
          <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
          <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
          <Parameter Name="type" Type="System.Security.AccessControl.AccessControlType" />
        </Parameters>
      </Method>
      <Method Name="AuditRuleFactory" Return_type="System.Security.AccessControl.AuditRule">
        <Parameters>
          <Parameter Name="identityReference" Type="System.Security.Principal.IdentityReference" />
          <Parameter Name="accessMask" Type="System.Int32" />
          <Parameter Name="isInherited" Type="System.Boolean" />
          <Parameter Name="inheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
          <Parameter Name="propagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
          <Parameter Name="flags" Type="System.Security.AccessControl.AuditFlags" />
        </Parameters>
      </Method>
      <Method Name="AddAccessRule" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAccessRule" />
        </Parameters>
      </Method>
      <Method Name="SetAccessRule" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAccessRule" />
        </Parameters>
      </Method>
      <Method Name="ResetAccessRule" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAccessRule" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccessRule" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAccessRule" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccessRuleAll" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAccessRule" />
        </Parameters>
      </Method>
      <Method Name="RemoveAccessRuleSpecific" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAccessRule" />
        </Parameters>
      </Method>
      <Method Name="AddAuditRule" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAuditRule" />
        </Parameters>
      </Method>
      <Method Name="SetAuditRule" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAuditRule" />
        </Parameters>
      </Method>
      <Method Name="RemoveAuditRule" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAuditRule" />
        </Parameters>
      </Method>
      <Method Name="RemoveAuditRuleAll" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAuditRule" />
        </Parameters>
      </Method>
      <Method Name="RemoveAuditRuleSpecific" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.RegistryAuditRule" />
        </Parameters>
      </Method>
      <Method Name="get_AccessRightType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_AccessRuleType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_AuditRuleType" Return_type="System.Type">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.AccessControl.AuthorizationRule">
    <Properties>
      <Property Name="IdentityReference" Type="System.Security.Principal.IdentityReference" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
    </Properties>
    <Methods>
      <Method Name="get_IdentityReference" Return_type="System.Security.Principal.IdentityReference">
        <Parameters />
      </Method>
      <Method Name="get_IsInherited" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_InheritanceFlags" Return_type="System.Security.AccessControl.InheritanceFlags">
        <Parameters />
      </Method>
      <Method Name="get_PropagationFlags" Return_type="System.Security.AccessControl.PropagationFlags">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.AccessControl.AccessRule">
    <Properties>
      <Property Name="AccessControlType" Type="System.Security.AccessControl.AccessControlType" />
      <Property Name="IdentityReference" Type="System.Security.Principal.IdentityReference" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
    </Properties>
    <Methods>
      <Method Name="get_AccessControlType" Return_type="System.Security.AccessControl.AccessControlType">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.AccessControl.ObjectAccessRule">
    <Properties>
      <Property Name="ObjectType" Type="System.Guid" />
      <Property Name="InheritedObjectType" Type="System.Guid" />
      <Property Name="ObjectFlags" Type="System.Security.AccessControl.ObjectAceFlags" />
      <Property Name="AccessControlType" Type="System.Security.AccessControl.AccessControlType" />
      <Property Name="IdentityReference" Type="System.Security.Principal.IdentityReference" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
    </Properties>
    <Methods>
      <Method Name="get_ObjectType" Return_type="System.Guid">
        <Parameters />
      </Method>
      <Method Name="get_InheritedObjectType" Return_type="System.Guid">
        <Parameters />
      </Method>
      <Method Name="get_ObjectFlags" Return_type="System.Security.AccessControl.ObjectAceFlags">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.AccessControl.AuditRule">
    <Properties>
      <Property Name="AuditFlags" Type="System.Security.AccessControl.AuditFlags" />
      <Property Name="IdentityReference" Type="System.Security.Principal.IdentityReference" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
    </Properties>
    <Methods>
      <Method Name="get_AuditFlags" Return_type="System.Security.AccessControl.AuditFlags">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.AccessControl.ObjectAuditRule">
    <Properties>
      <Property Name="ObjectType" Type="System.Guid" />
      <Property Name="InheritedObjectType" Type="System.Guid" />
      <Property Name="ObjectFlags" Type="System.Security.AccessControl.ObjectAceFlags" />
      <Property Name="AuditFlags" Type="System.Security.AccessControl.AuditFlags" />
      <Property Name="IdentityReference" Type="System.Security.Principal.IdentityReference" />
      <Property Name="IsInherited" Type="System.Boolean" />
      <Property Name="InheritanceFlags" Type="System.Security.AccessControl.InheritanceFlags" />
      <Property Name="PropagationFlags" Type="System.Security.AccessControl.PropagationFlags" />
    </Properties>
    <Methods>
      <Method Name="get_ObjectType" Return_type="System.Guid">
        <Parameters />
      </Method>
      <Method Name="get_InheritedObjectType" Return_type="System.Guid">
        <Parameters />
      </Method>
      <Method Name="get_ObjectFlags" Return_type="System.Security.AccessControl.ObjectAceFlags">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.AccessControl.AuthorizationRuleCollection">
    <Properties>
      <Property Name="Item" Type="System.Security.AccessControl.AuthorizationRule" />
      <Property Name="Count" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="AddRule" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rule" Type="System.Security.AccessControl.AuthorizationRule" />
        </Parameters>
      </Method>
      <Method Name="CopyTo" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rules" Type="System.Security.AccessControl.AuthorizationRule[]" />
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_Item" Return_type="System.Security.AccessControl.AuthorizationRule">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.AccessControl.GenericSecurityDescriptor">
    <Properties>
      <Property Name="Revision" Type="System.Byte" />
      <Property Name="ControlFlags" Type="System.Security.AccessControl.ControlFlags" />
      <Property Name="Owner" Type="System.Security.Principal.SecurityIdentifier" />
      <Property Name="Group" Type="System.Security.Principal.SecurityIdentifier" />
      <Property Name="BinaryLength" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_BinaryLength" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetBinaryForm" Return_type="System.Void">
        <Parameters>
          <Parameter Name="binaryForm" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IsSddlConversionSupported" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Revision" Return_type="System.Byte">
        <Parameters />
      </Method>
      <Method Name="get_ControlFlags" Return_type="System.Security.AccessControl.ControlFlags">
        <Parameters />
      </Method>
      <Method Name="get_Owner" Return_type="System.Security.Principal.SecurityIdentifier">
        <Parameters />
      </Method>
      <Method Name="set_Owner" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Principal.SecurityIdentifier" />
        </Parameters>
      </Method>
      <Method Name="get_Group" Return_type="System.Security.Principal.SecurityIdentifier">
        <Parameters />
      </Method>
      <Method Name="set_Group" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Principal.SecurityIdentifier" />
        </Parameters>
      </Method>
      <Method Name="GetSddlForm" Return_type="System.String">
        <Parameters>
          <Parameter Name="includeSections" Type="System.Security.AccessControl.AccessControlSections" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.AccessControl.RawSecurityDescriptor">
    <Properties>
      <Property Name="ControlFlags" Type="System.Security.AccessControl.ControlFlags" />
      <Property Name="Owner" Type="System.Security.Principal.SecurityIdentifier" />
      <Property Name="Group" Type="System.Security.Principal.SecurityIdentifier" />
      <Property Name="SystemAcl" Type="System.Security.AccessControl.RawAcl" />
      <Property Name="DiscretionaryAcl" Type="System.Security.AccessControl.RawAcl" />
      <Property Name="ResourceManagerControl" Type="System.Byte" />
      <Property Name="BinaryLength" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_ControlFlags" Return_type="System.Security.AccessControl.ControlFlags">
        <Parameters />
      </Method>
      <Method Name="get_Owner" Return_type="System.Security.Principal.SecurityIdentifier">
        <Parameters />
      </Method>
      <Method Name="set_Owner" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Principal.SecurityIdentifier" />
        </Parameters>
      </Method>
      <Method Name="get_Group" Return_type="System.Security.Principal.SecurityIdentifier">
        <Parameters />
      </Method>
      <Method Name="set_Group" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Principal.SecurityIdentifier" />
        </Parameters>
      </Method>
      <Method Name="get_SystemAcl" Return_type="System.Security.AccessControl.RawAcl">
        <Parameters />
      </Method>
      <Method Name="set_SystemAcl" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.AccessControl.RawAcl" />
        </Parameters>
      </Method>
      <Method Name="get_DiscretionaryAcl" Return_type="System.Security.AccessControl.RawAcl">
        <Parameters />
      </Method>
      <Method Name="set_DiscretionaryAcl" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.AccessControl.RawAcl" />
        </Parameters>
      </Method>
      <Method Name="get_ResourceManagerControl" Return_type="System.Byte">
        <Parameters />
      </Method>
      <Method Name="set_ResourceManagerControl" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Byte" />
        </Parameters>
      </Method>
      <Method Name="SetFlags" Return_type="System.Void">
        <Parameters>
          <Parameter Name="flags" Type="System.Security.AccessControl.ControlFlags" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.AccessControl.CommonSecurityDescriptor">
    <Properties>
      <Property Name="IsContainer" Type="System.Boolean" />
      <Property Name="IsDS" Type="System.Boolean" />
      <Property Name="ControlFlags" Type="System.Security.AccessControl.ControlFlags" />
      <Property Name="Owner" Type="System.Security.Principal.SecurityIdentifier" />
      <Property Name="Group" Type="System.Security.Principal.SecurityIdentifier" />
      <Property Name="SystemAcl" Type="System.Security.AccessControl.SystemAcl" />
      <Property Name="DiscretionaryAcl" Type="System.Security.AccessControl.DiscretionaryAcl" />
      <Property Name="IsSystemAclCanonical" Type="System.Boolean" />
      <Property Name="IsDiscretionaryAclCanonical" Type="System.Boolean" />
      <Property Name="BinaryLength" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_IsContainer" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsDS" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_ControlFlags" Return_type="System.Security.AccessControl.ControlFlags">
        <Parameters />
      </Method>
      <Method Name="get_Owner" Return_type="System.Security.Principal.SecurityIdentifier">
        <Parameters />
      </Method>
      <Method Name="set_Owner" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Principal.SecurityIdentifier" />
        </Parameters>
      </Method>
      <Method Name="get_Group" Return_type="System.Security.Principal.SecurityIdentifier">
        <Parameters />
      </Method>
      <Method Name="set_Group" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Principal.SecurityIdentifier" />
        </Parameters>
      </Method>
      <Method Name="get_SystemAcl" Return_type="System.Security.AccessControl.SystemAcl">
        <Parameters />
      </Method>
      <Method Name="set_SystemAcl" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.AccessControl.SystemAcl" />
        </Parameters>
      </Method>
      <Method Name="get_DiscretionaryAcl" Return_type="System.Security.AccessControl.DiscretionaryAcl">
        <Parameters />
      </Method>
      <Method Name="set_DiscretionaryAcl" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.AccessControl.DiscretionaryAcl" />
        </Parameters>
      </Method>
      <Method Name="get_IsSystemAclCanonical" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsDiscretionaryAclCanonical" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="SetSystemAclProtection" Return_type="System.Void">
        <Parameters>
          <Parameter Name="isProtected" Type="System.Boolean" />
          <Parameter Name="preserveInheritance" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="SetDiscretionaryAclProtection" Return_type="System.Void">
        <Parameters>
          <Parameter Name="isProtected" Type="System.Boolean" />
          <Parameter Name="preserveInheritance" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="PurgeAccessControl" Return_type="System.Void">
        <Parameters>
          <Parameter Name="sid" Type="System.Security.Principal.SecurityIdentifier" />
        </Parameters>
      </Method>
      <Method Name="PurgeAudit" Return_type="System.Void">
        <Parameters>
          <Parameter Name="sid" Type="System.Security.Principal.SecurityIdentifier" />
        </Parameters>
      </Method>
      <Method Name="AddDiscretionaryAcl" Return_type="System.Void">
        <Parameters>
          <Parameter Name="revision" Type="System.Byte" />
          <Parameter Name="trusted" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="AddSystemAcl" Return_type="System.Void">
        <Parameters>
          <Parameter Name="revision" Type="System.Byte" />
          <Parameter Name="trusted" Type="System.Int32" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.KeySizes">
    <Properties>
      <Property Name="MinSize" Type="System.Int32" />
      <Property Name="MaxSize" Type="System.Int32" />
      <Property Name="SkipSize" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_MinSize" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_MaxSize" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_SkipSize" Return_type="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.CryptographicException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Security.Cryptography.CryptographicUnexpectedOperationException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Security.Cryptography.RandomNumberGenerator">
    <Properties />
    <Methods>
      <Method Name="Create" Return_type="System.Security.Cryptography.RandomNumberGenerator">
        <Parameters />
      </Method>
      <Method Name="Create" Return_type="System.Security.Cryptography.RandomNumberGenerator">
        <Parameters>
          <Parameter Name="rngName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Dispose" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="GetBytes" Return_type="System.Void">
        <Parameters>
          <Parameter Name="data" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" Return_type="System.Void">
        <Parameters>
          <Parameter Name="data" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetNonZeroBytes" Return_type="System.Void">
        <Parameters>
          <Parameter Name="data" Type="System.Byte[]" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.RNGCryptoServiceProvider">
    <Properties />
    <Methods>
      <Method Name="GetBytes" Return_type="System.Void">
        <Parameters>
          <Parameter Name="data" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="GetNonZeroBytes" Return_type="System.Void">
        <Parameters>
          <Parameter Name="data" Type="System.Byte[]" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.Aes">
    <Properties>
      <Property Name="BlockSize" Type="System.Int32" />
      <Property Name="FeedbackSize" Type="System.Int32" />
      <Property Name="IV" Type="System.Byte[]" />
      <Property Name="Key" Type="System.Byte[]" />
      <Property Name="LegalBlockSizes" Type="System.Security.Cryptography.KeySizes[]" />
      <Property Name="LegalKeySizes" Type="System.Security.Cryptography.KeySizes[]" />
      <Property Name="KeySize" Type="System.Int32" />
      <Property Name="Mode" Type="System.Security.Cryptography.CipherMode" />
      <Property Name="Padding" Type="System.Security.Cryptography.PaddingMode" />
    </Properties>
    <Methods>
      <Method Name="Create" Return_type="System.Security.Cryptography.Aes">
        <Parameters />
      </Method>
      <Method Name="Create" Return_type="System.Security.Cryptography.Aes">
        <Parameters>
          <Parameter Name="algorithmName" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.AsymmetricAlgorithm">
    <Properties>
      <Property Name="KeySize" Type="System.Int32" />
      <Property Name="LegalKeySizes" Type="System.Security.Cryptography.KeySizes[]" />
      <Property Name="SignatureAlgorithm" Type="System.String" />
      <Property Name="KeyExchangeAlgorithm" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="Dispose" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Clear" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_KeySize" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_KeySize" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_LegalKeySizes" Return_type="System.Security.Cryptography.KeySizes[]">
        <Parameters />
      </Method>
      <Method Name="get_SignatureAlgorithm" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_KeyExchangeAlgorithm" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Create" Return_type="System.Security.Cryptography.AsymmetricAlgorithm">
        <Parameters />
      </Method>
      <Method Name="Create" Return_type="System.Security.Cryptography.AsymmetricAlgorithm">
        <Parameters>
          <Parameter Name="algName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="FromXmlString" Return_type="System.Void">
        <Parameters>
          <Parameter Name="xmlString" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ToXmlString" Return_type="System.String">
        <Parameters>
          <Parameter Name="includePrivateParameters" Type="System.Boolean" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.AsymmetricKeyExchangeDeformatter">
    <Properties>
      <Property Name="Parameters" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_Parameters" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Parameters" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="SetKey" Return_type="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Security.Cryptography.AsymmetricAlgorithm" />
        </Parameters>
      </Method>
      <Method Name="DecryptKeyExchange" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="rgb" Type="System.Byte[]" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.AsymmetricKeyExchangeFormatter">
    <Properties>
      <Property Name="Parameters" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_Parameters" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="SetKey" Return_type="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Security.Cryptography.AsymmetricAlgorithm" />
        </Parameters>
      </Method>
      <Method Name="CreateKeyExchange" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="data" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="CreateKeyExchange" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="data" Type="System.Byte[]" />
          <Parameter Name="symAlgType" Type="System.Type" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.AsymmetricSignatureDeformatter">
    <Properties />
    <Methods>
      <Method Name="SetKey" Return_type="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Security.Cryptography.AsymmetricAlgorithm" />
        </Parameters>
      </Method>
      <Method Name="SetHashAlgorithm" Return_type="System.Void">
        <Parameters>
          <Parameter Name="strName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="VerifySignature" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="hash" Type="System.Security.Cryptography.HashAlgorithm" />
          <Parameter Name="rgbSignature" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="VerifySignature" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="rgbHash" Type="System.Byte[]" />
          <Parameter Name="rgbSignature" Type="System.Byte[]" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.AsymmetricSignatureFormatter">
    <Properties />
    <Methods>
      <Method Name="SetKey" Return_type="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Security.Cryptography.AsymmetricAlgorithm" />
        </Parameters>
      </Method>
      <Method Name="SetHashAlgorithm" Return_type="System.Void">
        <Parameters>
          <Parameter Name="strName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="CreateSignature" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="hash" Type="System.Security.Cryptography.HashAlgorithm" />
        </Parameters>
      </Method>
      <Method Name="CreateSignature" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="rgbHash" Type="System.Byte[]" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.ToBase64Transform">
    <Properties>
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_InputBlockSize" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_OutputBlockSize" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_CanTransformMultipleBlocks" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CanReuseTransform" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="TransformBlock" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="inputBuffer" Type="System.Byte[]" />
          <Parameter Name="inputOffset" Type="System.Int32" />
          <Parameter Name="inputCount" Type="System.Int32" />
          <Parameter Name="outputBuffer" Type="System.Byte[]" />
          <Parameter Name="outputOffset" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="TransformFinalBlock" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="inputBuffer" Type="System.Byte[]" />
          <Parameter Name="inputOffset" Type="System.Int32" />
          <Parameter Name="inputCount" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Dispose" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Clear" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.FromBase64Transform">
    <Properties>
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_InputBlockSize" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_OutputBlockSize" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_CanTransformMultipleBlocks" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CanReuseTransform" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="TransformBlock" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="inputBuffer" Type="System.Byte[]" />
          <Parameter Name="inputOffset" Type="System.Int32" />
          <Parameter Name="inputCount" Type="System.Int32" />
          <Parameter Name="outputBuffer" Type="System.Byte[]" />
          <Parameter Name="outputOffset" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="TransformFinalBlock" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="inputBuffer" Type="System.Byte[]" />
          <Parameter Name="inputOffset" Type="System.Int32" />
          <Parameter Name="inputCount" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Dispose" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Clear" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.CryptoAPITransform">
    <Properties>
      <Property Name="KeyHandle" Type="System.IntPtr" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="Dispose" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Clear" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_KeyHandle" Return_type="System.IntPtr">
        <Parameters />
      </Method>
      <Method Name="get_InputBlockSize" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_OutputBlockSize" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_CanTransformMultipleBlocks" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CanReuseTransform" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Reset" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="TransformBlock" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="inputBuffer" Type="System.Byte[]" />
          <Parameter Name="inputOffset" Type="System.Int32" />
          <Parameter Name="inputCount" Type="System.Int32" />
          <Parameter Name="outputBuffer" Type="System.Byte[]" />
          <Parameter Name="outputOffset" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="TransformFinalBlock" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="inputBuffer" Type="System.Byte[]" />
          <Parameter Name="inputOffset" Type="System.Int32" />
          <Parameter Name="inputCount" Type="System.Int32" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.CspParameters">
    <Properties>
      <Property Name="Flags" Type="System.Security.Cryptography.CspProviderFlags" />
      <Property Name="CryptoKeySecurity" Type="System.Security.AccessControl.CryptoKeySecurity" />
      <Property Name="KeyPassword" Type="System.Security.SecureString" />
      <Property Name="ParentWindowHandle" Type="System.IntPtr" />
    </Properties>
    <Methods>
      <Method Name="get_Flags" Return_type="System.Security.Cryptography.CspProviderFlags">
        <Parameters />
      </Method>
      <Method Name="set_Flags" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Cryptography.CspProviderFlags" />
        </Parameters>
      </Method>
      <Method Name="get_CryptoKeySecurity" Return_type="System.Security.AccessControl.CryptoKeySecurity">
        <Parameters />
      </Method>
      <Method Name="set_CryptoKeySecurity" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.AccessControl.CryptoKeySecurity" />
        </Parameters>
      </Method>
      <Method Name="get_KeyPassword" Return_type="System.Security.SecureString">
        <Parameters />
      </Method>
      <Method Name="set_KeyPassword" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.SecureString" />
        </Parameters>
      </Method>
      <Method Name="get_ParentWindowHandle" Return_type="System.IntPtr">
        <Parameters />
      </Method>
      <Method Name="set_ParentWindowHandle" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.IntPtr" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.CryptoConfig">
    <Properties>
      <Property Name="AllowOnlyFipsAlgorithms" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="CreateFromName" Return_type="System.Object">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="args" Type="System.Object[]" />
        </Parameters>
      </Method>
      <Method Name="get_AllowOnlyFipsAlgorithms" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="AddAlgorithm" Return_type="System.Void">
        <Parameters>
          <Parameter Name="algorithm" Type="System.Type" />
          <Parameter Name="names" Type="System.String[]" />
        </Parameters>
      </Method>
      <Method Name="CreateFromName" Return_type="System.Object">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="AddOID" Return_type="System.Void">
        <Parameters>
          <Parameter Name="oid" Type="System.String" />
          <Parameter Name="names" Type="System.String[]" />
        </Parameters>
      </Method>
      <Method Name="MapNameToOID" Return_type="System.String">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="EncodeOID" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="str" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.CryptoStream">
    <Properties>
      <Property Name="CanRead" Type="System.Boolean" />
      <Property Name="CanSeek" Type="System.Boolean" />
      <Property Name="CanWrite" Type="System.Boolean" />
      <Property Name="Length" Type="System.Int64" />
      <Property Name="Position" Type="System.Int64" />
      <Property Name="HasFlushedFinalBlock" Type="System.Boolean" />
      <Property Name="CanTimeout" Type="System.Boolean" />
      <Property Name="ReadTimeout" Type="System.Int32" />
      <Property Name="WriteTimeout" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="FlushFinalBlock" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_CanRead" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CanSeek" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CanWrite" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Length" Return_type="System.Int64">
        <Parameters />
      </Method>
      <Method Name="get_Position" Return_type="System.Int64">
        <Parameters />
      </Method>
      <Method Name="set_Position" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="get_HasFlushedFinalBlock" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Flush" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="FlushAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="Seek" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="offset" Type="System.Int64" />
          <Parameter Name="origin" Type="System.IO.SeekOrigin" />
        </Parameters>
      </Method>
      <Method Name="SetLength" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="Read" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ReadAsync" Return_type="System.Threading.Tasks.Task`1[System.Int32]">
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="WriteAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="Clear" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.DES">
    <Properties>
      <Property Name="Key" Type="System.Byte[]" />
      <Property Name="BlockSize" Type="System.Int32" />
      <Property Name="FeedbackSize" Type="System.Int32" />
      <Property Name="IV" Type="System.Byte[]" />
      <Property Name="LegalBlockSizes" Type="System.Security.Cryptography.KeySizes[]" />
      <Property Name="LegalKeySizes" Type="System.Security.Cryptography.KeySizes[]" />
      <Property Name="KeySize" Type="System.Int32" />
      <Property Name="Mode" Type="System.Security.Cryptography.CipherMode" />
      <Property Name="Padding" Type="System.Security.Cryptography.PaddingMode" />
    </Properties>
    <Methods>
      <Method Name="get_Key" Return_type="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="set_Key" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="Create" Return_type="System.Security.Cryptography.DES">
        <Parameters />
      </Method>
      <Method Name="Create" Return_type="System.Security.Cryptography.DES">
        <Parameters>
          <Parameter Name="algName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="IsWeakKey" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="rgbKey" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="IsSemiWeakKey" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="rgbKey" Type="System.Byte[]" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.DESCryptoServiceProvider">
    <Properties>
      <Property Name="Key" Type="System.Byte[]" />
      <Property Name="BlockSize" Type="System.Int32" />
      <Property Name="FeedbackSize" Type="System.Int32" />
      <Property Name="IV" Type="System.Byte[]" />
      <Property Name="LegalBlockSizes" Type="System.Security.Cryptography.KeySizes[]" />
      <Property Name="LegalKeySizes" Type="System.Security.Cryptography.KeySizes[]" />
      <Property Name="KeySize" Type="System.Int32" />
      <Property Name="Mode" Type="System.Security.Cryptography.CipherMode" />
      <Property Name="Padding" Type="System.Security.Cryptography.PaddingMode" />
    </Properties>
    <Methods>
      <Method Name="CreateEncryptor" Return_type="System.Security.Cryptography.ICryptoTransform">
        <Parameters>
          <Parameter Name="rgbKey" Type="System.Byte[]" />
          <Parameter Name="rgbIV" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="CreateDecryptor" Return_type="System.Security.Cryptography.ICryptoTransform">
        <Parameters>
          <Parameter Name="rgbKey" Type="System.Byte[]" />
          <Parameter Name="rgbIV" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="GenerateKey" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="GenerateIV" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.DeriveBytes">
    <Properties />
    <Methods>
      <Method Name="GetBytes" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="cb" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Reset" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Dispose" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.DSA">
    <Properties>
      <Property Name="KeySize" Type="System.Int32" />
      <Property Name="LegalKeySizes" Type="System.Security.Cryptography.KeySizes[]" />
      <Property Name="SignatureAlgorithm" Type="System.String" />
      <Property Name="KeyExchangeAlgorithm" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="Create" Return_type="System.Security.Cryptography.DSA">
        <Parameters />
      </Method>
      <Method Name="Create" Return_type="System.Security.Cryptography.DSA">
        <Parameters>
          <Parameter Name="algName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="CreateSignature" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="rgbHash" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="VerifySignature" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="rgbHash" Type="System.Byte[]" />
          <Parameter Name="rgbSignature" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="FromXmlString" Return_type="System.Void">
        <Parameters>
          <Parameter Name="xmlString" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ToXmlString" Return_type="System.String">
        <Parameters>
          <Parameter Name="includePrivateParameters" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="ExportParameters" Return_type="System.Security.Cryptography.DSAParameters">
        <Parameters>
          <Parameter Name="includePrivateParameters" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="ImportParameters" Return_type="System.Void">
        <Parameters>
          <Parameter Name="parameters" Type="System.Security.Cryptography.DSAParameters" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.DSACryptoServiceProvider">
    <Properties>
      <Property Name="PublicOnly" Type="System.Boolean" />
      <Property Name="CspKeyContainerInfo" Type="System.Security.Cryptography.CspKeyContainerInfo" />
      <Property Name="KeySize" Type="System.Int32" />
      <Property Name="KeyExchangeAlgorithm" Type="System.String" />
      <Property Name="SignatureAlgorithm" Type="System.String" />
      <Property Name="UseMachineKeyStore" Type="System.Boolean" />
      <Property Name="PersistKeyInCsp" Type="System.Boolean" />
      <Property Name="LegalKeySizes" Type="System.Security.Cryptography.KeySizes[]" />
    </Properties>
    <Methods>
      <Method Name="get_PublicOnly" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CspKeyContainerInfo" Return_type="System.Security.Cryptography.CspKeyContainerInfo">
        <Parameters />
      </Method>
      <Method Name="get_KeySize" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_KeyExchangeAlgorithm" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_SignatureAlgorithm" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_UseMachineKeyStore" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_UseMachineKeyStore" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_PersistKeyInCsp" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_PersistKeyInCsp" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="ExportParameters" Return_type="System.Security.Cryptography.DSAParameters">
        <Parameters>
          <Parameter Name="includePrivateParameters" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="ExportCspBlob" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="includePrivateParameters" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="ImportParameters" Return_type="System.Void">
        <Parameters>
          <Parameter Name="parameters" Type="System.Security.Cryptography.DSAParameters" />
        </Parameters>
      </Method>
      <Method Name="ImportCspBlob" Return_type="System.Void">
        <Parameters>
          <Parameter Name="keyBlob" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="SignData" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="inputStream" Type="System.IO.Stream" />
        </Parameters>
      </Method>
      <Method Name="SignData" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="SignData" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="VerifyData" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="rgbData" Type="System.Byte[]" />
          <Parameter Name="rgbSignature" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="CreateSignature" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="rgbHash" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="VerifySignature" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="rgbHash" Type="System.Byte[]" />
          <Parameter Name="rgbSignature" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="SignHash" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="rgbHash" Type="System.Byte[]" />
          <Parameter Name="str" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="VerifyHash" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="rgbHash" Type="System.Byte[]" />
          <Parameter Name="str" Type="System.String" />
          <Parameter Name="rgbSignature" Type="System.Byte[]" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.DSASignatureDeformatter">
    <Properties />
    <Methods>
      <Method Name="SetKey" Return_type="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Security.Cryptography.AsymmetricAlgorithm" />
        </Parameters>
      </Method>
      <Method Name="SetHashAlgorithm" Return_type="System.Void">
        <Parameters>
          <Parameter Name="strName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="VerifySignature" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="rgbHash" Type="System.Byte[]" />
          <Parameter Name="rgbSignature" Type="System.Byte[]" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.DSASignatureFormatter">
    <Properties />
    <Methods>
      <Method Name="SetKey" Return_type="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Security.Cryptography.AsymmetricAlgorithm" />
        </Parameters>
      </Method>
      <Method Name="SetHashAlgorithm" Return_type="System.Void">
        <Parameters>
          <Parameter Name="strName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="CreateSignature" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="rgbHash" Type="System.Byte[]" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.HMAC">
    <Properties>
      <Property Name="Key" Type="System.Byte[]" />
      <Property Name="HashName" Type="System.String" />
      <Property Name="HashSize" Type="System.Int32" />
      <Property Name="Hash" Type="System.Byte[]" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_Key" Return_type="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="set_Key" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="get_HashName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_HashName" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Create" Return_type="System.Security.Cryptography.HMAC">
        <Parameters />
      </Method>
      <Method Name="Create" Return_type="System.Security.Cryptography.HMAC">
        <Parameters>
          <Parameter Name="algorithmName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Initialize" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.HMACMD5">
    <Properties>
      <Property Name="Key" Type="System.Byte[]" />
      <Property Name="HashName" Type="System.String" />
      <Property Name="HashSize" Type="System.Int32" />
      <Property Name="Hash" Type="System.Byte[]" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Security.Cryptography.HMACRIPEMD160">
    <Properties>
      <Property Name="Key" Type="System.Byte[]" />
      <Property Name="HashName" Type="System.String" />
      <Property Name="HashSize" Type="System.Int32" />
      <Property Name="Hash" Type="System.Byte[]" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Security.Cryptography.HMACSHA1">
    <Properties>
      <Property Name="Key" Type="System.Byte[]" />
      <Property Name="HashName" Type="System.String" />
      <Property Name="HashSize" Type="System.Int32" />
      <Property Name="Hash" Type="System.Byte[]" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Security.Cryptography.HMACSHA256">
    <Properties>
      <Property Name="Key" Type="System.Byte[]" />
      <Property Name="HashName" Type="System.String" />
      <Property Name="HashSize" Type="System.Int32" />
      <Property Name="Hash" Type="System.Byte[]" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Security.Cryptography.HMACSHA384">
    <Properties>
      <Property Name="ProduceLegacyHmacValues" Type="System.Boolean" />
      <Property Name="Key" Type="System.Byte[]" />
      <Property Name="HashName" Type="System.String" />
      <Property Name="HashSize" Type="System.Int32" />
      <Property Name="Hash" Type="System.Byte[]" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_ProduceLegacyHmacValues" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_ProduceLegacyHmacValues" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.HMACSHA512">
    <Properties>
      <Property Name="ProduceLegacyHmacValues" Type="System.Boolean" />
      <Property Name="Key" Type="System.Byte[]" />
      <Property Name="HashName" Type="System.String" />
      <Property Name="HashSize" Type="System.Int32" />
      <Property Name="Hash" Type="System.Byte[]" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_ProduceLegacyHmacValues" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_ProduceLegacyHmacValues" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.HashAlgorithm">
    <Properties>
      <Property Name="HashSize" Type="System.Int32" />
      <Property Name="Hash" Type="System.Byte[]" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_HashSize" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_Hash" Return_type="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="Create" Return_type="System.Security.Cryptography.HashAlgorithm">
        <Parameters />
      </Method>
      <Method Name="Create" Return_type="System.Security.Cryptography.HashAlgorithm">
        <Parameters>
          <Parameter Name="hashName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ComputeHash" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="inputStream" Type="System.IO.Stream" />
        </Parameters>
      </Method>
      <Method Name="ComputeHash" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="ComputeHash" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_InputBlockSize" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_OutputBlockSize" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_CanTransformMultipleBlocks" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CanReuseTransform" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="TransformBlock" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="inputBuffer" Type="System.Byte[]" />
          <Parameter Name="inputOffset" Type="System.Int32" />
          <Parameter Name="inputCount" Type="System.Int32" />
          <Parameter Name="outputBuffer" Type="System.Byte[]" />
          <Parameter Name="outputOffset" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="TransformFinalBlock" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="inputBuffer" Type="System.Byte[]" />
          <Parameter Name="inputOffset" Type="System.Int32" />
          <Parameter Name="inputCount" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Dispose" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Clear" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Initialize" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.CspKeyContainerInfo">
    <Properties>
      <Property Name="MachineKeyStore" Type="System.Boolean" />
      <Property Name="ProviderName" Type="System.String" />
      <Property Name="ProviderType" Type="System.Int32" />
      <Property Name="KeyContainerName" Type="System.String" />
      <Property Name="UniqueKeyContainerName" Type="System.String" />
      <Property Name="KeyNumber" Type="System.Security.Cryptography.KeyNumber" />
      <Property Name="Exportable" Type="System.Boolean" />
      <Property Name="HardwareDevice" Type="System.Boolean" />
      <Property Name="Removable" Type="System.Boolean" />
      <Property Name="Accessible" Type="System.Boolean" />
      <Property Name="Protected" Type="System.Boolean" />
      <Property Name="CryptoKeySecurity" Type="System.Security.AccessControl.CryptoKeySecurity" />
      <Property Name="RandomlyGenerated" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_MachineKeyStore" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_ProviderName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ProviderType" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_KeyContainerName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_UniqueKeyContainerName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_KeyNumber" Return_type="System.Security.Cryptography.KeyNumber">
        <Parameters />
      </Method>
      <Method Name="get_Exportable" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_HardwareDevice" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Removable" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Accessible" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Protected" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CryptoKeySecurity" Return_type="System.Security.AccessControl.CryptoKeySecurity">
        <Parameters />
      </Method>
      <Method Name="get_RandomlyGenerated" Return_type="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.KeyedHashAlgorithm">
    <Properties>
      <Property Name="Key" Type="System.Byte[]" />
      <Property Name="HashSize" Type="System.Int32" />
      <Property Name="Hash" Type="System.Byte[]" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_Key" Return_type="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="set_Key" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="Create" Return_type="System.Security.Cryptography.KeyedHashAlgorithm">
        <Parameters />
      </Method>
      <Method Name="Create" Return_type="System.Security.Cryptography.KeyedHashAlgorithm">
        <Parameters>
          <Parameter Name="algName" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.MACTripleDES">
    <Properties>
      <Property Name="Padding" Type="System.Security.Cryptography.PaddingMode" />
      <Property Name="Key" Type="System.Byte[]" />
      <Property Name="HashSize" Type="System.Int32" />
      <Property Name="Hash" Type="System.Byte[]" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="Initialize" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_Padding" Return_type="System.Security.Cryptography.PaddingMode">
        <Parameters />
      </Method>
      <Method Name="set_Padding" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Cryptography.PaddingMode" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.MD5">
    <Properties>
      <Property Name="HashSize" Type="System.Int32" />
      <Property Name="Hash" Type="System.Byte[]" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="Create" Return_type="System.Security.Cryptography.MD5">
        <Parameters />
      </Method>
      <Method Name="Create" Return_type="System.Security.Cryptography.MD5">
        <Parameters>
          <Parameter Name="algName" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.MD5CryptoServiceProvider">
    <Properties>
      <Property Name="HashSize" Type="System.Int32" />
      <Property Name="Hash" Type="System.Byte[]" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="Initialize" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.MaskGenerationMethod">
    <Properties />
    <Methods>
      <Method Name="GenerateMask" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="rgbSeed" Type="System.Byte[]" />
          <Parameter Name="cbReturn" Type="System.Int32" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.PasswordDeriveBytes">
    <Properties>
      <Property Name="HashName" Type="System.String" />
      <Property Name="IterationCount" Type="System.Int32" />
      <Property Name="Salt" Type="System.Byte[]" />
    </Properties>
    <Methods>
      <Method Name="get_HashName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_HashName" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_IterationCount" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_IterationCount" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_Salt" Return_type="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="set_Salt" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="cb" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Reset" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="CryptDeriveKey" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="algname" Type="System.String" />
          <Parameter Name="alghashname" Type="System.String" />
          <Parameter Name="keySize" Type="System.Int32" />
          <Parameter Name="rgbIV" Type="System.Byte[]" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.PKCS1MaskGenerationMethod">
    <Properties>
      <Property Name="HashName" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_HashName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_HashName" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GenerateMask" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="rgbSeed" Type="System.Byte[]" />
          <Parameter Name="cbReturn" Type="System.Int32" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.RC2">
    <Properties>
      <Property Name="EffectiveKeySize" Type="System.Int32" />
      <Property Name="KeySize" Type="System.Int32" />
      <Property Name="BlockSize" Type="System.Int32" />
      <Property Name="FeedbackSize" Type="System.Int32" />
      <Property Name="IV" Type="System.Byte[]" />
      <Property Name="Key" Type="System.Byte[]" />
      <Property Name="LegalBlockSizes" Type="System.Security.Cryptography.KeySizes[]" />
      <Property Name="LegalKeySizes" Type="System.Security.Cryptography.KeySizes[]" />
      <Property Name="Mode" Type="System.Security.Cryptography.CipherMode" />
      <Property Name="Padding" Type="System.Security.Cryptography.PaddingMode" />
    </Properties>
    <Methods>
      <Method Name="get_EffectiveKeySize" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_EffectiveKeySize" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_KeySize" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_KeySize" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Create" Return_type="System.Security.Cryptography.RC2">
        <Parameters />
      </Method>
      <Method Name="Create" Return_type="System.Security.Cryptography.RC2">
        <Parameters>
          <Parameter Name="AlgName" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.RC2CryptoServiceProvider">
    <Properties>
      <Property Name="EffectiveKeySize" Type="System.Int32" />
      <Property Name="UseSalt" Type="System.Boolean" />
      <Property Name="KeySize" Type="System.Int32" />
      <Property Name="BlockSize" Type="System.Int32" />
      <Property Name="FeedbackSize" Type="System.Int32" />
      <Property Name="IV" Type="System.Byte[]" />
      <Property Name="Key" Type="System.Byte[]" />
      <Property Name="LegalBlockSizes" Type="System.Security.Cryptography.KeySizes[]" />
      <Property Name="LegalKeySizes" Type="System.Security.Cryptography.KeySizes[]" />
      <Property Name="Mode" Type="System.Security.Cryptography.CipherMode" />
      <Property Name="Padding" Type="System.Security.Cryptography.PaddingMode" />
    </Properties>
    <Methods>
      <Method Name="get_EffectiveKeySize" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_EffectiveKeySize" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_UseSalt" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_UseSalt" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="CreateEncryptor" Return_type="System.Security.Cryptography.ICryptoTransform">
        <Parameters>
          <Parameter Name="rgbKey" Type="System.Byte[]" />
          <Parameter Name="rgbIV" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="CreateDecryptor" Return_type="System.Security.Cryptography.ICryptoTransform">
        <Parameters>
          <Parameter Name="rgbKey" Type="System.Byte[]" />
          <Parameter Name="rgbIV" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="GenerateKey" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="GenerateIV" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.Rfc2898DeriveBytes">
    <Properties>
      <Property Name="IterationCount" Type="System.Int32" />
      <Property Name="Salt" Type="System.Byte[]" />
    </Properties>
    <Methods>
      <Method Name="get_IterationCount" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_IterationCount" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_Salt" Return_type="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="set_Salt" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="cb" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Reset" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="CryptDeriveKey" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="algname" Type="System.String" />
          <Parameter Name="alghashname" Type="System.String" />
          <Parameter Name="keySize" Type="System.Int32" />
          <Parameter Name="rgbIV" Type="System.Byte[]" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.RIPEMD160">
    <Properties>
      <Property Name="HashSize" Type="System.Int32" />
      <Property Name="Hash" Type="System.Byte[]" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="Create" Return_type="System.Security.Cryptography.RIPEMD160">
        <Parameters />
      </Method>
      <Method Name="Create" Return_type="System.Security.Cryptography.RIPEMD160">
        <Parameters>
          <Parameter Name="hashName" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.RIPEMD160Managed">
    <Properties>
      <Property Name="HashSize" Type="System.Int32" />
      <Property Name="Hash" Type="System.Byte[]" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="Initialize" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.RSA">
    <Properties>
      <Property Name="KeyExchangeAlgorithm" Type="System.String" />
      <Property Name="SignatureAlgorithm" Type="System.String" />
      <Property Name="KeySize" Type="System.Int32" />
      <Property Name="LegalKeySizes" Type="System.Security.Cryptography.KeySizes[]" />
    </Properties>
    <Methods>
      <Method Name="Create" Return_type="System.Security.Cryptography.RSA">
        <Parameters />
      </Method>
      <Method Name="Create" Return_type="System.Security.Cryptography.RSA">
        <Parameters>
          <Parameter Name="algName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Encrypt" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="data" Type="System.Byte[]" />
          <Parameter Name="padding" Type="System.Security.Cryptography.RSAEncryptionPadding" />
        </Parameters>
      </Method>
      <Method Name="Decrypt" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="data" Type="System.Byte[]" />
          <Parameter Name="padding" Type="System.Security.Cryptography.RSAEncryptionPadding" />
        </Parameters>
      </Method>
      <Method Name="SignHash" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="hash" Type="System.Byte[]" />
          <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
          <Parameter Name="padding" Type="System.Security.Cryptography.RSASignaturePadding" />
        </Parameters>
      </Method>
      <Method Name="VerifyHash" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="hash" Type="System.Byte[]" />
          <Parameter Name="signature" Type="System.Byte[]" />
          <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
          <Parameter Name="padding" Type="System.Security.Cryptography.RSASignaturePadding" />
        </Parameters>
      </Method>
      <Method Name="SignData" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="data" Type="System.Byte[]" />
          <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
          <Parameter Name="padding" Type="System.Security.Cryptography.RSASignaturePadding" />
        </Parameters>
      </Method>
      <Method Name="SignData" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="data" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
          <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
          <Parameter Name="padding" Type="System.Security.Cryptography.RSASignaturePadding" />
        </Parameters>
      </Method>
      <Method Name="SignData" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="data" Type="System.IO.Stream" />
          <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
          <Parameter Name="padding" Type="System.Security.Cryptography.RSASignaturePadding" />
        </Parameters>
      </Method>
      <Method Name="VerifyData" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="data" Type="System.Byte[]" />
          <Parameter Name="signature" Type="System.Byte[]" />
          <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
          <Parameter Name="padding" Type="System.Security.Cryptography.RSASignaturePadding" />
        </Parameters>
      </Method>
      <Method Name="VerifyData" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="data" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
          <Parameter Name="signature" Type="System.Byte[]" />
          <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
          <Parameter Name="padding" Type="System.Security.Cryptography.RSASignaturePadding" />
        </Parameters>
      </Method>
      <Method Name="VerifyData" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="data" Type="System.IO.Stream" />
          <Parameter Name="signature" Type="System.Byte[]" />
          <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
          <Parameter Name="padding" Type="System.Security.Cryptography.RSASignaturePadding" />
        </Parameters>
      </Method>
      <Method Name="DecryptValue" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="rgb" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="EncryptValue" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="rgb" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="get_KeyExchangeAlgorithm" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_SignatureAlgorithm" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="FromXmlString" Return_type="System.Void">
        <Parameters>
          <Parameter Name="xmlString" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ToXmlString" Return_type="System.String">
        <Parameters>
          <Parameter Name="includePrivateParameters" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="ExportParameters" Return_type="System.Security.Cryptography.RSAParameters">
        <Parameters>
          <Parameter Name="includePrivateParameters" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="ImportParameters" Return_type="System.Void">
        <Parameters>
          <Parameter Name="parameters" Type="System.Security.Cryptography.RSAParameters" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.RSASignaturePadding">
    <Properties>
      <Property Name="Pkcs1" Type="System.Security.Cryptography.RSASignaturePadding" />
      <Property Name="Pss" Type="System.Security.Cryptography.RSASignaturePadding" />
      <Property Name="Mode" Type="System.Security.Cryptography.RSASignaturePaddingMode" />
    </Properties>
    <Methods>
      <Method Name="get_Pkcs1" Return_type="System.Security.Cryptography.RSASignaturePadding">
        <Parameters />
      </Method>
      <Method Name="get_Pss" Return_type="System.Security.Cryptography.RSASignaturePadding">
        <Parameters />
      </Method>
      <Method Name="get_Mode" Return_type="System.Security.Cryptography.RSASignaturePaddingMode">
        <Parameters />
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="other" Type="System.Security.Cryptography.RSASignaturePadding" />
        </Parameters>
      </Method>
      <Method Name="op_Equality" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="left" Type="System.Security.Cryptography.RSASignaturePadding" />
          <Parameter Name="right" Type="System.Security.Cryptography.RSASignaturePadding" />
        </Parameters>
      </Method>
      <Method Name="op_Inequality" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="left" Type="System.Security.Cryptography.RSASignaturePadding" />
          <Parameter Name="right" Type="System.Security.Cryptography.RSASignaturePadding" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.RSACryptoServiceProvider">
    <Properties>
      <Property Name="PublicOnly" Type="System.Boolean" />
      <Property Name="CspKeyContainerInfo" Type="System.Security.Cryptography.CspKeyContainerInfo" />
      <Property Name="KeySize" Type="System.Int32" />
      <Property Name="KeyExchangeAlgorithm" Type="System.String" />
      <Property Name="SignatureAlgorithm" Type="System.String" />
      <Property Name="UseMachineKeyStore" Type="System.Boolean" />
      <Property Name="PersistKeyInCsp" Type="System.Boolean" />
      <Property Name="LegalKeySizes" Type="System.Security.Cryptography.KeySizes[]" />
    </Properties>
    <Methods>
      <Method Name="get_PublicOnly" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CspKeyContainerInfo" Return_type="System.Security.Cryptography.CspKeyContainerInfo">
        <Parameters />
      </Method>
      <Method Name="get_KeySize" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_KeyExchangeAlgorithm" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_SignatureAlgorithm" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_UseMachineKeyStore" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_UseMachineKeyStore" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_PersistKeyInCsp" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_PersistKeyInCsp" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="ExportParameters" Return_type="System.Security.Cryptography.RSAParameters">
        <Parameters>
          <Parameter Name="includePrivateParameters" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="ExportCspBlob" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="includePrivateParameters" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="ImportParameters" Return_type="System.Void">
        <Parameters>
          <Parameter Name="parameters" Type="System.Security.Cryptography.RSAParameters" />
        </Parameters>
      </Method>
      <Method Name="ImportCspBlob" Return_type="System.Void">
        <Parameters>
          <Parameter Name="keyBlob" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="SignData" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="inputStream" Type="System.IO.Stream" />
          <Parameter Name="halg" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="SignData" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="halg" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="SignData" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
          <Parameter Name="halg" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="VerifyData" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="buffer" Type="System.Byte[]" />
          <Parameter Name="halg" Type="System.Object" />
          <Parameter Name="signature" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="SignHash" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="rgbHash" Type="System.Byte[]" />
          <Parameter Name="str" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="VerifyHash" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="rgbHash" Type="System.Byte[]" />
          <Parameter Name="str" Type="System.String" />
          <Parameter Name="rgbSignature" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="Encrypt" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="rgb" Type="System.Byte[]" />
          <Parameter Name="fOAEP" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="Decrypt" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="rgb" Type="System.Byte[]" />
          <Parameter Name="fOAEP" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="DecryptValue" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="rgb" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="EncryptValue" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="rgb" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="Encrypt" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="data" Type="System.Byte[]" />
          <Parameter Name="padding" Type="System.Security.Cryptography.RSAEncryptionPadding" />
        </Parameters>
      </Method>
      <Method Name="Decrypt" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="data" Type="System.Byte[]" />
          <Parameter Name="padding" Type="System.Security.Cryptography.RSAEncryptionPadding" />
        </Parameters>
      </Method>
      <Method Name="SignHash" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="hash" Type="System.Byte[]" />
          <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
          <Parameter Name="padding" Type="System.Security.Cryptography.RSASignaturePadding" />
        </Parameters>
      </Method>
      <Method Name="VerifyHash" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="hash" Type="System.Byte[]" />
          <Parameter Name="signature" Type="System.Byte[]" />
          <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
          <Parameter Name="padding" Type="System.Security.Cryptography.RSASignaturePadding" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.RSAEncryptionPadding">
    <Properties>
      <Property Name="Pkcs1" Type="System.Security.Cryptography.RSAEncryptionPadding" />
      <Property Name="OaepSHA1" Type="System.Security.Cryptography.RSAEncryptionPadding" />
      <Property Name="OaepSHA256" Type="System.Security.Cryptography.RSAEncryptionPadding" />
      <Property Name="OaepSHA384" Type="System.Security.Cryptography.RSAEncryptionPadding" />
      <Property Name="OaepSHA512" Type="System.Security.Cryptography.RSAEncryptionPadding" />
      <Property Name="Mode" Type="System.Security.Cryptography.RSAEncryptionPaddingMode" />
      <Property Name="OaepHashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
    </Properties>
    <Methods>
      <Method Name="get_Pkcs1" Return_type="System.Security.Cryptography.RSAEncryptionPadding">
        <Parameters />
      </Method>
      <Method Name="get_OaepSHA1" Return_type="System.Security.Cryptography.RSAEncryptionPadding">
        <Parameters />
      </Method>
      <Method Name="get_OaepSHA256" Return_type="System.Security.Cryptography.RSAEncryptionPadding">
        <Parameters />
      </Method>
      <Method Name="get_OaepSHA384" Return_type="System.Security.Cryptography.RSAEncryptionPadding">
        <Parameters />
      </Method>
      <Method Name="get_OaepSHA512" Return_type="System.Security.Cryptography.RSAEncryptionPadding">
        <Parameters />
      </Method>
      <Method Name="CreateOaep" Return_type="System.Security.Cryptography.RSAEncryptionPadding">
        <Parameters>
          <Parameter Name="hashAlgorithm" Type="System.Security.Cryptography.HashAlgorithmName" />
        </Parameters>
      </Method>
      <Method Name="get_Mode" Return_type="System.Security.Cryptography.RSAEncryptionPaddingMode">
        <Parameters />
      </Method>
      <Method Name="get_OaepHashAlgorithm" Return_type="System.Security.Cryptography.HashAlgorithmName">
        <Parameters />
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="other" Type="System.Security.Cryptography.RSAEncryptionPadding" />
        </Parameters>
      </Method>
      <Method Name="op_Equality" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="left" Type="System.Security.Cryptography.RSAEncryptionPadding" />
          <Parameter Name="right" Type="System.Security.Cryptography.RSAEncryptionPadding" />
        </Parameters>
      </Method>
      <Method Name="op_Inequality" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="left" Type="System.Security.Cryptography.RSAEncryptionPadding" />
          <Parameter Name="right" Type="System.Security.Cryptography.RSAEncryptionPadding" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.RSAOAEPKeyExchangeDeformatter">
    <Properties>
      <Property Name="Parameters" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_Parameters" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Parameters" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="DecryptKeyExchange" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="rgbData" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="SetKey" Return_type="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Security.Cryptography.AsymmetricAlgorithm" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.RSAOAEPKeyExchangeFormatter">
    <Properties>
      <Property Name="Parameter" Type="System.Byte[]" />
      <Property Name="Parameters" Type="System.String" />
      <Property Name="Rng" Type="System.Security.Cryptography.RandomNumberGenerator" />
    </Properties>
    <Methods>
      <Method Name="get_Parameter" Return_type="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="set_Parameter" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="get_Parameters" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Rng" Return_type="System.Security.Cryptography.RandomNumberGenerator">
        <Parameters />
      </Method>
      <Method Name="set_Rng" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Cryptography.RandomNumberGenerator" />
        </Parameters>
      </Method>
      <Method Name="SetKey" Return_type="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Security.Cryptography.AsymmetricAlgorithm" />
        </Parameters>
      </Method>
      <Method Name="CreateKeyExchange" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="rgbData" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="CreateKeyExchange" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="rgbData" Type="System.Byte[]" />
          <Parameter Name="symAlgType" Type="System.Type" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.RSAPKCS1KeyExchangeDeformatter">
    <Properties>
      <Property Name="RNG" Type="System.Security.Cryptography.RandomNumberGenerator" />
      <Property Name="Parameters" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_RNG" Return_type="System.Security.Cryptography.RandomNumberGenerator">
        <Parameters />
      </Method>
      <Method Name="set_RNG" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Cryptography.RandomNumberGenerator" />
        </Parameters>
      </Method>
      <Method Name="get_Parameters" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Parameters" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="DecryptKeyExchange" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="rgbIn" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="SetKey" Return_type="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Security.Cryptography.AsymmetricAlgorithm" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.RSAPKCS1KeyExchangeFormatter">
    <Properties>
      <Property Name="Parameters" Type="System.String" />
      <Property Name="Rng" Type="System.Security.Cryptography.RandomNumberGenerator" />
    </Properties>
    <Methods>
      <Method Name="get_Parameters" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Rng" Return_type="System.Security.Cryptography.RandomNumberGenerator">
        <Parameters />
      </Method>
      <Method Name="set_Rng" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Cryptography.RandomNumberGenerator" />
        </Parameters>
      </Method>
      <Method Name="SetKey" Return_type="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Security.Cryptography.AsymmetricAlgorithm" />
        </Parameters>
      </Method>
      <Method Name="CreateKeyExchange" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="rgbData" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="CreateKeyExchange" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="rgbData" Type="System.Byte[]" />
          <Parameter Name="symAlgType" Type="System.Type" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.RSAPKCS1SignatureDeformatter">
    <Properties />
    <Methods>
      <Method Name="SetKey" Return_type="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Security.Cryptography.AsymmetricAlgorithm" />
        </Parameters>
      </Method>
      <Method Name="SetHashAlgorithm" Return_type="System.Void">
        <Parameters>
          <Parameter Name="strName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="VerifySignature" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="rgbHash" Type="System.Byte[]" />
          <Parameter Name="rgbSignature" Type="System.Byte[]" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.RSAPKCS1SignatureFormatter">
    <Properties />
    <Methods>
      <Method Name="SetKey" Return_type="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Security.Cryptography.AsymmetricAlgorithm" />
        </Parameters>
      </Method>
      <Method Name="SetHashAlgorithm" Return_type="System.Void">
        <Parameters>
          <Parameter Name="strName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="CreateSignature" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="rgbHash" Type="System.Byte[]" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.Rijndael">
    <Properties>
      <Property Name="BlockSize" Type="System.Int32" />
      <Property Name="FeedbackSize" Type="System.Int32" />
      <Property Name="IV" Type="System.Byte[]" />
      <Property Name="Key" Type="System.Byte[]" />
      <Property Name="LegalBlockSizes" Type="System.Security.Cryptography.KeySizes[]" />
      <Property Name="LegalKeySizes" Type="System.Security.Cryptography.KeySizes[]" />
      <Property Name="KeySize" Type="System.Int32" />
      <Property Name="Mode" Type="System.Security.Cryptography.CipherMode" />
      <Property Name="Padding" Type="System.Security.Cryptography.PaddingMode" />
    </Properties>
    <Methods>
      <Method Name="Create" Return_type="System.Security.Cryptography.Rijndael">
        <Parameters />
      </Method>
      <Method Name="Create" Return_type="System.Security.Cryptography.Rijndael">
        <Parameters>
          <Parameter Name="algName" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.RijndaelManaged">
    <Properties>
      <Property Name="BlockSize" Type="System.Int32" />
      <Property Name="FeedbackSize" Type="System.Int32" />
      <Property Name="IV" Type="System.Byte[]" />
      <Property Name="Key" Type="System.Byte[]" />
      <Property Name="LegalBlockSizes" Type="System.Security.Cryptography.KeySizes[]" />
      <Property Name="LegalKeySizes" Type="System.Security.Cryptography.KeySizes[]" />
      <Property Name="KeySize" Type="System.Int32" />
      <Property Name="Mode" Type="System.Security.Cryptography.CipherMode" />
      <Property Name="Padding" Type="System.Security.Cryptography.PaddingMode" />
    </Properties>
    <Methods>
      <Method Name="CreateEncryptor" Return_type="System.Security.Cryptography.ICryptoTransform">
        <Parameters>
          <Parameter Name="rgbKey" Type="System.Byte[]" />
          <Parameter Name="rgbIV" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="CreateDecryptor" Return_type="System.Security.Cryptography.ICryptoTransform">
        <Parameters>
          <Parameter Name="rgbKey" Type="System.Byte[]" />
          <Parameter Name="rgbIV" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="GenerateKey" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="GenerateIV" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.RijndaelManagedTransform">
    <Properties>
      <Property Name="BlockSizeValue" Type="System.Int32" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="Dispose" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Clear" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_BlockSizeValue" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_InputBlockSize" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_OutputBlockSize" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_CanTransformMultipleBlocks" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CanReuseTransform" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="TransformBlock" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="inputBuffer" Type="System.Byte[]" />
          <Parameter Name="inputOffset" Type="System.Int32" />
          <Parameter Name="inputCount" Type="System.Int32" />
          <Parameter Name="outputBuffer" Type="System.Byte[]" />
          <Parameter Name="outputOffset" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="TransformFinalBlock" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="inputBuffer" Type="System.Byte[]" />
          <Parameter Name="inputOffset" Type="System.Int32" />
          <Parameter Name="inputCount" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Reset" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.SHA1">
    <Properties>
      <Property Name="HashSize" Type="System.Int32" />
      <Property Name="Hash" Type="System.Byte[]" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="Create" Return_type="System.Security.Cryptography.SHA1">
        <Parameters />
      </Method>
      <Method Name="Create" Return_type="System.Security.Cryptography.SHA1">
        <Parameters>
          <Parameter Name="hashName" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.SHA1CryptoServiceProvider">
    <Properties>
      <Property Name="HashSize" Type="System.Int32" />
      <Property Name="Hash" Type="System.Byte[]" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="Initialize" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.SHA1Managed">
    <Properties>
      <Property Name="HashSize" Type="System.Int32" />
      <Property Name="Hash" Type="System.Byte[]" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="Initialize" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.SHA256">
    <Properties>
      <Property Name="HashSize" Type="System.Int32" />
      <Property Name="Hash" Type="System.Byte[]" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="Create" Return_type="System.Security.Cryptography.SHA256">
        <Parameters />
      </Method>
      <Method Name="Create" Return_type="System.Security.Cryptography.SHA256">
        <Parameters>
          <Parameter Name="hashName" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.SHA256Managed">
    <Properties>
      <Property Name="HashSize" Type="System.Int32" />
      <Property Name="Hash" Type="System.Byte[]" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="Initialize" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.SHA384">
    <Properties>
      <Property Name="HashSize" Type="System.Int32" />
      <Property Name="Hash" Type="System.Byte[]" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="Create" Return_type="System.Security.Cryptography.SHA384">
        <Parameters />
      </Method>
      <Method Name="Create" Return_type="System.Security.Cryptography.SHA384">
        <Parameters>
          <Parameter Name="hashName" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.SHA384Managed">
    <Properties>
      <Property Name="HashSize" Type="System.Int32" />
      <Property Name="Hash" Type="System.Byte[]" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="Initialize" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.SHA512">
    <Properties>
      <Property Name="HashSize" Type="System.Int32" />
      <Property Name="Hash" Type="System.Byte[]" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="Create" Return_type="System.Security.Cryptography.SHA512">
        <Parameters />
      </Method>
      <Method Name="Create" Return_type="System.Security.Cryptography.SHA512">
        <Parameters>
          <Parameter Name="hashName" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.SHA512Managed">
    <Properties>
      <Property Name="HashSize" Type="System.Int32" />
      <Property Name="Hash" Type="System.Byte[]" />
      <Property Name="InputBlockSize" Type="System.Int32" />
      <Property Name="OutputBlockSize" Type="System.Int32" />
      <Property Name="CanTransformMultipleBlocks" Type="System.Boolean" />
      <Property Name="CanReuseTransform" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="Initialize" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.SignatureDescription">
    <Properties>
      <Property Name="KeyAlgorithm" Type="System.String" />
      <Property Name="DigestAlgorithm" Type="System.String" />
      <Property Name="FormatterAlgorithm" Type="System.String" />
      <Property Name="DeformatterAlgorithm" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_KeyAlgorithm" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_KeyAlgorithm" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_DigestAlgorithm" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_DigestAlgorithm" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_FormatterAlgorithm" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_FormatterAlgorithm" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_DeformatterAlgorithm" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_DeformatterAlgorithm" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="CreateDeformatter" Return_type="System.Security.Cryptography.AsymmetricSignatureDeformatter">
        <Parameters>
          <Parameter Name="key" Type="System.Security.Cryptography.AsymmetricAlgorithm" />
        </Parameters>
      </Method>
      <Method Name="CreateFormatter" Return_type="System.Security.Cryptography.AsymmetricSignatureFormatter">
        <Parameters>
          <Parameter Name="key" Type="System.Security.Cryptography.AsymmetricAlgorithm" />
        </Parameters>
      </Method>
      <Method Name="CreateDigest" Return_type="System.Security.Cryptography.HashAlgorithm">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.SymmetricAlgorithm">
    <Properties>
      <Property Name="BlockSize" Type="System.Int32" />
      <Property Name="FeedbackSize" Type="System.Int32" />
      <Property Name="IV" Type="System.Byte[]" />
      <Property Name="Key" Type="System.Byte[]" />
      <Property Name="LegalBlockSizes" Type="System.Security.Cryptography.KeySizes[]" />
      <Property Name="LegalKeySizes" Type="System.Security.Cryptography.KeySizes[]" />
      <Property Name="KeySize" Type="System.Int32" />
      <Property Name="Mode" Type="System.Security.Cryptography.CipherMode" />
      <Property Name="Padding" Type="System.Security.Cryptography.PaddingMode" />
    </Properties>
    <Methods>
      <Method Name="ValidKeySize" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="bitLength" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Dispose" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Clear" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_BlockSize" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_BlockSize" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_FeedbackSize" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_FeedbackSize" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_IV" Return_type="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="set_IV" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="get_Key" Return_type="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="set_Key" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="get_LegalBlockSizes" Return_type="System.Security.Cryptography.KeySizes[]">
        <Parameters />
      </Method>
      <Method Name="get_LegalKeySizes" Return_type="System.Security.Cryptography.KeySizes[]">
        <Parameters />
      </Method>
      <Method Name="get_KeySize" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_KeySize" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_Mode" Return_type="System.Security.Cryptography.CipherMode">
        <Parameters />
      </Method>
      <Method Name="set_Mode" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Cryptography.CipherMode" />
        </Parameters>
      </Method>
      <Method Name="get_Padding" Return_type="System.Security.Cryptography.PaddingMode">
        <Parameters />
      </Method>
      <Method Name="set_Padding" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Cryptography.PaddingMode" />
        </Parameters>
      </Method>
      <Method Name="Create" Return_type="System.Security.Cryptography.SymmetricAlgorithm">
        <Parameters />
      </Method>
      <Method Name="Create" Return_type="System.Security.Cryptography.SymmetricAlgorithm">
        <Parameters>
          <Parameter Name="algName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="CreateEncryptor" Return_type="System.Security.Cryptography.ICryptoTransform">
        <Parameters />
      </Method>
      <Method Name="CreateEncryptor" Return_type="System.Security.Cryptography.ICryptoTransform">
        <Parameters>
          <Parameter Name="rgbKey" Type="System.Byte[]" />
          <Parameter Name="rgbIV" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="CreateDecryptor" Return_type="System.Security.Cryptography.ICryptoTransform">
        <Parameters />
      </Method>
      <Method Name="CreateDecryptor" Return_type="System.Security.Cryptography.ICryptoTransform">
        <Parameters>
          <Parameter Name="rgbKey" Type="System.Byte[]" />
          <Parameter Name="rgbIV" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="GenerateKey" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="GenerateIV" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.TripleDES">
    <Properties>
      <Property Name="Key" Type="System.Byte[]" />
      <Property Name="BlockSize" Type="System.Int32" />
      <Property Name="FeedbackSize" Type="System.Int32" />
      <Property Name="IV" Type="System.Byte[]" />
      <Property Name="LegalBlockSizes" Type="System.Security.Cryptography.KeySizes[]" />
      <Property Name="LegalKeySizes" Type="System.Security.Cryptography.KeySizes[]" />
      <Property Name="KeySize" Type="System.Int32" />
      <Property Name="Mode" Type="System.Security.Cryptography.CipherMode" />
      <Property Name="Padding" Type="System.Security.Cryptography.PaddingMode" />
    </Properties>
    <Methods>
      <Method Name="get_Key" Return_type="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="set_Key" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="Create" Return_type="System.Security.Cryptography.TripleDES">
        <Parameters />
      </Method>
      <Method Name="Create" Return_type="System.Security.Cryptography.TripleDES">
        <Parameters>
          <Parameter Name="str" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="IsWeakKey" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="rgbKey" Type="System.Byte[]" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.TripleDESCryptoServiceProvider">
    <Properties>
      <Property Name="Key" Type="System.Byte[]" />
      <Property Name="BlockSize" Type="System.Int32" />
      <Property Name="FeedbackSize" Type="System.Int32" />
      <Property Name="IV" Type="System.Byte[]" />
      <Property Name="LegalBlockSizes" Type="System.Security.Cryptography.KeySizes[]" />
      <Property Name="LegalKeySizes" Type="System.Security.Cryptography.KeySizes[]" />
      <Property Name="KeySize" Type="System.Int32" />
      <Property Name="Mode" Type="System.Security.Cryptography.CipherMode" />
      <Property Name="Padding" Type="System.Security.Cryptography.PaddingMode" />
    </Properties>
    <Methods>
      <Method Name="CreateEncryptor" Return_type="System.Security.Cryptography.ICryptoTransform">
        <Parameters>
          <Parameter Name="rgbKey" Type="System.Byte[]" />
          <Parameter Name="rgbIV" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="CreateDecryptor" Return_type="System.Security.Cryptography.ICryptoTransform">
        <Parameters>
          <Parameter Name="rgbKey" Type="System.Byte[]" />
          <Parameter Name="rgbIV" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="GenerateKey" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="GenerateIV" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Cryptography.X509Certificates.X509Certificate">
    <Properties>
      <Property Name="Handle" Type="System.IntPtr" />
      <Property Name="Issuer" Type="System.String" />
      <Property Name="Subject" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="CreateFromCertFile" Return_type="System.Security.Cryptography.X509Certificates.X509Certificate">
        <Parameters>
          <Parameter Name="filename" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="CreateFromSignedFile" Return_type="System.Security.Cryptography.X509Certificates.X509Certificate">
        <Parameters>
          <Parameter Name="filename" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_Handle" Return_type="System.IntPtr">
        <Parameters />
      </Method>
      <Method Name="GetName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetIssuerName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetSerialNumber" Return_type="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="GetSerialNumberString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetKeyAlgorithmParameters" Return_type="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="GetKeyAlgorithmParametersString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetKeyAlgorithm" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetPublicKey" Return_type="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="GetPublicKeyString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetRawCertData" Return_type="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="GetRawCertDataString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetCertHash" Return_type="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="GetCertHashString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetEffectiveDateString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetExpirationDateString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="other" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="fVerbose" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetFormat" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Issuer" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Subject" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Import" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rawData" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="Import" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rawData" Type="System.Byte[]" />
          <Parameter Name="password" Type="System.String" />
          <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
        </Parameters>
      </Method>
      <Method Name="Import" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rawData" Type="System.Byte[]" />
          <Parameter Name="password" Type="System.Security.SecureString" />
          <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
        </Parameters>
      </Method>
      <Method Name="Import" Return_type="System.Void">
        <Parameters>
          <Parameter Name="fileName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Import" Return_type="System.Void">
        <Parameters>
          <Parameter Name="fileName" Type="System.String" />
          <Parameter Name="password" Type="System.String" />
          <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
        </Parameters>
      </Method>
      <Method Name="Import" Return_type="System.Void">
        <Parameters>
          <Parameter Name="fileName" Type="System.String" />
          <Parameter Name="password" Type="System.Security.SecureString" />
          <Parameter Name="keyStorageFlags" Type="System.Security.Cryptography.X509Certificates.X509KeyStorageFlags" />
        </Parameters>
      </Method>
      <Method Name="Export" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="contentType" Type="System.Security.Cryptography.X509Certificates.X509ContentType" />
        </Parameters>
      </Method>
      <Method Name="Export" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="contentType" Type="System.Security.Cryptography.X509Certificates.X509ContentType" />
          <Parameter Name="password" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Export" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="contentType" Type="System.Security.Cryptography.X509Certificates.X509ContentType" />
          <Parameter Name="password" Type="System.Security.SecureString" />
        </Parameters>
      </Method>
      <Method Name="Reset" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Dispose" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Permissions.EnvironmentPermission">
    <Properties />
    <Methods>
      <Method Name="SetPathList" Return_type="System.Void">
        <Parameters>
          <Parameter Name="flag" Type="System.Security.Permissions.EnvironmentPermissionAccess" />
          <Parameter Name="pathList" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="AddPathList" Return_type="System.Void">
        <Parameters>
          <Parameter Name="flag" Type="System.Security.Permissions.EnvironmentPermissionAccess" />
          <Parameter Name="pathList" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetPathList" Return_type="System.String">
        <Parameters>
          <Parameter Name="flag" Type="System.Security.Permissions.EnvironmentPermissionAccess" />
        </Parameters>
      </Method>
      <Method Name="IsUnrestricted" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="IsSubsetOf" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="target" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="Intersect" Return_type="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="Union" Return_type="System.Security.IPermission">
        <Parameters>
          <Parameter Name="other" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Security.IPermission">
        <Parameters />
      </Method>
      <Method Name="ToXml" Return_type="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" Return_type="System.Void">
        <Parameters>
          <Parameter Name="esd" Type="System.Security.SecurityElement" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Permissions.FileDialogPermission">
    <Properties>
      <Property Name="Access" Type="System.Security.Permissions.FileDialogPermissionAccess" />
    </Properties>
    <Methods>
      <Method Name="FromXml" Return_type="System.Void">
        <Parameters>
          <Parameter Name="esd" Type="System.Security.SecurityElement" />
        </Parameters>
      </Method>
      <Method Name="get_Access" Return_type="System.Security.Permissions.FileDialogPermissionAccess">
        <Parameters />
      </Method>
      <Method Name="set_Access" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Permissions.FileDialogPermissionAccess" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Security.IPermission">
        <Parameters />
      </Method>
      <Method Name="Intersect" Return_type="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="IsSubsetOf" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="target" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="IsUnrestricted" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="ToXml" Return_type="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="Union" Return_type="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Permissions.FileIOPermission">
    <Properties>
      <Property Name="AllLocalFiles" Type="System.Security.Permissions.FileIOPermissionAccess" />
      <Property Name="AllFiles" Type="System.Security.Permissions.FileIOPermissionAccess" />
    </Properties>
    <Methods>
      <Method Name="SetPathList" Return_type="System.Void">
        <Parameters>
          <Parameter Name="access" Type="System.Security.Permissions.FileIOPermissionAccess" />
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="SetPathList" Return_type="System.Void">
        <Parameters>
          <Parameter Name="access" Type="System.Security.Permissions.FileIOPermissionAccess" />
          <Parameter Name="pathList" Type="System.String[]" />
        </Parameters>
      </Method>
      <Method Name="AddPathList" Return_type="System.Void">
        <Parameters>
          <Parameter Name="access" Type="System.Security.Permissions.FileIOPermissionAccess" />
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="AddPathList" Return_type="System.Void">
        <Parameters>
          <Parameter Name="access" Type="System.Security.Permissions.FileIOPermissionAccess" />
          <Parameter Name="pathList" Type="System.String[]" />
        </Parameters>
      </Method>
      <Method Name="GetPathList" Return_type="System.String[]">
        <Parameters>
          <Parameter Name="access" Type="System.Security.Permissions.FileIOPermissionAccess" />
        </Parameters>
      </Method>
      <Method Name="get_AllLocalFiles" Return_type="System.Security.Permissions.FileIOPermissionAccess">
        <Parameters />
      </Method>
      <Method Name="set_AllLocalFiles" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Permissions.FileIOPermissionAccess" />
        </Parameters>
      </Method>
      <Method Name="get_AllFiles" Return_type="System.Security.Permissions.FileIOPermissionAccess">
        <Parameters />
      </Method>
      <Method Name="set_AllFiles" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Permissions.FileIOPermissionAccess" />
        </Parameters>
      </Method>
      <Method Name="IsUnrestricted" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="IsSubsetOf" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="target" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="Intersect" Return_type="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="Union" Return_type="System.Security.IPermission">
        <Parameters>
          <Parameter Name="other" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Security.IPermission">
        <Parameters />
      </Method>
      <Method Name="ToXml" Return_type="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" Return_type="System.Void">
        <Parameters>
          <Parameter Name="esd" Type="System.Security.SecurityElement" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Permissions.HostProtectionAttribute">
    <Properties>
      <Property Name="Resources" Type="System.Security.Permissions.HostProtectionResource" />
      <Property Name="Synchronization" Type="System.Boolean" />
      <Property Name="SharedState" Type="System.Boolean" />
      <Property Name="ExternalProcessMgmt" Type="System.Boolean" />
      <Property Name="SelfAffectingProcessMgmt" Type="System.Boolean" />
      <Property Name="ExternalThreading" Type="System.Boolean" />
      <Property Name="SelfAffectingThreading" Type="System.Boolean" />
      <Property Name="SecurityInfrastructure" Type="System.Boolean" />
      <Property Name="UI" Type="System.Boolean" />
      <Property Name="MayLeakOnAbort" Type="System.Boolean" />
      <Property Name="Action" Type="System.Security.Permissions.SecurityAction" />
      <Property Name="Unrestricted" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Resources" Return_type="System.Security.Permissions.HostProtectionResource">
        <Parameters />
      </Method>
      <Method Name="set_Resources" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Permissions.HostProtectionResource" />
        </Parameters>
      </Method>
      <Method Name="get_Synchronization" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_Synchronization" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_SharedState" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_SharedState" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_ExternalProcessMgmt" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_ExternalProcessMgmt" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_SelfAffectingProcessMgmt" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_SelfAffectingProcessMgmt" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_ExternalThreading" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_ExternalThreading" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_SelfAffectingThreading" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_SelfAffectingThreading" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_SecurityInfrastructure" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_SecurityInfrastructure" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_UI" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_UI" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_MayLeakOnAbort" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_MayLeakOnAbort" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="CreatePermission" Return_type="System.Security.IPermission">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Permissions.IsolatedStoragePermission">
    <Properties>
      <Property Name="UserQuota" Type="System.Int64" />
      <Property Name="UsageAllowed" Type="System.Security.Permissions.IsolatedStorageContainment" />
    </Properties>
    <Methods>
      <Method Name="FromXml" Return_type="System.Void">
        <Parameters>
          <Parameter Name="esd" Type="System.Security.SecurityElement" />
        </Parameters>
      </Method>
      <Method Name="set_UserQuota" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="get_UserQuota" Return_type="System.Int64">
        <Parameters />
      </Method>
      <Method Name="set_UsageAllowed" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Permissions.IsolatedStorageContainment" />
        </Parameters>
      </Method>
      <Method Name="get_UsageAllowed" Return_type="System.Security.Permissions.IsolatedStorageContainment">
        <Parameters />
      </Method>
      <Method Name="IsUnrestricted" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="ToXml" Return_type="System.Security.SecurityElement">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Permissions.IsolatedStorageFilePermission">
    <Properties>
      <Property Name="UserQuota" Type="System.Int64" />
      <Property Name="UsageAllowed" Type="System.Security.Permissions.IsolatedStorageContainment" />
    </Properties>
    <Methods>
      <Method Name="ToXml" Return_type="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="Union" Return_type="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="IsSubsetOf" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="target" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="Intersect" Return_type="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Security.IPermission">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Permissions.SecurityAttribute">
    <Properties>
      <Property Name="Action" Type="System.Security.Permissions.SecurityAction" />
      <Property Name="Unrestricted" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Action" Return_type="System.Security.Permissions.SecurityAction">
        <Parameters />
      </Method>
      <Method Name="set_Action" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Permissions.SecurityAction" />
        </Parameters>
      </Method>
      <Method Name="get_Unrestricted" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_Unrestricted" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="CreatePermission" Return_type="System.Security.IPermission">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Permissions.CodeAccessSecurityAttribute">
    <Properties>
      <Property Name="Action" Type="System.Security.Permissions.SecurityAction" />
      <Property Name="Unrestricted" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Security.Permissions.EnvironmentPermissionAttribute">
    <Properties>
      <Property Name="Read" Type="System.String" />
      <Property Name="Write" Type="System.String" />
      <Property Name="All" Type="System.String" />
      <Property Name="Action" Type="System.Security.Permissions.SecurityAction" />
      <Property Name="Unrestricted" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Read" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Read" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_Write" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_All" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_All" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="CreatePermission" Return_type="System.Security.IPermission">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Permissions.FileDialogPermissionAttribute">
    <Properties>
      <Property Name="Open" Type="System.Boolean" />
      <Property Name="Save" Type="System.Boolean" />
      <Property Name="Action" Type="System.Security.Permissions.SecurityAction" />
      <Property Name="Unrestricted" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Open" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_Open" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_Save" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_Save" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="CreatePermission" Return_type="System.Security.IPermission">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Permissions.FileIOPermissionAttribute">
    <Properties>
      <Property Name="Read" Type="System.String" />
      <Property Name="Write" Type="System.String" />
      <Property Name="Append" Type="System.String" />
      <Property Name="PathDiscovery" Type="System.String" />
      <Property Name="ViewAccessControl" Type="System.String" />
      <Property Name="ChangeAccessControl" Type="System.String" />
      <Property Name="All" Type="System.String" />
      <Property Name="ViewAndModify" Type="System.String" />
      <Property Name="AllFiles" Type="System.Security.Permissions.FileIOPermissionAccess" />
      <Property Name="AllLocalFiles" Type="System.Security.Permissions.FileIOPermissionAccess" />
      <Property Name="Action" Type="System.Security.Permissions.SecurityAction" />
      <Property Name="Unrestricted" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Read" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Read" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_Write" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_Append" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Append" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_PathDiscovery" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_PathDiscovery" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_ViewAccessControl" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_ViewAccessControl" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_ChangeAccessControl" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_ChangeAccessControl" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="set_All" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_All" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ViewAndModify" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_ViewAndModify" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_AllFiles" Return_type="System.Security.Permissions.FileIOPermissionAccess">
        <Parameters />
      </Method>
      <Method Name="set_AllFiles" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Permissions.FileIOPermissionAccess" />
        </Parameters>
      </Method>
      <Method Name="get_AllLocalFiles" Return_type="System.Security.Permissions.FileIOPermissionAccess">
        <Parameters />
      </Method>
      <Method Name="set_AllLocalFiles" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Permissions.FileIOPermissionAccess" />
        </Parameters>
      </Method>
      <Method Name="CreatePermission" Return_type="System.Security.IPermission">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Permissions.KeyContainerPermissionAttribute">
    <Properties>
      <Property Name="KeyStore" Type="System.String" />
      <Property Name="ProviderName" Type="System.String" />
      <Property Name="ProviderType" Type="System.Int32" />
      <Property Name="KeyContainerName" Type="System.String" />
      <Property Name="KeySpec" Type="System.Int32" />
      <Property Name="Flags" Type="System.Security.Permissions.KeyContainerPermissionFlags" />
      <Property Name="Action" Type="System.Security.Permissions.SecurityAction" />
      <Property Name="Unrestricted" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_KeyStore" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_KeyStore" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_ProviderName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_ProviderName" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_ProviderType" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_ProviderType" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_KeyContainerName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_KeyContainerName" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_KeySpec" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_KeySpec" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_Flags" Return_type="System.Security.Permissions.KeyContainerPermissionFlags">
        <Parameters />
      </Method>
      <Method Name="set_Flags" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Permissions.KeyContainerPermissionFlags" />
        </Parameters>
      </Method>
      <Method Name="CreatePermission" Return_type="System.Security.IPermission">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Permissions.PrincipalPermissionAttribute">
    <Properties>
      <Property Name="Name" Type="System.String" />
      <Property Name="Role" Type="System.String" />
      <Property Name="Authenticated" Type="System.Boolean" />
      <Property Name="Action" Type="System.Security.Permissions.SecurityAction" />
      <Property Name="Unrestricted" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Name" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_Role" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Role" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_Authenticated" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_Authenticated" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="CreatePermission" Return_type="System.Security.IPermission">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Permissions.ReflectionPermissionAttribute">
    <Properties>
      <Property Name="Flags" Type="System.Security.Permissions.ReflectionPermissionFlag" />
      <Property Name="TypeInformation" Type="System.Boolean" />
      <Property Name="MemberAccess" Type="System.Boolean" />
      <Property Name="ReflectionEmit" Type="System.Boolean" />
      <Property Name="RestrictedMemberAccess" Type="System.Boolean" />
      <Property Name="Action" Type="System.Security.Permissions.SecurityAction" />
      <Property Name="Unrestricted" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Flags" Return_type="System.Security.Permissions.ReflectionPermissionFlag">
        <Parameters />
      </Method>
      <Method Name="set_Flags" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Permissions.ReflectionPermissionFlag" />
        </Parameters>
      </Method>
      <Method Name="get_TypeInformation" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_TypeInformation" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_MemberAccess" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_MemberAccess" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_ReflectionEmit" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_ReflectionEmit" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_RestrictedMemberAccess" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_RestrictedMemberAccess" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="CreatePermission" Return_type="System.Security.IPermission">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Permissions.RegistryPermissionAttribute">
    <Properties>
      <Property Name="Read" Type="System.String" />
      <Property Name="Write" Type="System.String" />
      <Property Name="Create" Type="System.String" />
      <Property Name="ViewAccessControl" Type="System.String" />
      <Property Name="ChangeAccessControl" Type="System.String" />
      <Property Name="ViewAndModify" Type="System.String" />
      <Property Name="All" Type="System.String" />
      <Property Name="Action" Type="System.Security.Permissions.SecurityAction" />
      <Property Name="Unrestricted" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Read" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Read" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_Write" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_Create" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Create" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_ViewAccessControl" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_ViewAccessControl" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_ChangeAccessControl" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_ChangeAccessControl" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_ViewAndModify" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_ViewAndModify" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_All" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_All" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="CreatePermission" Return_type="System.Security.IPermission">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Permissions.SecurityPermissionAttribute">
    <Properties>
      <Property Name="Flags" Type="System.Security.Permissions.SecurityPermissionFlag" />
      <Property Name="Assertion" Type="System.Boolean" />
      <Property Name="UnmanagedCode" Type="System.Boolean" />
      <Property Name="SkipVerification" Type="System.Boolean" />
      <Property Name="Execution" Type="System.Boolean" />
      <Property Name="ControlThread" Type="System.Boolean" />
      <Property Name="ControlEvidence" Type="System.Boolean" />
      <Property Name="ControlPolicy" Type="System.Boolean" />
      <Property Name="SerializationFormatter" Type="System.Boolean" />
      <Property Name="ControlDomainPolicy" Type="System.Boolean" />
      <Property Name="ControlPrincipal" Type="System.Boolean" />
      <Property Name="ControlAppDomain" Type="System.Boolean" />
      <Property Name="RemotingConfiguration" Type="System.Boolean" />
      <Property Name="Infrastructure" Type="System.Boolean" />
      <Property Name="BindingRedirects" Type="System.Boolean" />
      <Property Name="Action" Type="System.Security.Permissions.SecurityAction" />
      <Property Name="Unrestricted" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Flags" Return_type="System.Security.Permissions.SecurityPermissionFlag">
        <Parameters />
      </Method>
      <Method Name="set_Flags" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Permissions.SecurityPermissionFlag" />
        </Parameters>
      </Method>
      <Method Name="get_Assertion" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_Assertion" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_UnmanagedCode" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_UnmanagedCode" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_SkipVerification" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_SkipVerification" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_Execution" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_Execution" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_ControlThread" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_ControlThread" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_ControlEvidence" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_ControlEvidence" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_ControlPolicy" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_ControlPolicy" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_SerializationFormatter" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_SerializationFormatter" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_ControlDomainPolicy" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_ControlDomainPolicy" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_ControlPrincipal" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_ControlPrincipal" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_ControlAppDomain" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_ControlAppDomain" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_RemotingConfiguration" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_RemotingConfiguration" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_Infrastructure" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_Infrastructure" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_BindingRedirects" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_BindingRedirects" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="CreatePermission" Return_type="System.Security.IPermission">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Permissions.UIPermissionAttribute">
    <Properties>
      <Property Name="Window" Type="System.Security.Permissions.UIPermissionWindow" />
      <Property Name="Clipboard" Type="System.Security.Permissions.UIPermissionClipboard" />
      <Property Name="Action" Type="System.Security.Permissions.SecurityAction" />
      <Property Name="Unrestricted" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Window" Return_type="System.Security.Permissions.UIPermissionWindow">
        <Parameters />
      </Method>
      <Method Name="set_Window" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Permissions.UIPermissionWindow" />
        </Parameters>
      </Method>
      <Method Name="get_Clipboard" Return_type="System.Security.Permissions.UIPermissionClipboard">
        <Parameters />
      </Method>
      <Method Name="set_Clipboard" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Permissions.UIPermissionClipboard" />
        </Parameters>
      </Method>
      <Method Name="CreatePermission" Return_type="System.Security.IPermission">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Permissions.ZoneIdentityPermissionAttribute">
    <Properties>
      <Property Name="Zone" Type="System.Security.SecurityZone" />
      <Property Name="Action" Type="System.Security.Permissions.SecurityAction" />
      <Property Name="Unrestricted" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Zone" Return_type="System.Security.SecurityZone">
        <Parameters />
      </Method>
      <Method Name="set_Zone" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.SecurityZone" />
        </Parameters>
      </Method>
      <Method Name="CreatePermission" Return_type="System.Security.IPermission">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Permissions.StrongNameIdentityPermissionAttribute">
    <Properties>
      <Property Name="Name" Type="System.String" />
      <Property Name="Version" Type="System.String" />
      <Property Name="PublicKey" Type="System.String" />
      <Property Name="Action" Type="System.Security.Permissions.SecurityAction" />
      <Property Name="Unrestricted" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Name" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_Version" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Version" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_PublicKey" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_PublicKey" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="CreatePermission" Return_type="System.Security.IPermission">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Permissions.SiteIdentityPermissionAttribute">
    <Properties>
      <Property Name="Site" Type="System.String" />
      <Property Name="Action" Type="System.Security.Permissions.SecurityAction" />
      <Property Name="Unrestricted" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Site" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Site" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="CreatePermission" Return_type="System.Security.IPermission">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Permissions.UrlIdentityPermissionAttribute">
    <Properties>
      <Property Name="Url" Type="System.String" />
      <Property Name="Action" Type="System.Security.Permissions.SecurityAction" />
      <Property Name="Unrestricted" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Url" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Url" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="CreatePermission" Return_type="System.Security.IPermission">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Permissions.PublisherIdentityPermissionAttribute">
    <Properties>
      <Property Name="X509Certificate" Type="System.String" />
      <Property Name="CertFile" Type="System.String" />
      <Property Name="SignedFile" Type="System.String" />
      <Property Name="Action" Type="System.Security.Permissions.SecurityAction" />
      <Property Name="Unrestricted" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_X509Certificate" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_X509Certificate" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_CertFile" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_CertFile" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_SignedFile" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_SignedFile" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="CreatePermission" Return_type="System.Security.IPermission">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Permissions.IsolatedStoragePermissionAttribute">
    <Properties>
      <Property Name="UserQuota" Type="System.Int64" />
      <Property Name="UsageAllowed" Type="System.Security.Permissions.IsolatedStorageContainment" />
      <Property Name="Action" Type="System.Security.Permissions.SecurityAction" />
      <Property Name="Unrestricted" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="set_UserQuota" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="get_UserQuota" Return_type="System.Int64">
        <Parameters />
      </Method>
      <Method Name="set_UsageAllowed" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Permissions.IsolatedStorageContainment" />
        </Parameters>
      </Method>
      <Method Name="get_UsageAllowed" Return_type="System.Security.Permissions.IsolatedStorageContainment">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Permissions.IsolatedStorageFilePermissionAttribute">
    <Properties>
      <Property Name="UserQuota" Type="System.Int64" />
      <Property Name="UsageAllowed" Type="System.Security.Permissions.IsolatedStorageContainment" />
      <Property Name="Action" Type="System.Security.Permissions.SecurityAction" />
      <Property Name="Unrestricted" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="CreatePermission" Return_type="System.Security.IPermission">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Permissions.PermissionSetAttribute">
    <Properties>
      <Property Name="File" Type="System.String" />
      <Property Name="UnicodeEncoded" Type="System.Boolean" />
      <Property Name="Name" Type="System.String" />
      <Property Name="XML" Type="System.String" />
      <Property Name="Hex" Type="System.String" />
      <Property Name="Action" Type="System.Security.Permissions.SecurityAction" />
      <Property Name="Unrestricted" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_File" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_File" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_UnicodeEncoded" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_UnicodeEncoded" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Name" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_XML" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_XML" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_Hex" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Hex" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="CreatePermission" Return_type="System.Security.IPermission">
        <Parameters />
      </Method>
      <Method Name="CreatePermissionSet" Return_type="System.Security.PermissionSet">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Permissions.ReflectionPermission">
    <Properties>
      <Property Name="Flags" Type="System.Security.Permissions.ReflectionPermissionFlag" />
    </Properties>
    <Methods>
      <Method Name="set_Flags" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Permissions.ReflectionPermissionFlag" />
        </Parameters>
      </Method>
      <Method Name="get_Flags" Return_type="System.Security.Permissions.ReflectionPermissionFlag">
        <Parameters />
      </Method>
      <Method Name="IsUnrestricted" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Union" Return_type="System.Security.IPermission">
        <Parameters>
          <Parameter Name="other" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="IsSubsetOf" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="target" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="Intersect" Return_type="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Security.IPermission">
        <Parameters />
      </Method>
      <Method Name="ToXml" Return_type="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" Return_type="System.Void">
        <Parameters>
          <Parameter Name="esd" Type="System.Security.SecurityElement" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Permissions.PrincipalPermission">
    <Properties />
    <Methods>
      <Method Name="IsUnrestricted" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="IsSubsetOf" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="target" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="Intersect" Return_type="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="Union" Return_type="System.Security.IPermission">
        <Parameters>
          <Parameter Name="other" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Copy" Return_type="System.Security.IPermission">
        <Parameters />
      </Method>
      <Method Name="Demand" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="ToXml" Return_type="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" Return_type="System.Void">
        <Parameters>
          <Parameter Name="elem" Type="System.Security.SecurityElement" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Permissions.SecurityPermission">
    <Properties>
      <Property Name="Flags" Type="System.Security.Permissions.SecurityPermissionFlag" />
    </Properties>
    <Methods>
      <Method Name="set_Flags" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Permissions.SecurityPermissionFlag" />
        </Parameters>
      </Method>
      <Method Name="get_Flags" Return_type="System.Security.Permissions.SecurityPermissionFlag">
        <Parameters />
      </Method>
      <Method Name="IsSubsetOf" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="target" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="Union" Return_type="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="Intersect" Return_type="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Security.IPermission">
        <Parameters />
      </Method>
      <Method Name="IsUnrestricted" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="ToXml" Return_type="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" Return_type="System.Void">
        <Parameters>
          <Parameter Name="esd" Type="System.Security.SecurityElement" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Permissions.SiteIdentityPermission">
    <Properties>
      <Property Name="Site" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="set_Site" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_Site" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Copy" Return_type="System.Security.IPermission">
        <Parameters />
      </Method>
      <Method Name="IsSubsetOf" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="target" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="Intersect" Return_type="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="Union" Return_type="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="FromXml" Return_type="System.Void">
        <Parameters>
          <Parameter Name="esd" Type="System.Security.SecurityElement" />
        </Parameters>
      </Method>
      <Method Name="ToXml" Return_type="System.Security.SecurityElement">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Permissions.StrongNameIdentityPermission">
    <Properties>
      <Property Name="PublicKey" Type="System.Security.Permissions.StrongNamePublicKeyBlob" />
      <Property Name="Name" Type="System.String" />
      <Property Name="Version" Type="System.Version" />
    </Properties>
    <Methods>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_PublicKey" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Permissions.StrongNamePublicKeyBlob" />
        </Parameters>
      </Method>
      <Method Name="get_PublicKey" Return_type="System.Security.Permissions.StrongNamePublicKeyBlob">
        <Parameters />
      </Method>
      <Method Name="set_Name" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="set_Version" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Version" />
        </Parameters>
      </Method>
      <Method Name="get_Version" Return_type="System.Version">
        <Parameters />
      </Method>
      <Method Name="Copy" Return_type="System.Security.IPermission">
        <Parameters />
      </Method>
      <Method Name="IsSubsetOf" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="target" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="Intersect" Return_type="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="Union" Return_type="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="FromXml" Return_type="System.Void">
        <Parameters>
          <Parameter Name="e" Type="System.Security.SecurityElement" />
        </Parameters>
      </Method>
      <Method Name="ToXml" Return_type="System.Security.SecurityElement">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Permissions.StrongNamePublicKeyBlob">
    <Properties />
    <Methods>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Permissions.UIPermission">
    <Properties>
      <Property Name="Window" Type="System.Security.Permissions.UIPermissionWindow" />
      <Property Name="Clipboard" Type="System.Security.Permissions.UIPermissionClipboard" />
    </Properties>
    <Methods>
      <Method Name="set_Window" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Permissions.UIPermissionWindow" />
        </Parameters>
      </Method>
      <Method Name="get_Window" Return_type="System.Security.Permissions.UIPermissionWindow">
        <Parameters />
      </Method>
      <Method Name="set_Clipboard" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Permissions.UIPermissionClipboard" />
        </Parameters>
      </Method>
      <Method Name="get_Clipboard" Return_type="System.Security.Permissions.UIPermissionClipboard">
        <Parameters />
      </Method>
      <Method Name="IsUnrestricted" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="IsSubsetOf" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="target" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="Intersect" Return_type="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="Union" Return_type="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Security.IPermission">
        <Parameters />
      </Method>
      <Method Name="ToXml" Return_type="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" Return_type="System.Void">
        <Parameters>
          <Parameter Name="esd" Type="System.Security.SecurityElement" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Permissions.UrlIdentityPermission">
    <Properties>
      <Property Name="Url" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="set_Url" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_Url" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Copy" Return_type="System.Security.IPermission">
        <Parameters />
      </Method>
      <Method Name="IsSubsetOf" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="target" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="Intersect" Return_type="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="Union" Return_type="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="FromXml" Return_type="System.Void">
        <Parameters>
          <Parameter Name="esd" Type="System.Security.SecurityElement" />
        </Parameters>
      </Method>
      <Method Name="ToXml" Return_type="System.Security.SecurityElement">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Permissions.ZoneIdentityPermission">
    <Properties>
      <Property Name="SecurityZone" Type="System.Security.SecurityZone" />
    </Properties>
    <Methods>
      <Method Name="set_SecurityZone" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.SecurityZone" />
        </Parameters>
      </Method>
      <Method Name="get_SecurityZone" Return_type="System.Security.SecurityZone">
        <Parameters />
      </Method>
      <Method Name="Copy" Return_type="System.Security.IPermission">
        <Parameters />
      </Method>
      <Method Name="IsSubsetOf" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="target" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="Intersect" Return_type="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="Union" Return_type="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="ToXml" Return_type="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" Return_type="System.Void">
        <Parameters>
          <Parameter Name="esd" Type="System.Security.SecurityElement" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Permissions.GacIdentityPermissionAttribute">
    <Properties>
      <Property Name="Action" Type="System.Security.Permissions.SecurityAction" />
      <Property Name="Unrestricted" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="CreatePermission" Return_type="System.Security.IPermission">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Permissions.GacIdentityPermission">
    <Properties />
    <Methods>
      <Method Name="Copy" Return_type="System.Security.IPermission">
        <Parameters />
      </Method>
      <Method Name="IsSubsetOf" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="target" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="Intersect" Return_type="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="Union" Return_type="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="ToXml" Return_type="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" Return_type="System.Void">
        <Parameters>
          <Parameter Name="securityElement" Type="System.Security.SecurityElement" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Permissions.KeyContainerPermissionAccessEntry">
    <Properties>
      <Property Name="KeyStore" Type="System.String" />
      <Property Name="ProviderName" Type="System.String" />
      <Property Name="ProviderType" Type="System.Int32" />
      <Property Name="KeyContainerName" Type="System.String" />
      <Property Name="KeySpec" Type="System.Int32" />
      <Property Name="Flags" Type="System.Security.Permissions.KeyContainerPermissionFlags" />
    </Properties>
    <Methods>
      <Method Name="get_KeyStore" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_KeyStore" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_ProviderName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_ProviderName" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_ProviderType" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_ProviderType" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_KeyContainerName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_KeyContainerName" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_KeySpec" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_KeySpec" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_Flags" Return_type="System.Security.Permissions.KeyContainerPermissionFlags">
        <Parameters />
      </Method>
      <Method Name="set_Flags" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Permissions.KeyContainerPermissionFlags" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Permissions.KeyContainerPermissionAccessEntryCollection">
    <Properties>
      <Property Name="Item" Type="System.Security.Permissions.KeyContainerPermissionAccessEntry" />
      <Property Name="Count" Type="System.Int32" />
      <Property Name="IsSynchronized" Type="System.Boolean" />
      <Property Name="SyncRoot" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Item" Return_type="System.Security.Permissions.KeyContainerPermissionAccessEntry">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_Count" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Add" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="accessEntry" Type="System.Security.Permissions.KeyContainerPermissionAccessEntry" />
        </Parameters>
      </Method>
      <Method Name="Clear" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="IndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="accessEntry" Type="System.Security.Permissions.KeyContainerPermissionAccessEntry" />
        </Parameters>
      </Method>
      <Method Name="Remove" Return_type="System.Void">
        <Parameters>
          <Parameter Name="accessEntry" Type="System.Security.Permissions.KeyContainerPermissionAccessEntry" />
        </Parameters>
      </Method>
      <Method Name="GetEnumerator" Return_type="System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
        <Parameters />
      </Method>
      <Method Name="CopyTo" Return_type="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Security.Permissions.KeyContainerPermissionAccessEntry[]" />
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_IsSynchronized" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_SyncRoot" Return_type="System.Object">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Permissions.KeyContainerPermissionAccessEntryEnumerator">
    <Properties>
      <Property Name="Current" Type="System.Security.Permissions.KeyContainerPermissionAccessEntry" />
    </Properties>
    <Methods>
      <Method Name="get_Current" Return_type="System.Security.Permissions.KeyContainerPermissionAccessEntry">
        <Parameters />
      </Method>
      <Method Name="MoveNext" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Reset" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Permissions.KeyContainerPermission">
    <Properties>
      <Property Name="Flags" Type="System.Security.Permissions.KeyContainerPermissionFlags" />
      <Property Name="AccessEntries" Type="System.Security.Permissions.KeyContainerPermissionAccessEntryCollection" />
    </Properties>
    <Methods>
      <Method Name="get_Flags" Return_type="System.Security.Permissions.KeyContainerPermissionFlags">
        <Parameters />
      </Method>
      <Method Name="get_AccessEntries" Return_type="System.Security.Permissions.KeyContainerPermissionAccessEntryCollection">
        <Parameters />
      </Method>
      <Method Name="IsUnrestricted" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="IsSubsetOf" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="target" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="Intersect" Return_type="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="Union" Return_type="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Security.IPermission">
        <Parameters />
      </Method>
      <Method Name="ToXml" Return_type="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" Return_type="System.Void">
        <Parameters>
          <Parameter Name="securityElement" Type="System.Security.SecurityElement" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Permissions.PublisherIdentityPermission">
    <Properties>
      <Property Name="Certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
    </Properties>
    <Methods>
      <Method Name="set_Certificate" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        </Parameters>
      </Method>
      <Method Name="get_Certificate" Return_type="System.Security.Cryptography.X509Certificates.X509Certificate">
        <Parameters />
      </Method>
      <Method Name="Copy" Return_type="System.Security.IPermission">
        <Parameters />
      </Method>
      <Method Name="IsSubsetOf" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="target" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="Intersect" Return_type="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="Union" Return_type="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="FromXml" Return_type="System.Void">
        <Parameters>
          <Parameter Name="esd" Type="System.Security.SecurityElement" />
        </Parameters>
      </Method>
      <Method Name="ToXml" Return_type="System.Security.SecurityElement">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Permissions.RegistryPermission">
    <Properties />
    <Methods>
      <Method Name="SetPathList" Return_type="System.Void">
        <Parameters>
          <Parameter Name="access" Type="System.Security.Permissions.RegistryPermissionAccess" />
          <Parameter Name="pathList" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="AddPathList" Return_type="System.Void">
        <Parameters>
          <Parameter Name="access" Type="System.Security.Permissions.RegistryPermissionAccess" />
          <Parameter Name="pathList" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="AddPathList" Return_type="System.Void">
        <Parameters>
          <Parameter Name="access" Type="System.Security.Permissions.RegistryPermissionAccess" />
          <Parameter Name="control" Type="System.Security.AccessControl.AccessControlActions" />
          <Parameter Name="pathList" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetPathList" Return_type="System.String">
        <Parameters>
          <Parameter Name="access" Type="System.Security.Permissions.RegistryPermissionAccess" />
        </Parameters>
      </Method>
      <Method Name="IsUnrestricted" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="IsSubsetOf" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="target" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="Intersect" Return_type="System.Security.IPermission">
        <Parameters>
          <Parameter Name="target" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="Union" Return_type="System.Security.IPermission">
        <Parameters>
          <Parameter Name="other" Type="System.Security.IPermission" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Security.IPermission">
        <Parameters />
      </Method>
      <Method Name="ToXml" Return_type="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" Return_type="System.Void">
        <Parameters>
          <Parameter Name="esd" Type="System.Security.SecurityElement" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Claims.Claim">
    <Properties>
      <Property Name="Issuer" Type="System.String" />
      <Property Name="OriginalIssuer" Type="System.String" />
      <Property Name="Properties" Type="System.Collections.Generic.IDictionary`2[System.String,System.String]" />
      <Property Name="Subject" Type="System.Security.Claims.ClaimsIdentity" />
      <Property Name="Type" Type="System.String" />
      <Property Name="Value" Type="System.String" />
      <Property Name="ValueType" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_Issuer" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_OriginalIssuer" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Properties" Return_type="System.Collections.Generic.IDictionary`2[System.String,System.String]">
        <Parameters />
      </Method>
      <Method Name="get_Subject" Return_type="System.Security.Claims.ClaimsIdentity">
        <Parameters />
      </Method>
      <Method Name="get_Type" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ValueType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Clone" Return_type="System.Security.Claims.Claim">
        <Parameters />
      </Method>
      <Method Name="Clone" Return_type="System.Security.Claims.Claim">
        <Parameters>
          <Parameter Name="identity" Type="System.Security.Claims.ClaimsIdentity" />
        </Parameters>
      </Method>
      <Method Name="WriteTo" Return_type="System.Void">
        <Parameters>
          <Parameter Name="writer" Type="System.IO.BinaryWriter" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Claims.ClaimsIdentity">
    <Properties>
      <Property Name="AuthenticationType" Type="System.String" />
      <Property Name="IsAuthenticated" Type="System.Boolean" />
      <Property Name="Actor" Type="System.Security.Claims.ClaimsIdentity" />
      <Property Name="BootstrapContext" Type="System.Object" />
      <Property Name="Claims" Type="System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]" />
      <Property Name="Label" Type="System.String" />
      <Property Name="Name" Type="System.String" />
      <Property Name="NameClaimType" Type="System.String" />
      <Property Name="RoleClaimType" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_AuthenticationType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_IsAuthenticated" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Actor" Return_type="System.Security.Claims.ClaimsIdentity">
        <Parameters />
      </Method>
      <Method Name="set_Actor" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Claims.ClaimsIdentity" />
        </Parameters>
      </Method>
      <Method Name="get_BootstrapContext" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="set_BootstrapContext" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="get_Claims" Return_type="System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]">
        <Parameters />
      </Method>
      <Method Name="get_Label" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Label" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_NameClaimType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_RoleClaimType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Clone" Return_type="System.Security.Claims.ClaimsIdentity">
        <Parameters />
      </Method>
      <Method Name="AddClaim" Return_type="System.Void">
        <Parameters>
          <Parameter Name="claim" Type="System.Security.Claims.Claim" />
        </Parameters>
      </Method>
      <Method Name="AddClaims" Return_type="System.Void">
        <Parameters>
          <Parameter Name="claims" Type="System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]" />
        </Parameters>
      </Method>
      <Method Name="TryRemoveClaim" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="claim" Type="System.Security.Claims.Claim" />
        </Parameters>
      </Method>
      <Method Name="RemoveClaim" Return_type="System.Void">
        <Parameters>
          <Parameter Name="claim" Type="System.Security.Claims.Claim" />
        </Parameters>
      </Method>
      <Method Name="FindAll" Return_type="System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]">
        <Parameters>
          <Parameter Name="match" Type="System.Predicate`1[System.Security.Claims.Claim]" />
        </Parameters>
      </Method>
      <Method Name="FindAll" Return_type="System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]">
        <Parameters>
          <Parameter Name="type" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="HasClaim" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="match" Type="System.Predicate`1[System.Security.Claims.Claim]" />
        </Parameters>
      </Method>
      <Method Name="HasClaim" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="type" Type="System.String" />
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="FindFirst" Return_type="System.Security.Claims.Claim">
        <Parameters>
          <Parameter Name="match" Type="System.Predicate`1[System.Security.Claims.Claim]" />
        </Parameters>
      </Method>
      <Method Name="FindFirst" Return_type="System.Security.Claims.Claim">
        <Parameters>
          <Parameter Name="type" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="WriteTo" Return_type="System.Void">
        <Parameters>
          <Parameter Name="writer" Type="System.IO.BinaryWriter" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Claims.ClaimsPrincipal">
    <Properties>
      <Property Name="PrimaryIdentitySelector" Type="System.Func`2[System.Collections.Generic.IEnumerable`1[System.Security.Claims.ClaimsIdentity],System.Security.Claims.ClaimsIdentity]" />
      <Property Name="ClaimsPrincipalSelector" Type="System.Func`1[System.Security.Claims.ClaimsPrincipal]" />
      <Property Name="Claims" Type="System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]" />
      <Property Name="Current" Type="System.Security.Claims.ClaimsPrincipal" />
      <Property Name="Identities" Type="System.Collections.Generic.IEnumerable`1[System.Security.Claims.ClaimsIdentity]" />
      <Property Name="Identity" Type="System.Security.Principal.IIdentity" />
    </Properties>
    <Methods>
      <Method Name="AddIdentity" Return_type="System.Void">
        <Parameters>
          <Parameter Name="identity" Type="System.Security.Claims.ClaimsIdentity" />
        </Parameters>
      </Method>
      <Method Name="get_PrimaryIdentitySelector" Return_type="System.Func`2[System.Collections.Generic.IEnumerable`1[System.Security.Claims.ClaimsIdentity],System.Security.Claims.ClaimsIdentity]">
        <Parameters />
      </Method>
      <Method Name="set_PrimaryIdentitySelector" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Func`2[System.Collections.Generic.IEnumerable`1[System.Security.Claims.ClaimsIdentity],System.Security.Claims.ClaimsIdentity]" />
        </Parameters>
      </Method>
      <Method Name="get_ClaimsPrincipalSelector" Return_type="System.Func`1[System.Security.Claims.ClaimsPrincipal]">
        <Parameters />
      </Method>
      <Method Name="set_ClaimsPrincipalSelector" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Func`1[System.Security.Claims.ClaimsPrincipal]" />
        </Parameters>
      </Method>
      <Method Name="Clone" Return_type="System.Security.Claims.ClaimsPrincipal">
        <Parameters />
      </Method>
      <Method Name="AddIdentities" Return_type="System.Void">
        <Parameters>
          <Parameter Name="identities" Type="System.Collections.Generic.IEnumerable`1[System.Security.Claims.ClaimsIdentity]" />
        </Parameters>
      </Method>
      <Method Name="get_Claims" Return_type="System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]">
        <Parameters />
      </Method>
      <Method Name="get_Current" Return_type="System.Security.Claims.ClaimsPrincipal">
        <Parameters />
      </Method>
      <Method Name="FindAll" Return_type="System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]">
        <Parameters>
          <Parameter Name="match" Type="System.Predicate`1[System.Security.Claims.Claim]" />
        </Parameters>
      </Method>
      <Method Name="FindAll" Return_type="System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]">
        <Parameters>
          <Parameter Name="type" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="FindFirst" Return_type="System.Security.Claims.Claim">
        <Parameters>
          <Parameter Name="match" Type="System.Predicate`1[System.Security.Claims.Claim]" />
        </Parameters>
      </Method>
      <Method Name="FindFirst" Return_type="System.Security.Claims.Claim">
        <Parameters>
          <Parameter Name="type" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="HasClaim" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="match" Type="System.Predicate`1[System.Security.Claims.Claim]" />
        </Parameters>
      </Method>
      <Method Name="HasClaim" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="type" Type="System.String" />
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_Identities" Return_type="System.Collections.Generic.IEnumerable`1[System.Security.Claims.ClaimsIdentity]">
        <Parameters />
      </Method>
      <Method Name="get_Identity" Return_type="System.Security.Principal.IIdentity">
        <Parameters />
      </Method>
      <Method Name="IsInRole" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="role" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="WriteTo" Return_type="System.Void">
        <Parameters>
          <Parameter Name="writer" Type="System.IO.BinaryWriter" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Claims.ClaimTypes">
    <Properties />
    <Methods />
  </Type>
  <Type Full_Name="System.Security.Claims.ClaimValueTypes">
    <Properties />
    <Methods />
  </Type>
  <Type Full_Name="System.Security.Principal.GenericIdentity">
    <Properties>
      <Property Name="Claims" Type="System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]" />
      <Property Name="Name" Type="System.String" />
      <Property Name="AuthenticationType" Type="System.String" />
      <Property Name="IsAuthenticated" Type="System.Boolean" />
      <Property Name="Actor" Type="System.Security.Claims.ClaimsIdentity" />
      <Property Name="BootstrapContext" Type="System.Object" />
      <Property Name="Label" Type="System.String" />
      <Property Name="NameClaimType" Type="System.String" />
      <Property Name="RoleClaimType" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="Clone" Return_type="System.Security.Claims.ClaimsIdentity">
        <Parameters />
      </Method>
      <Method Name="get_Claims" Return_type="System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]">
        <Parameters />
      </Method>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_AuthenticationType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_IsAuthenticated" Return_type="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Principal.GenericPrincipal">
    <Properties>
      <Property Name="Identity" Type="System.Security.Principal.IIdentity" />
      <Property Name="Claims" Type="System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]" />
      <Property Name="Identities" Type="System.Collections.Generic.IEnumerable`1[System.Security.Claims.ClaimsIdentity]" />
    </Properties>
    <Methods>
      <Method Name="get_Identity" Return_type="System.Security.Principal.IIdentity">
        <Parameters />
      </Method>
      <Method Name="IsInRole" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="role" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Principal.WindowsIdentity">
    <Properties>
      <Property Name="AuthenticationType" Type="System.String" />
      <Property Name="ImpersonationLevel" Type="System.Security.Principal.TokenImpersonationLevel" />
      <Property Name="IsAuthenticated" Type="System.Boolean" />
      <Property Name="IsGuest" Type="System.Boolean" />
      <Property Name="IsSystem" Type="System.Boolean" />
      <Property Name="IsAnonymous" Type="System.Boolean" />
      <Property Name="Name" Type="System.String" />
      <Property Name="Owner" Type="System.Security.Principal.SecurityIdentifier" />
      <Property Name="User" Type="System.Security.Principal.SecurityIdentifier" />
      <Property Name="Groups" Type="System.Security.Principal.IdentityReferenceCollection" />
      <Property Name="Token" Type="System.IntPtr" />
      <Property Name="AccessToken" Type="Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" />
      <Property Name="UserClaims" Type="System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]" />
      <Property Name="DeviceClaims" Type="System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]" />
      <Property Name="Claims" Type="System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]" />
      <Property Name="Actor" Type="System.Security.Claims.ClaimsIdentity" />
      <Property Name="BootstrapContext" Type="System.Object" />
      <Property Name="Label" Type="System.String" />
      <Property Name="NameClaimType" Type="System.String" />
      <Property Name="RoleClaimType" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="GetCurrent" Return_type="System.Security.Principal.WindowsIdentity">
        <Parameters />
      </Method>
      <Method Name="GetCurrent" Return_type="System.Security.Principal.WindowsIdentity">
        <Parameters>
          <Parameter Name="ifImpersonating" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetCurrent" Return_type="System.Security.Principal.WindowsIdentity">
        <Parameters>
          <Parameter Name="desiredAccess" Type="System.Security.Principal.TokenAccessLevels" />
        </Parameters>
      </Method>
      <Method Name="GetAnonymous" Return_type="System.Security.Principal.WindowsIdentity">
        <Parameters />
      </Method>
      <Method Name="get_AuthenticationType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ImpersonationLevel" Return_type="System.Security.Principal.TokenImpersonationLevel">
        <Parameters />
      </Method>
      <Method Name="get_IsAuthenticated" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsGuest" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSystem" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsAnonymous" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Owner" Return_type="System.Security.Principal.SecurityIdentifier">
        <Parameters />
      </Method>
      <Method Name="get_User" Return_type="System.Security.Principal.SecurityIdentifier">
        <Parameters />
      </Method>
      <Method Name="get_Groups" Return_type="System.Security.Principal.IdentityReferenceCollection">
        <Parameters />
      </Method>
      <Method Name="get_Token" Return_type="System.IntPtr">
        <Parameters />
      </Method>
      <Method Name="RunImpersonated" Return_type="System.Void">
        <Parameters>
          <Parameter Name="safeAccessTokenHandle" Type="Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" />
          <Parameter Name="action" Type="System.Action" />
        </Parameters>
      </Method>
      <Method Name="RunImpersonated" Return_type="T">
        <Parameters>
          <Parameter Name="safeAccessTokenHandle" Type="Microsoft.Win32.SafeHandles.SafeAccessTokenHandle" />
          <Parameter Name="func" Type="System.Func`1[T]" />
        </Parameters>
      </Method>
      <Method Name="Impersonate" Return_type="System.Security.Principal.WindowsImpersonationContext">
        <Parameters />
      </Method>
      <Method Name="Impersonate" Return_type="System.Security.Principal.WindowsImpersonationContext">
        <Parameters>
          <Parameter Name="userToken" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="Dispose" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_AccessToken" Return_type="Microsoft.Win32.SafeHandles.SafeAccessTokenHandle">
        <Parameters />
      </Method>
      <Method Name="Clone" Return_type="System.Security.Claims.ClaimsIdentity">
        <Parameters />
      </Method>
      <Method Name="get_UserClaims" Return_type="System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]">
        <Parameters />
      </Method>
      <Method Name="get_DeviceClaims" Return_type="System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]">
        <Parameters />
      </Method>
      <Method Name="get_Claims" Return_type="System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Principal.WindowsImpersonationContext">
    <Properties />
    <Methods>
      <Method Name="Undo" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Dispose" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Principal.WindowsPrincipal">
    <Properties>
      <Property Name="Identity" Type="System.Security.Principal.IIdentity" />
      <Property Name="UserClaims" Type="System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]" />
      <Property Name="DeviceClaims" Type="System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]" />
      <Property Name="Claims" Type="System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]" />
      <Property Name="Identities" Type="System.Collections.Generic.IEnumerable`1[System.Security.Claims.ClaimsIdentity]" />
    </Properties>
    <Methods>
      <Method Name="get_Identity" Return_type="System.Security.Principal.IIdentity">
        <Parameters />
      </Method>
      <Method Name="IsInRole" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="role" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_UserClaims" Return_type="System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]">
        <Parameters />
      </Method>
      <Method Name="get_DeviceClaims" Return_type="System.Collections.Generic.IEnumerable`1[System.Security.Claims.Claim]">
        <Parameters />
      </Method>
      <Method Name="IsInRole" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="role" Type="System.Security.Principal.WindowsBuiltInRole" />
        </Parameters>
      </Method>
      <Method Name="IsInRole" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="rid" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IsInRole" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="sid" Type="System.Security.Principal.SecurityIdentifier" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Principal.IdentityReference">
    <Properties>
      <Property Name="Value" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_Value" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="IsValidTargetType" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="targetType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="Translate" Return_type="System.Security.Principal.IdentityReference">
        <Parameters>
          <Parameter Name="targetType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="op_Equality" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="left" Type="System.Security.Principal.IdentityReference" />
          <Parameter Name="right" Type="System.Security.Principal.IdentityReference" />
        </Parameters>
      </Method>
      <Method Name="op_Inequality" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="left" Type="System.Security.Principal.IdentityReference" />
          <Parameter Name="right" Type="System.Security.Principal.IdentityReference" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Principal.IdentityReferenceCollection">
    <Properties>
      <Property Name="Count" Type="System.Int32" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="Item" Type="System.Security.Principal.IdentityReference" />
    </Properties>
    <Methods>
      <Method Name="CopyTo" Return_type="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Security.Principal.IdentityReference[]" />
          <Parameter Name="offset" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_Count" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_IsReadOnly" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Add" Return_type="System.Void">
        <Parameters>
          <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        </Parameters>
      </Method>
      <Method Name="Remove" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        </Parameters>
      </Method>
      <Method Name="Clear" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Contains" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="identity" Type="System.Security.Principal.IdentityReference" />
        </Parameters>
      </Method>
      <Method Name="GetEnumerator" Return_type="System.Collections.Generic.IEnumerator`1[System.Security.Principal.IdentityReference]">
        <Parameters />
      </Method>
      <Method Name="get_Item" Return_type="System.Security.Principal.IdentityReference">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="set_Item" Return_type="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="value" Type="System.Security.Principal.IdentityReference" />
        </Parameters>
      </Method>
      <Method Name="Translate" Return_type="System.Security.Principal.IdentityReferenceCollection">
        <Parameters>
          <Parameter Name="targetType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="Translate" Return_type="System.Security.Principal.IdentityReferenceCollection">
        <Parameters>
          <Parameter Name="targetType" Type="System.Type" />
          <Parameter Name="forceSuccess" Type="System.Boolean" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Principal.NTAccount">
    <Properties>
      <Property Name="Value" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_Value" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="IsValidTargetType" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="targetType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="Translate" Return_type="System.Security.Principal.IdentityReference">
        <Parameters>
          <Parameter Name="targetType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="op_Equality" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="left" Type="System.Security.Principal.NTAccount" />
          <Parameter Name="right" Type="System.Security.Principal.NTAccount" />
        </Parameters>
      </Method>
      <Method Name="op_Inequality" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="left" Type="System.Security.Principal.NTAccount" />
          <Parameter Name="right" Type="System.Security.Principal.NTAccount" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Principal.SecurityIdentifier">
    <Properties>
      <Property Name="BinaryLength" Type="System.Int32" />
      <Property Name="AccountDomainSid" Type="System.Security.Principal.SecurityIdentifier" />
      <Property Name="Value" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="Translate" Return_type="System.Security.Principal.IdentityReference">
        <Parameters>
          <Parameter Name="targetType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="op_Equality" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="left" Type="System.Security.Principal.SecurityIdentifier" />
          <Parameter Name="right" Type="System.Security.Principal.SecurityIdentifier" />
        </Parameters>
      </Method>
      <Method Name="get_BinaryLength" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_AccountDomainSid" Return_type="System.Security.Principal.SecurityIdentifier">
        <Parameters />
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="sid" Type="System.Security.Principal.SecurityIdentifier" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="IsValidTargetType" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="targetType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="IsAccountSid" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="op_Inequality" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="left" Type="System.Security.Principal.SecurityIdentifier" />
          <Parameter Name="right" Type="System.Security.Principal.SecurityIdentifier" />
        </Parameters>
      </Method>
      <Method Name="CompareTo" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="sid" Type="System.Security.Principal.SecurityIdentifier" />
        </Parameters>
      </Method>
      <Method Name="IsWellKnown" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="type" Type="System.Security.Principal.WellKnownSidType" />
        </Parameters>
      </Method>
      <Method Name="GetBinaryForm" Return_type="System.Void">
        <Parameters>
          <Parameter Name="binaryForm" Type="System.Byte[]" />
          <Parameter Name="offset" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IsEqualDomainSid" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="sid" Type="System.Security.Principal.SecurityIdentifier" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Principal.IdentityNotMappedException">
    <Properties>
      <Property Name="UnmappedIdentities" Type="System.Security.Principal.IdentityReferenceCollection" />
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="GetObjectData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="serializationInfo" Type="System.Runtime.Serialization.SerializationInfo" />
          <Parameter Name="streamingContext" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
      <Method Name="get_UnmappedIdentities" Return_type="System.Security.Principal.IdentityReferenceCollection">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Policy.AllMembershipCondition">
    <Properties />
    <Methods>
      <Method Name="ToXml" Return_type="System.Security.SecurityElement">
        <Parameters>
          <Parameter Name="level" Type="System.Security.Policy.PolicyLevel" />
        </Parameters>
      </Method>
      <Method Name="FromXml" Return_type="System.Void">
        <Parameters>
          <Parameter Name="e" Type="System.Security.SecurityElement" />
          <Parameter Name="level" Type="System.Security.Policy.PolicyLevel" />
        </Parameters>
      </Method>
      <Method Name="Check" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Security.Policy.IMembershipCondition">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="ToXml" Return_type="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" Return_type="System.Void">
        <Parameters>
          <Parameter Name="e" Type="System.Security.SecurityElement" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Policy.ApplicationDirectory">
    <Properties>
      <Property Name="Directory" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_Directory" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Clone" Return_type="System.Security.Policy.EvidenceBase">
        <Parameters />
      </Method>
      <Method Name="Copy" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Policy.ApplicationDirectoryMembershipCondition">
    <Properties />
    <Methods>
      <Method Name="Check" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Security.Policy.IMembershipCondition">
        <Parameters />
      </Method>
      <Method Name="ToXml" Return_type="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" Return_type="System.Void">
        <Parameters>
          <Parameter Name="e" Type="System.Security.SecurityElement" />
        </Parameters>
      </Method>
      <Method Name="ToXml" Return_type="System.Security.SecurityElement">
        <Parameters>
          <Parameter Name="level" Type="System.Security.Policy.PolicyLevel" />
        </Parameters>
      </Method>
      <Method Name="FromXml" Return_type="System.Void">
        <Parameters>
          <Parameter Name="e" Type="System.Security.SecurityElement" />
          <Parameter Name="level" Type="System.Security.Policy.PolicyLevel" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Policy.ApplicationSecurityInfo">
    <Properties>
      <Property Name="ApplicationId" Type="System.ApplicationId" />
      <Property Name="DeploymentId" Type="System.ApplicationId" />
      <Property Name="DefaultRequestSet" Type="System.Security.PermissionSet" />
      <Property Name="ApplicationEvidence" Type="System.Security.Policy.Evidence" />
    </Properties>
    <Methods>
      <Method Name="get_ApplicationId" Return_type="System.ApplicationId">
        <Parameters />
      </Method>
      <Method Name="set_ApplicationId" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.ApplicationId" />
        </Parameters>
      </Method>
      <Method Name="get_DeploymentId" Return_type="System.ApplicationId">
        <Parameters />
      </Method>
      <Method Name="set_DeploymentId" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.ApplicationId" />
        </Parameters>
      </Method>
      <Method Name="get_DefaultRequestSet" Return_type="System.Security.PermissionSet">
        <Parameters />
      </Method>
      <Method Name="set_DefaultRequestSet" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.PermissionSet" />
        </Parameters>
      </Method>
      <Method Name="get_ApplicationEvidence" Return_type="System.Security.Policy.Evidence">
        <Parameters />
      </Method>
      <Method Name="set_ApplicationEvidence" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Policy.ApplicationSecurityManager">
    <Properties>
      <Property Name="UserApplicationTrusts" Type="System.Security.Policy.ApplicationTrustCollection" />
      <Property Name="ApplicationTrustManager" Type="System.Security.Policy.IApplicationTrustManager" />
    </Properties>
    <Methods>
      <Method Name="DetermineApplicationTrust" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="activationContext" Type="System.ActivationContext" />
          <Parameter Name="context" Type="System.Security.Policy.TrustManagerContext" />
        </Parameters>
      </Method>
      <Method Name="get_UserApplicationTrusts" Return_type="System.Security.Policy.ApplicationTrustCollection">
        <Parameters />
      </Method>
      <Method Name="get_ApplicationTrustManager" Return_type="System.Security.Policy.IApplicationTrustManager">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Policy.ApplicationTrust">
    <Properties>
      <Property Name="ApplicationIdentity" Type="System.ApplicationIdentity" />
      <Property Name="DefaultGrantSet" Type="System.Security.Policy.PolicyStatement" />
      <Property Name="FullTrustAssemblies" Type="System.Collections.Generic.IList`1[System.Security.Policy.StrongName]" />
      <Property Name="IsApplicationTrustedToRun" Type="System.Boolean" />
      <Property Name="Persist" Type="System.Boolean" />
      <Property Name="ExtraInfo" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="ToXml" Return_type="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" Return_type="System.Void">
        <Parameters>
          <Parameter Name="element" Type="System.Security.SecurityElement" />
        </Parameters>
      </Method>
      <Method Name="get_ApplicationIdentity" Return_type="System.ApplicationIdentity">
        <Parameters />
      </Method>
      <Method Name="set_ApplicationIdentity" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.ApplicationIdentity" />
        </Parameters>
      </Method>
      <Method Name="get_DefaultGrantSet" Return_type="System.Security.Policy.PolicyStatement">
        <Parameters />
      </Method>
      <Method Name="set_DefaultGrantSet" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Policy.PolicyStatement" />
        </Parameters>
      </Method>
      <Method Name="get_FullTrustAssemblies" Return_type="System.Collections.Generic.IList`1[System.Security.Policy.StrongName]">
        <Parameters />
      </Method>
      <Method Name="get_IsApplicationTrustedToRun" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_IsApplicationTrustedToRun" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_Persist" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_Persist" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_ExtraInfo" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="set_ExtraInfo" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Clone" Return_type="System.Security.Policy.EvidenceBase">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Policy.ApplicationTrustCollection">
    <Properties>
      <Property Name="Count" Type="System.Int32" />
      <Property Name="Item" Type="System.Security.Policy.ApplicationTrust" />
      <Property Name="Item" Type="System.Security.Policy.ApplicationTrust" />
      <Property Name="IsSynchronized" Type="System.Boolean" />
      <Property Name="SyncRoot" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Count" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_Item" Return_type="System.Security.Policy.ApplicationTrust">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_Item" Return_type="System.Security.Policy.ApplicationTrust">
        <Parameters>
          <Parameter Name="appFullName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Add" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="trust" Type="System.Security.Policy.ApplicationTrust" />
        </Parameters>
      </Method>
      <Method Name="AddRange" Return_type="System.Void">
        <Parameters>
          <Parameter Name="trusts" Type="System.Security.Policy.ApplicationTrust[]" />
        </Parameters>
      </Method>
      <Method Name="AddRange" Return_type="System.Void">
        <Parameters>
          <Parameter Name="trusts" Type="System.Security.Policy.ApplicationTrustCollection" />
        </Parameters>
      </Method>
      <Method Name="Find" Return_type="System.Security.Policy.ApplicationTrustCollection">
        <Parameters>
          <Parameter Name="applicationIdentity" Type="System.ApplicationIdentity" />
          <Parameter Name="versionMatch" Type="System.Security.Policy.ApplicationVersionMatch" />
        </Parameters>
      </Method>
      <Method Name="Remove" Return_type="System.Void">
        <Parameters>
          <Parameter Name="applicationIdentity" Type="System.ApplicationIdentity" />
          <Parameter Name="versionMatch" Type="System.Security.Policy.ApplicationVersionMatch" />
        </Parameters>
      </Method>
      <Method Name="Remove" Return_type="System.Void">
        <Parameters>
          <Parameter Name="trust" Type="System.Security.Policy.ApplicationTrust" />
        </Parameters>
      </Method>
      <Method Name="RemoveRange" Return_type="System.Void">
        <Parameters>
          <Parameter Name="trusts" Type="System.Security.Policy.ApplicationTrust[]" />
        </Parameters>
      </Method>
      <Method Name="RemoveRange" Return_type="System.Void">
        <Parameters>
          <Parameter Name="trusts" Type="System.Security.Policy.ApplicationTrustCollection" />
        </Parameters>
      </Method>
      <Method Name="Clear" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="GetEnumerator" Return_type="System.Security.Policy.ApplicationTrustEnumerator">
        <Parameters />
      </Method>
      <Method Name="CopyTo" Return_type="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Security.Policy.ApplicationTrust[]" />
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_IsSynchronized" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_SyncRoot" Return_type="System.Object">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Policy.ApplicationTrustEnumerator">
    <Properties>
      <Property Name="Current" Type="System.Security.Policy.ApplicationTrust" />
    </Properties>
    <Methods>
      <Method Name="get_Current" Return_type="System.Security.Policy.ApplicationTrust">
        <Parameters />
      </Method>
      <Method Name="MoveNext" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Reset" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Policy.CodeGroup">
    <Properties>
      <Property Name="Children" Type="System.Collections.IList" />
      <Property Name="MembershipCondition" Type="System.Security.Policy.IMembershipCondition" />
      <Property Name="PolicyStatement" Type="System.Security.Policy.PolicyStatement" />
      <Property Name="Name" Type="System.String" />
      <Property Name="Description" Type="System.String" />
      <Property Name="PermissionSetName" Type="System.String" />
      <Property Name="AttributeString" Type="System.String" />
      <Property Name="MergeLogic" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="FromXml" Return_type="System.Void">
        <Parameters>
          <Parameter Name="e" Type="System.Security.SecurityElement" />
          <Parameter Name="level" Type="System.Security.Policy.PolicyLevel" />
        </Parameters>
      </Method>
      <Method Name="AddChild" Return_type="System.Void">
        <Parameters>
          <Parameter Name="group" Type="System.Security.Policy.CodeGroup" />
        </Parameters>
      </Method>
      <Method Name="RemoveChild" Return_type="System.Void">
        <Parameters>
          <Parameter Name="group" Type="System.Security.Policy.CodeGroup" />
        </Parameters>
      </Method>
      <Method Name="get_Children" Return_type="System.Collections.IList">
        <Parameters />
      </Method>
      <Method Name="set_Children" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Collections.IList" />
        </Parameters>
      </Method>
      <Method Name="get_MembershipCondition" Return_type="System.Security.Policy.IMembershipCondition">
        <Parameters />
      </Method>
      <Method Name="set_MembershipCondition" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Policy.IMembershipCondition" />
        </Parameters>
      </Method>
      <Method Name="get_PolicyStatement" Return_type="System.Security.Policy.PolicyStatement">
        <Parameters />
      </Method>
      <Method Name="set_PolicyStatement" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Policy.PolicyStatement" />
        </Parameters>
      </Method>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Name" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_Description" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Description" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Resolve" Return_type="System.Security.Policy.PolicyStatement">
        <Parameters>
          <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="ResolveMatchingCodeGroups" Return_type="System.Security.Policy.CodeGroup">
        <Parameters>
          <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Security.Policy.CodeGroup">
        <Parameters />
      </Method>
      <Method Name="get_PermissionSetName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_AttributeString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_MergeLogic" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="ToXml" Return_type="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" Return_type="System.Void">
        <Parameters>
          <Parameter Name="e" Type="System.Security.SecurityElement" />
        </Parameters>
      </Method>
      <Method Name="ToXml" Return_type="System.Security.SecurityElement">
        <Parameters>
          <Parameter Name="level" Type="System.Security.Policy.PolicyLevel" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="cg" Type="System.Security.Policy.CodeGroup" />
          <Parameter Name="compareChildren" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Policy.Evidence">
    <Properties>
      <Property Name="Locked" Type="System.Boolean" />
      <Property Name="Count" Type="System.Int32" />
      <Property Name="SyncRoot" Type="System.Object" />
      <Property Name="IsSynchronized" Type="System.Boolean" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="AddHost" Return_type="System.Void">
        <Parameters>
          <Parameter Name="id" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="AddAssembly" Return_type="System.Void">
        <Parameters>
          <Parameter Name="id" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="AddAssemblyEvidence" Return_type="System.Void">
        <Parameters>
          <Parameter Name="evidence" Type="T" />
        </Parameters>
      </Method>
      <Method Name="AddHostEvidence" Return_type="System.Void">
        <Parameters>
          <Parameter Name="evidence" Type="T" />
        </Parameters>
      </Method>
      <Method Name="get_Locked" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_Locked" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="Merge" Return_type="System.Void">
        <Parameters>
          <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="CopyTo" Return_type="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Array" />
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetHostEnumerator" Return_type="System.Collections.IEnumerator">
        <Parameters />
      </Method>
      <Method Name="GetAssemblyEnumerator" Return_type="System.Collections.IEnumerator">
        <Parameters />
      </Method>
      <Method Name="GetEnumerator" Return_type="System.Collections.IEnumerator">
        <Parameters />
      </Method>
      <Method Name="GetAssemblyEvidence" Return_type="T">
        <Parameters />
      </Method>
      <Method Name="GetHostEvidence" Return_type="T">
        <Parameters />
      </Method>
      <Method Name="get_Count" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_SyncRoot" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_IsSynchronized" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsReadOnly" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Clone" Return_type="System.Security.Policy.Evidence">
        <Parameters />
      </Method>
      <Method Name="Clear" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="RemoveType" Return_type="System.Void">
        <Parameters>
          <Parameter Name="t" Type="System.Type" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Policy.EvidenceBase">
    <Properties />
    <Methods>
      <Method Name="Clone" Return_type="System.Security.Policy.EvidenceBase">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Policy.FileCodeGroup">
    <Properties>
      <Property Name="MergeLogic" Type="System.String" />
      <Property Name="PermissionSetName" Type="System.String" />
      <Property Name="AttributeString" Type="System.String" />
      <Property Name="Children" Type="System.Collections.IList" />
      <Property Name="MembershipCondition" Type="System.Security.Policy.IMembershipCondition" />
      <Property Name="PolicyStatement" Type="System.Security.Policy.PolicyStatement" />
      <Property Name="Name" Type="System.String" />
      <Property Name="Description" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="Resolve" Return_type="System.Security.Policy.PolicyStatement">
        <Parameters>
          <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="ResolveMatchingCodeGroups" Return_type="System.Security.Policy.CodeGroup">
        <Parameters>
          <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Security.Policy.CodeGroup">
        <Parameters />
      </Method>
      <Method Name="get_MergeLogic" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_PermissionSetName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_AttributeString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Policy.FirstMatchCodeGroup">
    <Properties>
      <Property Name="MergeLogic" Type="System.String" />
      <Property Name="Children" Type="System.Collections.IList" />
      <Property Name="MembershipCondition" Type="System.Security.Policy.IMembershipCondition" />
      <Property Name="PolicyStatement" Type="System.Security.Policy.PolicyStatement" />
      <Property Name="Name" Type="System.String" />
      <Property Name="Description" Type="System.String" />
      <Property Name="PermissionSetName" Type="System.String" />
      <Property Name="AttributeString" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="Resolve" Return_type="System.Security.Policy.PolicyStatement">
        <Parameters>
          <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="ResolveMatchingCodeGroups" Return_type="System.Security.Policy.CodeGroup">
        <Parameters>
          <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Security.Policy.CodeGroup">
        <Parameters />
      </Method>
      <Method Name="get_MergeLogic" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Policy.TrustManagerContext">
    <Properties>
      <Property Name="UIContext" Type="System.Security.Policy.TrustManagerUIContext" />
      <Property Name="NoPrompt" Type="System.Boolean" />
      <Property Name="IgnorePersistedDecision" Type="System.Boolean" />
      <Property Name="KeepAlive" Type="System.Boolean" />
      <Property Name="Persist" Type="System.Boolean" />
      <Property Name="PreviousApplicationIdentity" Type="System.ApplicationIdentity" />
    </Properties>
    <Methods>
      <Method Name="get_UIContext" Return_type="System.Security.Policy.TrustManagerUIContext">
        <Parameters />
      </Method>
      <Method Name="set_UIContext" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Policy.TrustManagerUIContext" />
        </Parameters>
      </Method>
      <Method Name="get_NoPrompt" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_NoPrompt" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_IgnorePersistedDecision" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_IgnorePersistedDecision" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_KeepAlive" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_KeepAlive" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_Persist" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_Persist" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_PreviousApplicationIdentity" Return_type="System.ApplicationIdentity">
        <Parameters />
      </Method>
      <Method Name="set_PreviousApplicationIdentity" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.ApplicationIdentity" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Policy.CodeConnectAccess">
    <Properties>
      <Property Name="Scheme" Type="System.String" />
      <Property Name="Port" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="CreateOriginSchemeAccess" Return_type="System.Security.Policy.CodeConnectAccess">
        <Parameters>
          <Parameter Name="allowPort" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="CreateAnySchemeAccess" Return_type="System.Security.Policy.CodeConnectAccess">
        <Parameters>
          <Parameter Name="allowPort" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_Scheme" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Port" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Policy.NetCodeGroup">
    <Properties>
      <Property Name="MergeLogic" Type="System.String" />
      <Property Name="PermissionSetName" Type="System.String" />
      <Property Name="AttributeString" Type="System.String" />
      <Property Name="Children" Type="System.Collections.IList" />
      <Property Name="MembershipCondition" Type="System.Security.Policy.IMembershipCondition" />
      <Property Name="PolicyStatement" Type="System.Security.Policy.PolicyStatement" />
      <Property Name="Name" Type="System.String" />
      <Property Name="Description" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="ResetConnectAccess" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="AddConnectAccess" Return_type="System.Void">
        <Parameters>
          <Parameter Name="originScheme" Type="System.String" />
          <Parameter Name="connectAccess" Type="System.Security.Policy.CodeConnectAccess" />
        </Parameters>
      </Method>
      <Method Name="GetConnectAccessRules" Return_type="System.Collections.DictionaryEntry[]">
        <Parameters />
      </Method>
      <Method Name="Resolve" Return_type="System.Security.Policy.PolicyStatement">
        <Parameters>
          <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="ResolveMatchingCodeGroups" Return_type="System.Security.Policy.CodeGroup">
        <Parameters>
          <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Security.Policy.CodeGroup">
        <Parameters />
      </Method>
      <Method Name="get_MergeLogic" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_PermissionSetName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_AttributeString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Policy.PermissionRequestEvidence">
    <Properties>
      <Property Name="RequestedPermissions" Type="System.Security.PermissionSet" />
      <Property Name="OptionalPermissions" Type="System.Security.PermissionSet" />
      <Property Name="DeniedPermissions" Type="System.Security.PermissionSet" />
    </Properties>
    <Methods>
      <Method Name="get_RequestedPermissions" Return_type="System.Security.PermissionSet">
        <Parameters />
      </Method>
      <Method Name="get_OptionalPermissions" Return_type="System.Security.PermissionSet">
        <Parameters />
      </Method>
      <Method Name="get_DeniedPermissions" Return_type="System.Security.PermissionSet">
        <Parameters />
      </Method>
      <Method Name="Clone" Return_type="System.Security.Policy.EvidenceBase">
        <Parameters />
      </Method>
      <Method Name="Copy" Return_type="System.Security.Policy.PermissionRequestEvidence">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Policy.PolicyException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Security.Policy.PolicyLevel">
    <Properties>
      <Property Name="Label" Type="System.String" />
      <Property Name="Type" Type="System.Security.PolicyLevelType" />
      <Property Name="StoreLocation" Type="System.String" />
      <Property Name="RootCodeGroup" Type="System.Security.Policy.CodeGroup" />
      <Property Name="NamedPermissionSets" Type="System.Collections.IList" />
      <Property Name="FullTrustAssemblies" Type="System.Collections.IList" />
    </Properties>
    <Methods>
      <Method Name="GetNamedPermissionSet" Return_type="System.Security.NamedPermissionSet">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Resolve" Return_type="System.Security.Policy.PolicyStatement">
        <Parameters>
          <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="FromXml" Return_type="System.Void">
        <Parameters>
          <Parameter Name="e" Type="System.Security.SecurityElement" />
        </Parameters>
      </Method>
      <Method Name="CreateAppDomainLevel" Return_type="System.Security.Policy.PolicyLevel">
        <Parameters />
      </Method>
      <Method Name="get_Label" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Type" Return_type="System.Security.PolicyLevelType">
        <Parameters />
      </Method>
      <Method Name="get_StoreLocation" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_RootCodeGroup" Return_type="System.Security.Policy.CodeGroup">
        <Parameters />
      </Method>
      <Method Name="set_RootCodeGroup" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Policy.CodeGroup" />
        </Parameters>
      </Method>
      <Method Name="get_NamedPermissionSets" Return_type="System.Collections.IList">
        <Parameters />
      </Method>
      <Method Name="ResolveMatchingCodeGroups" Return_type="System.Security.Policy.CodeGroup">
        <Parameters>
          <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="AddFullTrustAssembly" Return_type="System.Void">
        <Parameters>
          <Parameter Name="sn" Type="System.Security.Policy.StrongName" />
        </Parameters>
      </Method>
      <Method Name="AddFullTrustAssembly" Return_type="System.Void">
        <Parameters>
          <Parameter Name="snMC" Type="System.Security.Policy.StrongNameMembershipCondition" />
        </Parameters>
      </Method>
      <Method Name="RemoveFullTrustAssembly" Return_type="System.Void">
        <Parameters>
          <Parameter Name="sn" Type="System.Security.Policy.StrongName" />
        </Parameters>
      </Method>
      <Method Name="RemoveFullTrustAssembly" Return_type="System.Void">
        <Parameters>
          <Parameter Name="snMC" Type="System.Security.Policy.StrongNameMembershipCondition" />
        </Parameters>
      </Method>
      <Method Name="get_FullTrustAssemblies" Return_type="System.Collections.IList">
        <Parameters />
      </Method>
      <Method Name="AddNamedPermissionSet" Return_type="System.Void">
        <Parameters>
          <Parameter Name="permSet" Type="System.Security.NamedPermissionSet" />
        </Parameters>
      </Method>
      <Method Name="RemoveNamedPermissionSet" Return_type="System.Security.NamedPermissionSet">
        <Parameters>
          <Parameter Name="permSet" Type="System.Security.NamedPermissionSet" />
        </Parameters>
      </Method>
      <Method Name="RemoveNamedPermissionSet" Return_type="System.Security.NamedPermissionSet">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ChangeNamedPermissionSet" Return_type="System.Security.NamedPermissionSet">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="pSet" Type="System.Security.PermissionSet" />
        </Parameters>
      </Method>
      <Method Name="Recover" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Reset" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="ToXml" Return_type="System.Security.SecurityElement">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Policy.PolicyStatement">
    <Properties>
      <Property Name="PermissionSet" Type="System.Security.PermissionSet" />
      <Property Name="Attributes" Type="System.Security.Policy.PolicyStatementAttribute" />
      <Property Name="AttributeString" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_PermissionSet" Return_type="System.Security.PermissionSet">
        <Parameters />
      </Method>
      <Method Name="set_PermissionSet" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.PermissionSet" />
        </Parameters>
      </Method>
      <Method Name="get_Attributes" Return_type="System.Security.Policy.PolicyStatementAttribute">
        <Parameters />
      </Method>
      <Method Name="set_Attributes" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Policy.PolicyStatementAttribute" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Security.Policy.PolicyStatement">
        <Parameters />
      </Method>
      <Method Name="get_AttributeString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="ToXml" Return_type="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" Return_type="System.Void">
        <Parameters>
          <Parameter Name="et" Type="System.Security.SecurityElement" />
        </Parameters>
      </Method>
      <Method Name="ToXml" Return_type="System.Security.SecurityElement">
        <Parameters>
          <Parameter Name="level" Type="System.Security.Policy.PolicyLevel" />
        </Parameters>
      </Method>
      <Method Name="FromXml" Return_type="System.Void">
        <Parameters>
          <Parameter Name="et" Type="System.Security.SecurityElement" />
          <Parameter Name="level" Type="System.Security.Policy.PolicyLevel" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Policy.Site">
    <Properties>
      <Property Name="Name" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="CreateFromUrl" Return_type="System.Security.Policy.Site">
        <Parameters>
          <Parameter Name="url" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="CreateIdentityPermission" Return_type="System.Security.IPermission">
        <Parameters>
          <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Clone" Return_type="System.Security.Policy.EvidenceBase">
        <Parameters />
      </Method>
      <Method Name="Copy" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Policy.SiteMembershipCondition">
    <Properties>
      <Property Name="Site" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="set_Site" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_Site" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Check" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Security.Policy.IMembershipCondition">
        <Parameters />
      </Method>
      <Method Name="ToXml" Return_type="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" Return_type="System.Void">
        <Parameters>
          <Parameter Name="e" Type="System.Security.SecurityElement" />
        </Parameters>
      </Method>
      <Method Name="ToXml" Return_type="System.Security.SecurityElement">
        <Parameters>
          <Parameter Name="level" Type="System.Security.Policy.PolicyLevel" />
        </Parameters>
      </Method>
      <Method Name="FromXml" Return_type="System.Void">
        <Parameters>
          <Parameter Name="e" Type="System.Security.SecurityElement" />
          <Parameter Name="level" Type="System.Security.Policy.PolicyLevel" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Policy.StrongName">
    <Properties>
      <Property Name="PublicKey" Type="System.Security.Permissions.StrongNamePublicKeyBlob" />
      <Property Name="Name" Type="System.String" />
      <Property Name="Version" Type="System.Version" />
    </Properties>
    <Methods>
      <Method Name="get_PublicKey" Return_type="System.Security.Permissions.StrongNamePublicKeyBlob">
        <Parameters />
      </Method>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Version" Return_type="System.Version">
        <Parameters />
      </Method>
      <Method Name="CreateIdentityPermission" Return_type="System.Security.IPermission">
        <Parameters>
          <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="Clone" Return_type="System.Security.Policy.EvidenceBase">
        <Parameters />
      </Method>
      <Method Name="Copy" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Policy.StrongNameMembershipCondition">
    <Properties>
      <Property Name="PublicKey" Type="System.Security.Permissions.StrongNamePublicKeyBlob" />
      <Property Name="Name" Type="System.String" />
      <Property Name="Version" Type="System.Version" />
    </Properties>
    <Methods>
      <Method Name="set_PublicKey" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Permissions.StrongNamePublicKeyBlob" />
        </Parameters>
      </Method>
      <Method Name="get_PublicKey" Return_type="System.Security.Permissions.StrongNamePublicKeyBlob">
        <Parameters />
      </Method>
      <Method Name="set_Name" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Version" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Version" />
        </Parameters>
      </Method>
      <Method Name="get_Version" Return_type="System.Version">
        <Parameters />
      </Method>
      <Method Name="Check" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Security.Policy.IMembershipCondition">
        <Parameters />
      </Method>
      <Method Name="ToXml" Return_type="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" Return_type="System.Void">
        <Parameters>
          <Parameter Name="e" Type="System.Security.SecurityElement" />
        </Parameters>
      </Method>
      <Method Name="ToXml" Return_type="System.Security.SecurityElement">
        <Parameters>
          <Parameter Name="level" Type="System.Security.Policy.PolicyLevel" />
        </Parameters>
      </Method>
      <Method Name="FromXml" Return_type="System.Void">
        <Parameters>
          <Parameter Name="e" Type="System.Security.SecurityElement" />
          <Parameter Name="level" Type="System.Security.Policy.PolicyLevel" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Policy.UnionCodeGroup">
    <Properties>
      <Property Name="MergeLogic" Type="System.String" />
      <Property Name="Children" Type="System.Collections.IList" />
      <Property Name="MembershipCondition" Type="System.Security.Policy.IMembershipCondition" />
      <Property Name="PolicyStatement" Type="System.Security.Policy.PolicyStatement" />
      <Property Name="Name" Type="System.String" />
      <Property Name="Description" Type="System.String" />
      <Property Name="PermissionSetName" Type="System.String" />
      <Property Name="AttributeString" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="Resolve" Return_type="System.Security.Policy.PolicyStatement">
        <Parameters>
          <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="ResolveMatchingCodeGroups" Return_type="System.Security.Policy.CodeGroup">
        <Parameters>
          <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Security.Policy.CodeGroup">
        <Parameters />
      </Method>
      <Method Name="get_MergeLogic" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Policy.Url">
    <Properties>
      <Property Name="Value" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_Value" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="CreateIdentityPermission" Return_type="System.Security.IPermission">
        <Parameters>
          <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Clone" Return_type="System.Security.Policy.EvidenceBase">
        <Parameters />
      </Method>
      <Method Name="Copy" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Policy.UrlMembershipCondition">
    <Properties>
      <Property Name="Url" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="FromXml" Return_type="System.Void">
        <Parameters>
          <Parameter Name="e" Type="System.Security.SecurityElement" />
          <Parameter Name="level" Type="System.Security.Policy.PolicyLevel" />
        </Parameters>
      </Method>
      <Method Name="set_Url" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_Url" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Check" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Security.Policy.IMembershipCondition">
        <Parameters />
      </Method>
      <Method Name="ToXml" Return_type="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" Return_type="System.Void">
        <Parameters>
          <Parameter Name="e" Type="System.Security.SecurityElement" />
        </Parameters>
      </Method>
      <Method Name="ToXml" Return_type="System.Security.SecurityElement">
        <Parameters>
          <Parameter Name="level" Type="System.Security.Policy.PolicyLevel" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Policy.Zone">
    <Properties>
      <Property Name="SecurityZone" Type="System.Security.SecurityZone" />
    </Properties>
    <Methods>
      <Method Name="CreateFromUrl" Return_type="System.Security.Policy.Zone">
        <Parameters>
          <Parameter Name="url" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="CreateIdentityPermission" Return_type="System.Security.IPermission">
        <Parameters>
          <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="get_SecurityZone" Return_type="System.Security.SecurityZone">
        <Parameters />
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Clone" Return_type="System.Security.Policy.EvidenceBase">
        <Parameters />
      </Method>
      <Method Name="Copy" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Policy.ZoneMembershipCondition">
    <Properties>
      <Property Name="SecurityZone" Type="System.Security.SecurityZone" />
    </Properties>
    <Methods>
      <Method Name="set_SecurityZone" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.SecurityZone" />
        </Parameters>
      </Method>
      <Method Name="get_SecurityZone" Return_type="System.Security.SecurityZone">
        <Parameters />
      </Method>
      <Method Name="Check" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Security.Policy.IMembershipCondition">
        <Parameters />
      </Method>
      <Method Name="ToXml" Return_type="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" Return_type="System.Void">
        <Parameters>
          <Parameter Name="e" Type="System.Security.SecurityElement" />
        </Parameters>
      </Method>
      <Method Name="ToXml" Return_type="System.Security.SecurityElement">
        <Parameters>
          <Parameter Name="level" Type="System.Security.Policy.PolicyLevel" />
        </Parameters>
      </Method>
      <Method Name="FromXml" Return_type="System.Void">
        <Parameters>
          <Parameter Name="e" Type="System.Security.SecurityElement" />
          <Parameter Name="level" Type="System.Security.Policy.PolicyLevel" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Policy.GacInstalled">
    <Properties />
    <Methods>
      <Method Name="CreateIdentityPermission" Return_type="System.Security.IPermission">
        <Parameters>
          <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Clone" Return_type="System.Security.Policy.EvidenceBase">
        <Parameters />
      </Method>
      <Method Name="Copy" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Policy.GacMembershipCondition">
    <Properties />
    <Methods>
      <Method Name="Check" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Security.Policy.IMembershipCondition">
        <Parameters />
      </Method>
      <Method Name="ToXml" Return_type="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" Return_type="System.Void">
        <Parameters>
          <Parameter Name="e" Type="System.Security.SecurityElement" />
        </Parameters>
      </Method>
      <Method Name="ToXml" Return_type="System.Security.SecurityElement">
        <Parameters>
          <Parameter Name="level" Type="System.Security.Policy.PolicyLevel" />
        </Parameters>
      </Method>
      <Method Name="FromXml" Return_type="System.Void">
        <Parameters>
          <Parameter Name="e" Type="System.Security.SecurityElement" />
          <Parameter Name="level" Type="System.Security.Policy.PolicyLevel" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Policy.Hash">
    <Properties>
      <Property Name="SHA1" Type="System.Byte[]" />
      <Property Name="SHA256" Type="System.Byte[]" />
      <Property Name="MD5" Type="System.Byte[]" />
    </Properties>
    <Methods>
      <Method Name="CreateSHA1" Return_type="System.Security.Policy.Hash">
        <Parameters>
          <Parameter Name="sha1" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="CreateSHA256" Return_type="System.Security.Policy.Hash">
        <Parameters>
          <Parameter Name="sha256" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="CreateMD5" Return_type="System.Security.Policy.Hash">
        <Parameters>
          <Parameter Name="md5" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="Clone" Return_type="System.Security.Policy.EvidenceBase">
        <Parameters />
      </Method>
      <Method Name="GetObjectData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
      <Method Name="get_SHA1" Return_type="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="get_SHA256" Return_type="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="get_MD5" Return_type="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="GenerateHash" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="hashAlg" Type="System.Security.Cryptography.HashAlgorithm" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Policy.HashMembershipCondition">
    <Properties>
      <Property Name="HashAlgorithm" Type="System.Security.Cryptography.HashAlgorithm" />
      <Property Name="HashValue" Type="System.Byte[]" />
    </Properties>
    <Methods>
      <Method Name="set_HashAlgorithm" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Cryptography.HashAlgorithm" />
        </Parameters>
      </Method>
      <Method Name="get_HashAlgorithm" Return_type="System.Security.Cryptography.HashAlgorithm">
        <Parameters />
      </Method>
      <Method Name="set_HashValue" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="get_HashValue" Return_type="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="Check" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Security.Policy.IMembershipCondition">
        <Parameters />
      </Method>
      <Method Name="ToXml" Return_type="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" Return_type="System.Void">
        <Parameters>
          <Parameter Name="e" Type="System.Security.SecurityElement" />
        </Parameters>
      </Method>
      <Method Name="ToXml" Return_type="System.Security.SecurityElement">
        <Parameters>
          <Parameter Name="level" Type="System.Security.Policy.PolicyLevel" />
        </Parameters>
      </Method>
      <Method Name="FromXml" Return_type="System.Void">
        <Parameters>
          <Parameter Name="e" Type="System.Security.SecurityElement" />
          <Parameter Name="level" Type="System.Security.Policy.PolicyLevel" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Policy.Publisher">
    <Properties>
      <Property Name="Certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
    </Properties>
    <Methods>
      <Method Name="CreateIdentityPermission" Return_type="System.Security.IPermission">
        <Parameters>
          <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_Certificate" Return_type="System.Security.Cryptography.X509Certificates.X509Certificate">
        <Parameters />
      </Method>
      <Method Name="Clone" Return_type="System.Security.Policy.EvidenceBase">
        <Parameters />
      </Method>
      <Method Name="Copy" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Security.Policy.PublisherMembershipCondition">
    <Properties>
      <Property Name="Certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
    </Properties>
    <Methods>
      <Method Name="set_Certificate" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Cryptography.X509Certificates.X509Certificate" />
        </Parameters>
      </Method>
      <Method Name="get_Certificate" Return_type="System.Security.Cryptography.X509Certificates.X509Certificate">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Check" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="evidence" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Security.Policy.IMembershipCondition">
        <Parameters />
      </Method>
      <Method Name="ToXml" Return_type="System.Security.SecurityElement">
        <Parameters />
      </Method>
      <Method Name="FromXml" Return_type="System.Void">
        <Parameters>
          <Parameter Name="e" Type="System.Security.SecurityElement" />
        </Parameters>
      </Method>
      <Method Name="ToXml" Return_type="System.Security.SecurityElement">
        <Parameters>
          <Parameter Name="level" Type="System.Security.Policy.PolicyLevel" />
        </Parameters>
      </Method>
      <Method Name="FromXml" Return_type="System.Void">
        <Parameters>
          <Parameter Name="e" Type="System.Security.SecurityElement" />
          <Parameter Name="level" Type="System.Security.Policy.PolicyLevel" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Resources.MissingManifestResourceException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Resources.MissingSatelliteAssemblyException">
    <Properties>
      <Property Name="CultureName" Type="System.String" />
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_CultureName" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Resources.NeutralResourcesLanguageAttribute">
    <Properties>
      <Property Name="CultureName" Type="System.String" />
      <Property Name="Location" Type="System.Resources.UltimateResourceFallbackLocation" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_CultureName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Location" Return_type="System.Resources.UltimateResourceFallbackLocation">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Resources.ResourceManager">
    <Properties>
      <Property Name="BaseName" Type="System.String" />
      <Property Name="IgnoreCase" Type="System.Boolean" />
      <Property Name="ResourceSetType" Type="System.Type" />
    </Properties>
    <Methods>
      <Method Name="get_BaseName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_IgnoreCase" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_IgnoreCase" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_ResourceSetType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="ReleaseAllResources" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="CreateFileBasedResourceManager" Return_type="System.Resources.ResourceManager">
        <Parameters>
          <Parameter Name="baseName" Type="System.String" />
          <Parameter Name="resourceDir" Type="System.String" />
          <Parameter Name="usingResourceSet" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetResourceSet" Return_type="System.Resources.ResourceSet">
        <Parameters>
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
          <Parameter Name="createIfNotExists" Type="System.Boolean" />
          <Parameter Name="tryParents" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetString" Return_type="System.String">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetString" Return_type="System.String">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        </Parameters>
      </Method>
      <Method Name="GetObject" Return_type="System.Object">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetObject" Return_type="System.Object">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        </Parameters>
      </Method>
      <Method Name="GetStream" Return_type="System.IO.UnmanagedMemoryStream">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetStream" Return_type="System.IO.UnmanagedMemoryStream">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Resources.ResourceReader">
    <Properties />
    <Methods>
      <Method Name="Close" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Dispose" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="GetEnumerator" Return_type="System.Collections.IDictionaryEnumerator">
        <Parameters />
      </Method>
      <Method Name="GetResourceData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="resourceName" Type="System.String" />
          <Parameter Name="resourceType" Type="System.String&amp;" />
          <Parameter Name="resourceData" Type="System.Byte[]&amp;" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Resources.ResourceSet">
    <Properties />
    <Methods>
      <Method Name="Close" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Dispose" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="GetDefaultReader" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="GetDefaultWriter" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="GetEnumerator" Return_type="System.Collections.IDictionaryEnumerator">
        <Parameters />
      </Method>
      <Method Name="GetString" Return_type="System.String">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetString" Return_type="System.String">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="ignoreCase" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetObject" Return_type="System.Object">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetObject" Return_type="System.Object">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="ignoreCase" Type="System.Boolean" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Resources.ResourceWriter">
    <Properties>
      <Property Name="TypeNameConverter" Type="System.Func`2[System.Type,System.String]" />
    </Properties>
    <Methods>
      <Method Name="get_TypeNameConverter" Return_type="System.Func`2[System.Type,System.String]">
        <Parameters />
      </Method>
      <Method Name="set_TypeNameConverter" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Func`2[System.Type,System.String]" />
        </Parameters>
      </Method>
      <Method Name="AddResource" Return_type="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="AddResource" Return_type="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="AddResource" Return_type="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.IO.Stream" />
        </Parameters>
      </Method>
      <Method Name="AddResource" Return_type="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.IO.Stream" />
          <Parameter Name="closeAfterWrite" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="AddResource" Return_type="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="AddResourceData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="typeName" Type="System.String" />
          <Parameter Name="serializedData" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="Close" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Dispose" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Generate" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Resources.SatelliteContractVersionAttribute">
    <Properties>
      <Property Name="Version" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Version" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Globalization.Calendar">
    <Properties>
      <Property Name="MinSupportedDateTime" Type="System.DateTime" />
      <Property Name="MaxSupportedDateTime" Type="System.DateTime" />
      <Property Name="AlgorithmType" Type="System.Globalization.CalendarAlgorithmType" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="Eras" Type="System.Int32[]" />
      <Property Name="TwoDigitYearMax" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_MinSupportedDateTime" Return_type="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_MaxSupportedDateTime" Return_type="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_AlgorithmType" Return_type="System.Globalization.CalendarAlgorithmType">
        <Parameters />
      </Method>
      <Method Name="get_IsReadOnly" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Clone" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="ReadOnly" Return_type="System.Globalization.Calendar">
        <Parameters>
          <Parameter Name="calendar" Type="System.Globalization.Calendar" />
        </Parameters>
      </Method>
      <Method Name="AddMilliseconds" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
          <Parameter Name="milliseconds" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="AddDays" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
          <Parameter Name="days" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="AddHours" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
          <Parameter Name="hours" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="AddMinutes" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
          <Parameter Name="minutes" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="AddMonths" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
          <Parameter Name="months" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="AddSeconds" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
          <Parameter Name="seconds" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="AddWeeks" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
          <Parameter Name="weeks" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="AddYears" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
          <Parameter Name="years" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfWeek" Return_type="System.DayOfWeek">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetEra" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="get_Eras" Return_type="System.Int32[]">
        <Parameters />
      </Method>
      <Method Name="GetHour" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetMilliseconds" Return_type="System.Double">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetMinute" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetMonthsInYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetMonthsInYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetSecond" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetWeekOfYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
          <Parameter Name="rule" Type="System.Globalization.CalendarWeekRule" />
          <Parameter Name="firstDayOfWeek" Type="System.DayOfWeek" />
        </Parameters>
      </Method>
      <Method Name="GetYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="IsLeapDay" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="day" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IsLeapDay" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="day" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IsLeapMonth" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IsLeapMonth" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetLeapMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetLeapMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IsLeapYear" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IsLeapYear" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToDateTime" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="day" Type="System.Int32" />
          <Parameter Name="hour" Type="System.Int32" />
          <Parameter Name="minute" Type="System.Int32" />
          <Parameter Name="second" Type="System.Int32" />
          <Parameter Name="millisecond" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToDateTime" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="day" Type="System.Int32" />
          <Parameter Name="hour" Type="System.Int32" />
          <Parameter Name="minute" Type="System.Int32" />
          <Parameter Name="second" Type="System.Int32" />
          <Parameter Name="millisecond" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_TwoDigitYearMax" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_TwoDigitYearMax" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToFourDigitYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Globalization.CharUnicodeInfo">
    <Properties />
    <Methods>
      <Method Name="GetNumericValue" Return_type="System.Double">
        <Parameters>
          <Parameter Name="ch" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="GetNumericValue" Return_type="System.Double">
        <Parameters>
          <Parameter Name="s" Type="System.String" />
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetDecimalDigitValue" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="ch" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="GetDecimalDigitValue" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="s" Type="System.String" />
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetDigitValue" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="ch" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="GetDigitValue" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="s" Type="System.String" />
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetUnicodeCategory" Return_type="System.Globalization.UnicodeCategory">
        <Parameters>
          <Parameter Name="ch" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="GetUnicodeCategory" Return_type="System.Globalization.UnicodeCategory">
        <Parameters>
          <Parameter Name="s" Type="System.String" />
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Globalization.CompareInfo">
    <Properties>
      <Property Name="Name" Type="System.String" />
      <Property Name="LCID" Type="System.Int32" />
      <Property Name="Version" Type="System.Globalization.SortVersion" />
    </Properties>
    <Methods>
      <Method Name="GetCompareInfo" Return_type="System.Globalization.CompareInfo">
        <Parameters>
          <Parameter Name="culture" Type="System.Int32" />
          <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        </Parameters>
      </Method>
      <Method Name="GetCompareInfo" Return_type="System.Globalization.CompareInfo">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        </Parameters>
      </Method>
      <Method Name="GetCompareInfo" Return_type="System.Globalization.CompareInfo">
        <Parameters>
          <Parameter Name="culture" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetCompareInfo" Return_type="System.Globalization.CompareInfo">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="IsSortable" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="ch" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="IsSortable" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="text" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Compare" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="string1" Type="System.String" />
          <Parameter Name="string2" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Compare" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="string1" Type="System.String" />
          <Parameter Name="string2" Type="System.String" />
          <Parameter Name="options" Type="System.Globalization.CompareOptions" />
        </Parameters>
      </Method>
      <Method Name="Compare" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="string1" Type="System.String" />
          <Parameter Name="offset1" Type="System.Int32" />
          <Parameter Name="length1" Type="System.Int32" />
          <Parameter Name="string2" Type="System.String" />
          <Parameter Name="offset2" Type="System.Int32" />
          <Parameter Name="length2" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Compare" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="string1" Type="System.String" />
          <Parameter Name="offset1" Type="System.Int32" />
          <Parameter Name="string2" Type="System.String" />
          <Parameter Name="offset2" Type="System.Int32" />
          <Parameter Name="options" Type="System.Globalization.CompareOptions" />
        </Parameters>
      </Method>
      <Method Name="Compare" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="string1" Type="System.String" />
          <Parameter Name="offset1" Type="System.Int32" />
          <Parameter Name="string2" Type="System.String" />
          <Parameter Name="offset2" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Compare" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="string1" Type="System.String" />
          <Parameter Name="offset1" Type="System.Int32" />
          <Parameter Name="length1" Type="System.Int32" />
          <Parameter Name="string2" Type="System.String" />
          <Parameter Name="offset2" Type="System.Int32" />
          <Parameter Name="length2" Type="System.Int32" />
          <Parameter Name="options" Type="System.Globalization.CompareOptions" />
        </Parameters>
      </Method>
      <Method Name="IsPrefix" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="source" Type="System.String" />
          <Parameter Name="prefix" Type="System.String" />
          <Parameter Name="options" Type="System.Globalization.CompareOptions" />
        </Parameters>
      </Method>
      <Method Name="IsPrefix" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="source" Type="System.String" />
          <Parameter Name="prefix" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="IsSuffix" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="source" Type="System.String" />
          <Parameter Name="suffix" Type="System.String" />
          <Parameter Name="options" Type="System.Globalization.CompareOptions" />
        </Parameters>
      </Method>
      <Method Name="IsSuffix" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="source" Type="System.String" />
          <Parameter Name="suffix" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.String" />
          <Parameter Name="value" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.String" />
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.String" />
          <Parameter Name="value" Type="System.Char" />
          <Parameter Name="options" Type="System.Globalization.CompareOptions" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.String" />
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="options" Type="System.Globalization.CompareOptions" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.String" />
          <Parameter Name="value" Type="System.Char" />
          <Parameter Name="startIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.String" />
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="startIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.String" />
          <Parameter Name="value" Type="System.Char" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="options" Type="System.Globalization.CompareOptions" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.String" />
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="options" Type="System.Globalization.CompareOptions" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.String" />
          <Parameter Name="value" Type="System.Char" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.String" />
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.String" />
          <Parameter Name="value" Type="System.Char" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
          <Parameter Name="options" Type="System.Globalization.CompareOptions" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.String" />
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
          <Parameter Name="options" Type="System.Globalization.CompareOptions" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.String" />
          <Parameter Name="value" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.String" />
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.String" />
          <Parameter Name="value" Type="System.Char" />
          <Parameter Name="options" Type="System.Globalization.CompareOptions" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.String" />
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="options" Type="System.Globalization.CompareOptions" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.String" />
          <Parameter Name="value" Type="System.Char" />
          <Parameter Name="startIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.String" />
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="startIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.String" />
          <Parameter Name="value" Type="System.Char" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="options" Type="System.Globalization.CompareOptions" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.String" />
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="options" Type="System.Globalization.CompareOptions" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.String" />
          <Parameter Name="value" Type="System.Char" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.String" />
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.String" />
          <Parameter Name="value" Type="System.Char" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
          <Parameter Name="options" Type="System.Globalization.CompareOptions" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.String" />
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
          <Parameter Name="options" Type="System.Globalization.CompareOptions" />
        </Parameters>
      </Method>
      <Method Name="GetSortKey" Return_type="System.Globalization.SortKey">
        <Parameters>
          <Parameter Name="source" Type="System.String" />
          <Parameter Name="options" Type="System.Globalization.CompareOptions" />
        </Parameters>
      </Method>
      <Method Name="GetSortKey" Return_type="System.Globalization.SortKey">
        <Parameters>
          <Parameter Name="source" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="source" Type="System.String" />
          <Parameter Name="options" Type="System.Globalization.CompareOptions" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_LCID" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_Version" Return_type="System.Globalization.SortVersion">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Globalization.CultureInfo">
    <Properties>
      <Property Name="CurrentCulture" Type="System.Globalization.CultureInfo" />
      <Property Name="CurrentUICulture" Type="System.Globalization.CultureInfo" />
      <Property Name="InstalledUICulture" Type="System.Globalization.CultureInfo" />
      <Property Name="DefaultThreadCurrentCulture" Type="System.Globalization.CultureInfo" />
      <Property Name="DefaultThreadCurrentUICulture" Type="System.Globalization.CultureInfo" />
      <Property Name="InvariantCulture" Type="System.Globalization.CultureInfo" />
      <Property Name="Parent" Type="System.Globalization.CultureInfo" />
      <Property Name="LCID" Type="System.Int32" />
      <Property Name="KeyboardLayoutId" Type="System.Int32" />
      <Property Name="Name" Type="System.String" />
      <Property Name="IetfLanguageTag" Type="System.String" />
      <Property Name="DisplayName" Type="System.String" />
      <Property Name="NativeName" Type="System.String" />
      <Property Name="EnglishName" Type="System.String" />
      <Property Name="TwoLetterISOLanguageName" Type="System.String" />
      <Property Name="ThreeLetterISOLanguageName" Type="System.String" />
      <Property Name="ThreeLetterWindowsLanguageName" Type="System.String" />
      <Property Name="CompareInfo" Type="System.Globalization.CompareInfo" />
      <Property Name="TextInfo" Type="System.Globalization.TextInfo" />
      <Property Name="IsNeutralCulture" Type="System.Boolean" />
      <Property Name="CultureTypes" Type="System.Globalization.CultureTypes" />
      <Property Name="NumberFormat" Type="System.Globalization.NumberFormatInfo" />
      <Property Name="DateTimeFormat" Type="System.Globalization.DateTimeFormatInfo" />
      <Property Name="Calendar" Type="System.Globalization.Calendar" />
      <Property Name="OptionalCalendars" Type="System.Globalization.Calendar[]" />
      <Property Name="UseUserOverride" Type="System.Boolean" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="CreateSpecificCulture" Return_type="System.Globalization.CultureInfo">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_CurrentCulture" Return_type="System.Globalization.CultureInfo">
        <Parameters />
      </Method>
      <Method Name="set_CurrentCulture" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Globalization.CultureInfo" />
        </Parameters>
      </Method>
      <Method Name="get_CurrentUICulture" Return_type="System.Globalization.CultureInfo">
        <Parameters />
      </Method>
      <Method Name="set_CurrentUICulture" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Globalization.CultureInfo" />
        </Parameters>
      </Method>
      <Method Name="get_InstalledUICulture" Return_type="System.Globalization.CultureInfo">
        <Parameters />
      </Method>
      <Method Name="get_DefaultThreadCurrentCulture" Return_type="System.Globalization.CultureInfo">
        <Parameters />
      </Method>
      <Method Name="set_DefaultThreadCurrentCulture" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Globalization.CultureInfo" />
        </Parameters>
      </Method>
      <Method Name="get_DefaultThreadCurrentUICulture" Return_type="System.Globalization.CultureInfo">
        <Parameters />
      </Method>
      <Method Name="set_DefaultThreadCurrentUICulture" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Globalization.CultureInfo" />
        </Parameters>
      </Method>
      <Method Name="get_InvariantCulture" Return_type="System.Globalization.CultureInfo">
        <Parameters />
      </Method>
      <Method Name="get_Parent" Return_type="System.Globalization.CultureInfo">
        <Parameters />
      </Method>
      <Method Name="get_LCID" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_KeyboardLayoutId" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetCultures" Return_type="System.Globalization.CultureInfo[]">
        <Parameters>
          <Parameter Name="types" Type="System.Globalization.CultureTypes" />
        </Parameters>
      </Method>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_IetfLanguageTag" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_DisplayName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_NativeName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_EnglishName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_TwoLetterISOLanguageName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ThreeLetterISOLanguageName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ThreeLetterWindowsLanguageName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_CompareInfo" Return_type="System.Globalization.CompareInfo">
        <Parameters />
      </Method>
      <Method Name="get_TextInfo" Return_type="System.Globalization.TextInfo">
        <Parameters />
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetFormat" Return_type="System.Object">
        <Parameters>
          <Parameter Name="formatType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="get_IsNeutralCulture" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CultureTypes" Return_type="System.Globalization.CultureTypes">
        <Parameters />
      </Method>
      <Method Name="get_NumberFormat" Return_type="System.Globalization.NumberFormatInfo">
        <Parameters />
      </Method>
      <Method Name="set_NumberFormat" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Globalization.NumberFormatInfo" />
        </Parameters>
      </Method>
      <Method Name="get_DateTimeFormat" Return_type="System.Globalization.DateTimeFormatInfo">
        <Parameters />
      </Method>
      <Method Name="set_DateTimeFormat" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Globalization.DateTimeFormatInfo" />
        </Parameters>
      </Method>
      <Method Name="ClearCachedData" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_Calendar" Return_type="System.Globalization.Calendar">
        <Parameters />
      </Method>
      <Method Name="get_OptionalCalendars" Return_type="System.Globalization.Calendar[]">
        <Parameters />
      </Method>
      <Method Name="get_UseUserOverride" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetConsoleFallbackUICulture" Return_type="System.Globalization.CultureInfo">
        <Parameters />
      </Method>
      <Method Name="Clone" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="ReadOnly" Return_type="System.Globalization.CultureInfo">
        <Parameters>
          <Parameter Name="ci" Type="System.Globalization.CultureInfo" />
        </Parameters>
      </Method>
      <Method Name="get_IsReadOnly" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetCultureInfo" Return_type="System.Globalization.CultureInfo">
        <Parameters>
          <Parameter Name="culture" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetCultureInfo" Return_type="System.Globalization.CultureInfo">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetCultureInfo" Return_type="System.Globalization.CultureInfo">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="altName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetCultureInfoByIetfLanguageTag" Return_type="System.Globalization.CultureInfo">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Globalization.CultureNotFoundException">
    <Properties>
      <Property Name="InvalidCultureId" Type="System.Nullable`1[System.Int32]" />
      <Property Name="InvalidCultureName" Type="System.String" />
      <Property Name="Message" Type="System.String" />
      <Property Name="ParamName" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="GetObjectData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
      <Method Name="get_InvalidCultureId" Return_type="System.Nullable`1[System.Int32]">
        <Parameters />
      </Method>
      <Method Name="get_InvalidCultureName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Message" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Globalization.DateTimeFormatInfo">
    <Properties>
      <Property Name="InvariantInfo" Type="System.Globalization.DateTimeFormatInfo" />
      <Property Name="CurrentInfo" Type="System.Globalization.DateTimeFormatInfo" />
      <Property Name="AMDesignator" Type="System.String" />
      <Property Name="Calendar" Type="System.Globalization.Calendar" />
      <Property Name="DateSeparator" Type="System.String" />
      <Property Name="FirstDayOfWeek" Type="System.DayOfWeek" />
      <Property Name="CalendarWeekRule" Type="System.Globalization.CalendarWeekRule" />
      <Property Name="FullDateTimePattern" Type="System.String" />
      <Property Name="LongDatePattern" Type="System.String" />
      <Property Name="LongTimePattern" Type="System.String" />
      <Property Name="MonthDayPattern" Type="System.String" />
      <Property Name="PMDesignator" Type="System.String" />
      <Property Name="RFC1123Pattern" Type="System.String" />
      <Property Name="ShortDatePattern" Type="System.String" />
      <Property Name="ShortTimePattern" Type="System.String" />
      <Property Name="SortableDateTimePattern" Type="System.String" />
      <Property Name="TimeSeparator" Type="System.String" />
      <Property Name="UniversalSortableDateTimePattern" Type="System.String" />
      <Property Name="YearMonthPattern" Type="System.String" />
      <Property Name="AbbreviatedDayNames" Type="System.String[]" />
      <Property Name="ShortestDayNames" Type="System.String[]" />
      <Property Name="DayNames" Type="System.String[]" />
      <Property Name="AbbreviatedMonthNames" Type="System.String[]" />
      <Property Name="MonthNames" Type="System.String[]" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="NativeCalendarName" Type="System.String" />
      <Property Name="AbbreviatedMonthGenitiveNames" Type="System.String[]" />
      <Property Name="MonthGenitiveNames" Type="System.String[]" />
    </Properties>
    <Methods>
      <Method Name="get_InvariantInfo" Return_type="System.Globalization.DateTimeFormatInfo">
        <Parameters />
      </Method>
      <Method Name="get_CurrentInfo" Return_type="System.Globalization.DateTimeFormatInfo">
        <Parameters />
      </Method>
      <Method Name="GetInstance" Return_type="System.Globalization.DateTimeFormatInfo">
        <Parameters>
          <Parameter Name="provider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="GetFormat" Return_type="System.Object">
        <Parameters>
          <Parameter Name="formatType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="Clone" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_AMDesignator" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_AMDesignator" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_Calendar" Return_type="System.Globalization.Calendar">
        <Parameters />
      </Method>
      <Method Name="set_Calendar" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Globalization.Calendar" />
        </Parameters>
      </Method>
      <Method Name="GetEra" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="eraName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetEraName" Return_type="System.String">
        <Parameters>
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetAbbreviatedEraName" Return_type="System.String">
        <Parameters>
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_DateSeparator" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_DateSeparator" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_FirstDayOfWeek" Return_type="System.DayOfWeek">
        <Parameters />
      </Method>
      <Method Name="set_FirstDayOfWeek" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.DayOfWeek" />
        </Parameters>
      </Method>
      <Method Name="get_CalendarWeekRule" Return_type="System.Globalization.CalendarWeekRule">
        <Parameters />
      </Method>
      <Method Name="set_CalendarWeekRule" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Globalization.CalendarWeekRule" />
        </Parameters>
      </Method>
      <Method Name="get_FullDateTimePattern" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_FullDateTimePattern" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_LongDatePattern" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_LongDatePattern" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_LongTimePattern" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_LongTimePattern" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_MonthDayPattern" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_MonthDayPattern" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_PMDesignator" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_PMDesignator" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_RFC1123Pattern" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ShortDatePattern" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_ShortDatePattern" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_ShortTimePattern" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_ShortTimePattern" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_SortableDateTimePattern" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_TimeSeparator" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_TimeSeparator" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_UniversalSortableDateTimePattern" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_YearMonthPattern" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_YearMonthPattern" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_AbbreviatedDayNames" Return_type="System.String[]">
        <Parameters />
      </Method>
      <Method Name="set_AbbreviatedDayNames" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String[]" />
        </Parameters>
      </Method>
      <Method Name="get_ShortestDayNames" Return_type="System.String[]">
        <Parameters />
      </Method>
      <Method Name="set_ShortestDayNames" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String[]" />
        </Parameters>
      </Method>
      <Method Name="get_DayNames" Return_type="System.String[]">
        <Parameters />
      </Method>
      <Method Name="set_DayNames" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String[]" />
        </Parameters>
      </Method>
      <Method Name="get_AbbreviatedMonthNames" Return_type="System.String[]">
        <Parameters />
      </Method>
      <Method Name="set_AbbreviatedMonthNames" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String[]" />
        </Parameters>
      </Method>
      <Method Name="get_MonthNames" Return_type="System.String[]">
        <Parameters />
      </Method>
      <Method Name="set_MonthNames" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String[]" />
        </Parameters>
      </Method>
      <Method Name="GetAbbreviatedDayName" Return_type="System.String">
        <Parameters>
          <Parameter Name="dayofweek" Type="System.DayOfWeek" />
        </Parameters>
      </Method>
      <Method Name="GetShortestDayName" Return_type="System.String">
        <Parameters>
          <Parameter Name="dayOfWeek" Type="System.DayOfWeek" />
        </Parameters>
      </Method>
      <Method Name="GetAllDateTimePatterns" Return_type="System.String[]">
        <Parameters />
      </Method>
      <Method Name="GetAllDateTimePatterns" Return_type="System.String[]">
        <Parameters>
          <Parameter Name="format" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="GetDayName" Return_type="System.String">
        <Parameters>
          <Parameter Name="dayofweek" Type="System.DayOfWeek" />
        </Parameters>
      </Method>
      <Method Name="GetAbbreviatedMonthName" Return_type="System.String">
        <Parameters>
          <Parameter Name="month" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetMonthName" Return_type="System.String">
        <Parameters>
          <Parameter Name="month" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ReadOnly" Return_type="System.Globalization.DateTimeFormatInfo">
        <Parameters>
          <Parameter Name="dtfi" Type="System.Globalization.DateTimeFormatInfo" />
        </Parameters>
      </Method>
      <Method Name="get_IsReadOnly" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_NativeCalendarName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="SetAllDateTimePatterns" Return_type="System.Void">
        <Parameters>
          <Parameter Name="patterns" Type="System.String[]" />
          <Parameter Name="format" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="get_AbbreviatedMonthGenitiveNames" Return_type="System.String[]">
        <Parameters />
      </Method>
      <Method Name="set_AbbreviatedMonthGenitiveNames" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String[]" />
        </Parameters>
      </Method>
      <Method Name="get_MonthGenitiveNames" Return_type="System.String[]">
        <Parameters />
      </Method>
      <Method Name="set_MonthGenitiveNames" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String[]" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Globalization.DaylightTime">
    <Properties>
      <Property Name="Start" Type="System.DateTime" />
      <Property Name="End" Type="System.DateTime" />
      <Property Name="Delta" Type="System.TimeSpan" />
    </Properties>
    <Methods>
      <Method Name="get_Start" Return_type="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_End" Return_type="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_Delta" Return_type="System.TimeSpan">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Globalization.GregorianCalendar">
    <Properties>
      <Property Name="MinSupportedDateTime" Type="System.DateTime" />
      <Property Name="MaxSupportedDateTime" Type="System.DateTime" />
      <Property Name="AlgorithmType" Type="System.Globalization.CalendarAlgorithmType" />
      <Property Name="CalendarType" Type="System.Globalization.GregorianCalendarTypes" />
      <Property Name="Eras" Type="System.Int32[]" />
      <Property Name="TwoDigitYearMax" Type="System.Int32" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_MinSupportedDateTime" Return_type="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_MaxSupportedDateTime" Return_type="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_AlgorithmType" Return_type="System.Globalization.CalendarAlgorithmType">
        <Parameters />
      </Method>
      <Method Name="get_CalendarType" Return_type="System.Globalization.GregorianCalendarTypes">
        <Parameters />
      </Method>
      <Method Name="set_CalendarType" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Globalization.GregorianCalendarTypes" />
        </Parameters>
      </Method>
      <Method Name="AddMonths" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
          <Parameter Name="months" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="AddYears" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
          <Parameter Name="years" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfWeek" Return_type="System.DayOfWeek">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetEra" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="get_Eras" Return_type="System.Int32[]">
        <Parameters />
      </Method>
      <Method Name="GetMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetMonthsInYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="IsLeapDay" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="day" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetLeapMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IsLeapMonth" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IsLeapYear" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToDateTime" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="day" Type="System.Int32" />
          <Parameter Name="hour" Type="System.Int32" />
          <Parameter Name="minute" Type="System.Int32" />
          <Parameter Name="second" Type="System.Int32" />
          <Parameter Name="millisecond" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_TwoDigitYearMax" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_TwoDigitYearMax" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToFourDigitYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Globalization.HebrewCalendar">
    <Properties>
      <Property Name="MinSupportedDateTime" Type="System.DateTime" />
      <Property Name="MaxSupportedDateTime" Type="System.DateTime" />
      <Property Name="AlgorithmType" Type="System.Globalization.CalendarAlgorithmType" />
      <Property Name="Eras" Type="System.Int32[]" />
      <Property Name="TwoDigitYearMax" Type="System.Int32" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_MinSupportedDateTime" Return_type="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_MaxSupportedDateTime" Return_type="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_AlgorithmType" Return_type="System.Globalization.CalendarAlgorithmType">
        <Parameters />
      </Method>
      <Method Name="AddMonths" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
          <Parameter Name="months" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="AddYears" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
          <Parameter Name="years" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfWeek" Return_type="System.DayOfWeek">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetEra" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="get_Eras" Return_type="System.Int32[]">
        <Parameters />
      </Method>
      <Method Name="GetMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetMonthsInYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="IsLeapDay" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="day" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetLeapMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IsLeapMonth" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IsLeapYear" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToDateTime" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="day" Type="System.Int32" />
          <Parameter Name="hour" Type="System.Int32" />
          <Parameter Name="minute" Type="System.Int32" />
          <Parameter Name="second" Type="System.Int32" />
          <Parameter Name="millisecond" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_TwoDigitYearMax" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_TwoDigitYearMax" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToFourDigitYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Globalization.HijriCalendar">
    <Properties>
      <Property Name="MinSupportedDateTime" Type="System.DateTime" />
      <Property Name="MaxSupportedDateTime" Type="System.DateTime" />
      <Property Name="AlgorithmType" Type="System.Globalization.CalendarAlgorithmType" />
      <Property Name="HijriAdjustment" Type="System.Int32" />
      <Property Name="Eras" Type="System.Int32[]" />
      <Property Name="TwoDigitYearMax" Type="System.Int32" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_MinSupportedDateTime" Return_type="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_MaxSupportedDateTime" Return_type="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_AlgorithmType" Return_type="System.Globalization.CalendarAlgorithmType">
        <Parameters />
      </Method>
      <Method Name="get_HijriAdjustment" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_HijriAdjustment" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="AddMonths" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
          <Parameter Name="months" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="AddYears" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
          <Parameter Name="years" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfWeek" Return_type="System.DayOfWeek">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetEra" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="get_Eras" Return_type="System.Int32[]">
        <Parameters />
      </Method>
      <Method Name="GetMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetMonthsInYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="IsLeapDay" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="day" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetLeapMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IsLeapMonth" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IsLeapYear" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToDateTime" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="day" Type="System.Int32" />
          <Parameter Name="hour" Type="System.Int32" />
          <Parameter Name="minute" Type="System.Int32" />
          <Parameter Name="second" Type="System.Int32" />
          <Parameter Name="millisecond" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_TwoDigitYearMax" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_TwoDigitYearMax" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToFourDigitYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Globalization.UmAlQuraCalendar">
    <Properties>
      <Property Name="MinSupportedDateTime" Type="System.DateTime" />
      <Property Name="MaxSupportedDateTime" Type="System.DateTime" />
      <Property Name="AlgorithmType" Type="System.Globalization.CalendarAlgorithmType" />
      <Property Name="Eras" Type="System.Int32[]" />
      <Property Name="TwoDigitYearMax" Type="System.Int32" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_MinSupportedDateTime" Return_type="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_MaxSupportedDateTime" Return_type="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_AlgorithmType" Return_type="System.Globalization.CalendarAlgorithmType">
        <Parameters />
      </Method>
      <Method Name="AddMonths" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
          <Parameter Name="months" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="AddYears" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
          <Parameter Name="years" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfWeek" Return_type="System.DayOfWeek">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetEra" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="get_Eras" Return_type="System.Int32[]">
        <Parameters />
      </Method>
      <Method Name="GetMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetMonthsInYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="IsLeapDay" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="day" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetLeapMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IsLeapMonth" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IsLeapYear" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToDateTime" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="day" Type="System.Int32" />
          <Parameter Name="hour" Type="System.Int32" />
          <Parameter Name="minute" Type="System.Int32" />
          <Parameter Name="second" Type="System.Int32" />
          <Parameter Name="millisecond" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_TwoDigitYearMax" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_TwoDigitYearMax" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToFourDigitYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Globalization.ChineseLunisolarCalendar">
    <Properties>
      <Property Name="MinSupportedDateTime" Type="System.DateTime" />
      <Property Name="MaxSupportedDateTime" Type="System.DateTime" />
      <Property Name="Eras" Type="System.Int32[]" />
      <Property Name="AlgorithmType" Type="System.Globalization.CalendarAlgorithmType" />
      <Property Name="TwoDigitYearMax" Type="System.Int32" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_MinSupportedDateTime" Return_type="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_MaxSupportedDateTime" Return_type="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="GetEra" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="get_Eras" Return_type="System.Int32[]">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Globalization.EastAsianLunisolarCalendar">
    <Properties>
      <Property Name="AlgorithmType" Type="System.Globalization.CalendarAlgorithmType" />
      <Property Name="TwoDigitYearMax" Type="System.Int32" />
      <Property Name="MinSupportedDateTime" Type="System.DateTime" />
      <Property Name="MaxSupportedDateTime" Type="System.DateTime" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="Eras" Type="System.Int32[]" />
    </Properties>
    <Methods>
      <Method Name="get_AlgorithmType" Return_type="System.Globalization.CalendarAlgorithmType">
        <Parameters />
      </Method>
      <Method Name="GetSexagenaryYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetCelestialStem" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="sexagenaryYear" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetTerrestrialBranch" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="sexagenaryYear" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToDateTime" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="day" Type="System.Int32" />
          <Parameter Name="hour" Type="System.Int32" />
          <Parameter Name="minute" Type="System.Int32" />
          <Parameter Name="second" Type="System.Int32" />
          <Parameter Name="millisecond" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="AddMonths" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
          <Parameter Name="months" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="AddYears" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
          <Parameter Name="years" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfWeek" Return_type="System.DayOfWeek">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetMonthsInYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IsLeapDay" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="day" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IsLeapMonth" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetLeapMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IsLeapYear" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_TwoDigitYearMax" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_TwoDigitYearMax" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToFourDigitYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Globalization.JapaneseLunisolarCalendar">
    <Properties>
      <Property Name="MinSupportedDateTime" Type="System.DateTime" />
      <Property Name="MaxSupportedDateTime" Type="System.DateTime" />
      <Property Name="Eras" Type="System.Int32[]" />
      <Property Name="AlgorithmType" Type="System.Globalization.CalendarAlgorithmType" />
      <Property Name="TwoDigitYearMax" Type="System.Int32" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_MinSupportedDateTime" Return_type="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_MaxSupportedDateTime" Return_type="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="GetEra" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="get_Eras" Return_type="System.Int32[]">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Globalization.JulianCalendar">
    <Properties>
      <Property Name="MinSupportedDateTime" Type="System.DateTime" />
      <Property Name="MaxSupportedDateTime" Type="System.DateTime" />
      <Property Name="AlgorithmType" Type="System.Globalization.CalendarAlgorithmType" />
      <Property Name="Eras" Type="System.Int32[]" />
      <Property Name="TwoDigitYearMax" Type="System.Int32" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_MinSupportedDateTime" Return_type="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_MaxSupportedDateTime" Return_type="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_AlgorithmType" Return_type="System.Globalization.CalendarAlgorithmType">
        <Parameters />
      </Method>
      <Method Name="AddMonths" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
          <Parameter Name="months" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="AddYears" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
          <Parameter Name="years" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfWeek" Return_type="System.DayOfWeek">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetEra" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="get_Eras" Return_type="System.Int32[]">
        <Parameters />
      </Method>
      <Method Name="GetMonthsInYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="IsLeapDay" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="day" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetLeapMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IsLeapMonth" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IsLeapYear" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToDateTime" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="day" Type="System.Int32" />
          <Parameter Name="hour" Type="System.Int32" />
          <Parameter Name="minute" Type="System.Int32" />
          <Parameter Name="second" Type="System.Int32" />
          <Parameter Name="millisecond" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_TwoDigitYearMax" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_TwoDigitYearMax" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToFourDigitYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Globalization.KoreanLunisolarCalendar">
    <Properties>
      <Property Name="MinSupportedDateTime" Type="System.DateTime" />
      <Property Name="MaxSupportedDateTime" Type="System.DateTime" />
      <Property Name="Eras" Type="System.Int32[]" />
      <Property Name="AlgorithmType" Type="System.Globalization.CalendarAlgorithmType" />
      <Property Name="TwoDigitYearMax" Type="System.Int32" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_MinSupportedDateTime" Return_type="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_MaxSupportedDateTime" Return_type="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="GetEra" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="get_Eras" Return_type="System.Int32[]">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Globalization.PersianCalendar">
    <Properties>
      <Property Name="MinSupportedDateTime" Type="System.DateTime" />
      <Property Name="MaxSupportedDateTime" Type="System.DateTime" />
      <Property Name="AlgorithmType" Type="System.Globalization.CalendarAlgorithmType" />
      <Property Name="Eras" Type="System.Int32[]" />
      <Property Name="TwoDigitYearMax" Type="System.Int32" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_MinSupportedDateTime" Return_type="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_MaxSupportedDateTime" Return_type="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_AlgorithmType" Return_type="System.Globalization.CalendarAlgorithmType">
        <Parameters />
      </Method>
      <Method Name="AddMonths" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
          <Parameter Name="months" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="AddYears" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
          <Parameter Name="years" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfWeek" Return_type="System.DayOfWeek">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetEra" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="get_Eras" Return_type="System.Int32[]">
        <Parameters />
      </Method>
      <Method Name="GetMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetMonthsInYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="IsLeapDay" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="day" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetLeapMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IsLeapMonth" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IsLeapYear" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToDateTime" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="day" Type="System.Int32" />
          <Parameter Name="hour" Type="System.Int32" />
          <Parameter Name="minute" Type="System.Int32" />
          <Parameter Name="second" Type="System.Int32" />
          <Parameter Name="millisecond" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_TwoDigitYearMax" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_TwoDigitYearMax" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToFourDigitYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Globalization.TaiwanLunisolarCalendar">
    <Properties>
      <Property Name="MinSupportedDateTime" Type="System.DateTime" />
      <Property Name="MaxSupportedDateTime" Type="System.DateTime" />
      <Property Name="Eras" Type="System.Int32[]" />
      <Property Name="AlgorithmType" Type="System.Globalization.CalendarAlgorithmType" />
      <Property Name="TwoDigitYearMax" Type="System.Int32" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_MinSupportedDateTime" Return_type="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_MaxSupportedDateTime" Return_type="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="GetEra" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="get_Eras" Return_type="System.Int32[]">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Globalization.IdnMapping">
    <Properties>
      <Property Name="AllowUnassigned" Type="System.Boolean" />
      <Property Name="UseStd3AsciiRules" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_AllowUnassigned" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_AllowUnassigned" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_UseStd3AsciiRules" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_UseStd3AsciiRules" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetAscii" Return_type="System.String">
        <Parameters>
          <Parameter Name="unicode" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetAscii" Return_type="System.String">
        <Parameters>
          <Parameter Name="unicode" Type="System.String" />
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetAscii" Return_type="System.String">
        <Parameters>
          <Parameter Name="unicode" Type="System.String" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetUnicode" Return_type="System.String">
        <Parameters>
          <Parameter Name="ascii" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetUnicode" Return_type="System.String">
        <Parameters>
          <Parameter Name="ascii" Type="System.String" />
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetUnicode" Return_type="System.String">
        <Parameters>
          <Parameter Name="ascii" Type="System.String" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Globalization.JapaneseCalendar">
    <Properties>
      <Property Name="MinSupportedDateTime" Type="System.DateTime" />
      <Property Name="MaxSupportedDateTime" Type="System.DateTime" />
      <Property Name="AlgorithmType" Type="System.Globalization.CalendarAlgorithmType" />
      <Property Name="Eras" Type="System.Int32[]" />
      <Property Name="TwoDigitYearMax" Type="System.Int32" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_MinSupportedDateTime" Return_type="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_MaxSupportedDateTime" Return_type="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_AlgorithmType" Return_type="System.Globalization.CalendarAlgorithmType">
        <Parameters />
      </Method>
      <Method Name="AddMonths" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
          <Parameter Name="months" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="AddYears" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
          <Parameter Name="years" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfWeek" Return_type="System.DayOfWeek">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetMonthsInYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetWeekOfYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
          <Parameter Name="rule" Type="System.Globalization.CalendarWeekRule" />
          <Parameter Name="firstDayOfWeek" Type="System.DayOfWeek" />
        </Parameters>
      </Method>
      <Method Name="GetEra" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="IsLeapDay" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="day" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IsLeapYear" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetLeapMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IsLeapMonth" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToDateTime" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="day" Type="System.Int32" />
          <Parameter Name="hour" Type="System.Int32" />
          <Parameter Name="minute" Type="System.Int32" />
          <Parameter Name="second" Type="System.Int32" />
          <Parameter Name="millisecond" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToFourDigitYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_Eras" Return_type="System.Int32[]">
        <Parameters />
      </Method>
      <Method Name="get_TwoDigitYearMax" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_TwoDigitYearMax" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Globalization.KoreanCalendar">
    <Properties>
      <Property Name="MinSupportedDateTime" Type="System.DateTime" />
      <Property Name="MaxSupportedDateTime" Type="System.DateTime" />
      <Property Name="AlgorithmType" Type="System.Globalization.CalendarAlgorithmType" />
      <Property Name="Eras" Type="System.Int32[]" />
      <Property Name="TwoDigitYearMax" Type="System.Int32" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_MinSupportedDateTime" Return_type="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_MaxSupportedDateTime" Return_type="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_AlgorithmType" Return_type="System.Globalization.CalendarAlgorithmType">
        <Parameters />
      </Method>
      <Method Name="AddMonths" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
          <Parameter Name="months" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="AddYears" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
          <Parameter Name="years" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfWeek" Return_type="System.DayOfWeek">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetMonthsInYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetWeekOfYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
          <Parameter Name="rule" Type="System.Globalization.CalendarWeekRule" />
          <Parameter Name="firstDayOfWeek" Type="System.DayOfWeek" />
        </Parameters>
      </Method>
      <Method Name="GetEra" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="IsLeapDay" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="day" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IsLeapYear" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetLeapMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IsLeapMonth" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToDateTime" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="day" Type="System.Int32" />
          <Parameter Name="hour" Type="System.Int32" />
          <Parameter Name="minute" Type="System.Int32" />
          <Parameter Name="second" Type="System.Int32" />
          <Parameter Name="millisecond" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_Eras" Return_type="System.Int32[]">
        <Parameters />
      </Method>
      <Method Name="get_TwoDigitYearMax" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_TwoDigitYearMax" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToFourDigitYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Globalization.RegionInfo">
    <Properties>
      <Property Name="CurrentRegion" Type="System.Globalization.RegionInfo" />
      <Property Name="Name" Type="System.String" />
      <Property Name="EnglishName" Type="System.String" />
      <Property Name="DisplayName" Type="System.String" />
      <Property Name="NativeName" Type="System.String" />
      <Property Name="TwoLetterISORegionName" Type="System.String" />
      <Property Name="ThreeLetterISORegionName" Type="System.String" />
      <Property Name="ThreeLetterWindowsRegionName" Type="System.String" />
      <Property Name="IsMetric" Type="System.Boolean" />
      <Property Name="GeoId" Type="System.Int32" />
      <Property Name="CurrencyEnglishName" Type="System.String" />
      <Property Name="CurrencyNativeName" Type="System.String" />
      <Property Name="CurrencySymbol" Type="System.String" />
      <Property Name="ISOCurrencySymbol" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_CurrentRegion" Return_type="System.Globalization.RegionInfo">
        <Parameters />
      </Method>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_EnglishName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_DisplayName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_NativeName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_TwoLetterISORegionName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ThreeLetterISORegionName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ThreeLetterWindowsRegionName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_IsMetric" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_GeoId" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_CurrencyEnglishName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_CurrencyNativeName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_CurrencySymbol" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ISOCurrencySymbol" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Globalization.SortKey">
    <Properties>
      <Property Name="OriginalString" Type="System.String" />
      <Property Name="KeyData" Type="System.Byte[]" />
    </Properties>
    <Methods>
      <Method Name="get_OriginalString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_KeyData" Return_type="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="Compare" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="sortkey1" Type="System.Globalization.SortKey" />
          <Parameter Name="sortkey2" Type="System.Globalization.SortKey" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Globalization.StringInfo">
    <Properties>
      <Property Name="String" Type="System.String" />
      <Property Name="LengthInTextElements" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="GetNextTextElement" Return_type="System.String">
        <Parameters>
          <Parameter Name="str" Type="System.String" />
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_String" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_String" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_LengthInTextElements" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="SubstringByTextElements" Return_type="System.String">
        <Parameters>
          <Parameter Name="startingTextElement" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="SubstringByTextElements" Return_type="System.String">
        <Parameters>
          <Parameter Name="startingTextElement" Type="System.Int32" />
          <Parameter Name="lengthInTextElements" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetNextTextElement" Return_type="System.String">
        <Parameters>
          <Parameter Name="str" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetTextElementEnumerator" Return_type="System.Globalization.TextElementEnumerator">
        <Parameters>
          <Parameter Name="str" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetTextElementEnumerator" Return_type="System.Globalization.TextElementEnumerator">
        <Parameters>
          <Parameter Name="str" Type="System.String" />
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ParseCombiningCharacters" Return_type="System.Int32[]">
        <Parameters>
          <Parameter Name="str" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Globalization.TaiwanCalendar">
    <Properties>
      <Property Name="MinSupportedDateTime" Type="System.DateTime" />
      <Property Name="MaxSupportedDateTime" Type="System.DateTime" />
      <Property Name="AlgorithmType" Type="System.Globalization.CalendarAlgorithmType" />
      <Property Name="Eras" Type="System.Int32[]" />
      <Property Name="TwoDigitYearMax" Type="System.Int32" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_MinSupportedDateTime" Return_type="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_MaxSupportedDateTime" Return_type="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_AlgorithmType" Return_type="System.Globalization.CalendarAlgorithmType">
        <Parameters />
      </Method>
      <Method Name="AddMonths" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
          <Parameter Name="months" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="AddYears" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
          <Parameter Name="years" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfWeek" Return_type="System.DayOfWeek">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetMonthsInYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetWeekOfYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
          <Parameter Name="rule" Type="System.Globalization.CalendarWeekRule" />
          <Parameter Name="firstDayOfWeek" Type="System.DayOfWeek" />
        </Parameters>
      </Method>
      <Method Name="GetEra" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="IsLeapDay" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="day" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IsLeapYear" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetLeapMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IsLeapMonth" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToDateTime" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="day" Type="System.Int32" />
          <Parameter Name="hour" Type="System.Int32" />
          <Parameter Name="minute" Type="System.Int32" />
          <Parameter Name="second" Type="System.Int32" />
          <Parameter Name="millisecond" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_Eras" Return_type="System.Int32[]">
        <Parameters />
      </Method>
      <Method Name="get_TwoDigitYearMax" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_TwoDigitYearMax" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToFourDigitYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Globalization.TextElementEnumerator">
    <Properties>
      <Property Name="Current" Type="System.Object" />
      <Property Name="ElementIndex" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="MoveNext" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Current" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="GetTextElement" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ElementIndex" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Reset" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Globalization.TextInfo">
    <Properties>
      <Property Name="ANSICodePage" Type="System.Int32" />
      <Property Name="OEMCodePage" Type="System.Int32" />
      <Property Name="MacCodePage" Type="System.Int32" />
      <Property Name="EBCDICCodePage" Type="System.Int32" />
      <Property Name="LCID" Type="System.Int32" />
      <Property Name="CultureName" Type="System.String" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="ListSeparator" Type="System.String" />
      <Property Name="IsRightToLeft" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_ANSICodePage" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_OEMCodePage" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_MacCodePage" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_EBCDICCodePage" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_LCID" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_CultureName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_IsReadOnly" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Clone" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="ReadOnly" Return_type="System.Globalization.TextInfo">
        <Parameters>
          <Parameter Name="textInfo" Type="System.Globalization.TextInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ListSeparator" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_ListSeparator" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ToLower" Return_type="System.Char">
        <Parameters>
          <Parameter Name="c" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="ToLower" Return_type="System.String">
        <Parameters>
          <Parameter Name="str" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ToUpper" Return_type="System.Char">
        <Parameters>
          <Parameter Name="c" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="ToUpper" Return_type="System.String">
        <Parameters>
          <Parameter Name="str" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="ToTitleCase" Return_type="System.String">
        <Parameters>
          <Parameter Name="str" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_IsRightToLeft" Return_type="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Globalization.ThaiBuddhistCalendar">
    <Properties>
      <Property Name="MinSupportedDateTime" Type="System.DateTime" />
      <Property Name="MaxSupportedDateTime" Type="System.DateTime" />
      <Property Name="AlgorithmType" Type="System.Globalization.CalendarAlgorithmType" />
      <Property Name="Eras" Type="System.Int32[]" />
      <Property Name="TwoDigitYearMax" Type="System.Int32" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_MinSupportedDateTime" Return_type="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_MaxSupportedDateTime" Return_type="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="get_AlgorithmType" Return_type="System.Globalization.CalendarAlgorithmType">
        <Parameters />
      </Method>
      <Method Name="AddMonths" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
          <Parameter Name="months" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="AddYears" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
          <Parameter Name="years" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetDaysInYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfWeek" Return_type="System.DayOfWeek">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetDayOfYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetMonthsInYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetWeekOfYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
          <Parameter Name="rule" Type="System.Globalization.CalendarWeekRule" />
          <Parameter Name="firstDayOfWeek" Type="System.DayOfWeek" />
        </Parameters>
      </Method>
      <Method Name="GetEra" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="time" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="IsLeapDay" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="day" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IsLeapYear" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetLeapMonth" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IsLeapMonth" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToDateTime" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
          <Parameter Name="month" Type="System.Int32" />
          <Parameter Name="day" Type="System.Int32" />
          <Parameter Name="hour" Type="System.Int32" />
          <Parameter Name="minute" Type="System.Int32" />
          <Parameter Name="second" Type="System.Int32" />
          <Parameter Name="millisecond" Type="System.Int32" />
          <Parameter Name="era" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_Eras" Return_type="System.Int32[]">
        <Parameters />
      </Method>
      <Method Name="get_TwoDigitYearMax" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_TwoDigitYearMax" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToFourDigitYear" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="year" Type="System.Int32" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Globalization.NumberFormatInfo">
    <Properties>
      <Property Name="InvariantInfo" Type="System.Globalization.NumberFormatInfo" />
      <Property Name="CurrencyDecimalDigits" Type="System.Int32" />
      <Property Name="CurrencyDecimalSeparator" Type="System.String" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="CurrencyGroupSizes" Type="System.Int32[]" />
      <Property Name="NumberGroupSizes" Type="System.Int32[]" />
      <Property Name="PercentGroupSizes" Type="System.Int32[]" />
      <Property Name="CurrencyGroupSeparator" Type="System.String" />
      <Property Name="CurrencySymbol" Type="System.String" />
      <Property Name="CurrentInfo" Type="System.Globalization.NumberFormatInfo" />
      <Property Name="NaNSymbol" Type="System.String" />
      <Property Name="CurrencyNegativePattern" Type="System.Int32" />
      <Property Name="NumberNegativePattern" Type="System.Int32" />
      <Property Name="PercentPositivePattern" Type="System.Int32" />
      <Property Name="PercentNegativePattern" Type="System.Int32" />
      <Property Name="NegativeInfinitySymbol" Type="System.String" />
      <Property Name="NegativeSign" Type="System.String" />
      <Property Name="NumberDecimalDigits" Type="System.Int32" />
      <Property Name="NumberDecimalSeparator" Type="System.String" />
      <Property Name="NumberGroupSeparator" Type="System.String" />
      <Property Name="CurrencyPositivePattern" Type="System.Int32" />
      <Property Name="PositiveInfinitySymbol" Type="System.String" />
      <Property Name="PositiveSign" Type="System.String" />
      <Property Name="PercentDecimalDigits" Type="System.Int32" />
      <Property Name="PercentDecimalSeparator" Type="System.String" />
      <Property Name="PercentGroupSeparator" Type="System.String" />
      <Property Name="PercentSymbol" Type="System.String" />
      <Property Name="PerMilleSymbol" Type="System.String" />
      <Property Name="NativeDigits" Type="System.String[]" />
      <Property Name="DigitSubstitution" Type="System.Globalization.DigitShapes" />
    </Properties>
    <Methods>
      <Method Name="get_InvariantInfo" Return_type="System.Globalization.NumberFormatInfo">
        <Parameters />
      </Method>
      <Method Name="GetInstance" Return_type="System.Globalization.NumberFormatInfo">
        <Parameters>
          <Parameter Name="formatProvider" Type="System.IFormatProvider" />
        </Parameters>
      </Method>
      <Method Name="Clone" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_CurrencyDecimalDigits" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_CurrencyDecimalDigits" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_CurrencyDecimalSeparator" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_CurrencyDecimalSeparator" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_IsReadOnly" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CurrencyGroupSizes" Return_type="System.Int32[]">
        <Parameters />
      </Method>
      <Method Name="set_CurrencyGroupSizes" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32[]" />
        </Parameters>
      </Method>
      <Method Name="get_NumberGroupSizes" Return_type="System.Int32[]">
        <Parameters />
      </Method>
      <Method Name="set_NumberGroupSizes" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32[]" />
        </Parameters>
      </Method>
      <Method Name="get_PercentGroupSizes" Return_type="System.Int32[]">
        <Parameters />
      </Method>
      <Method Name="set_PercentGroupSizes" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32[]" />
        </Parameters>
      </Method>
      <Method Name="get_CurrencyGroupSeparator" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_CurrencyGroupSeparator" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_CurrencySymbol" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_CurrencySymbol" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_CurrentInfo" Return_type="System.Globalization.NumberFormatInfo">
        <Parameters />
      </Method>
      <Method Name="get_NaNSymbol" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_NaNSymbol" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_CurrencyNegativePattern" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_CurrencyNegativePattern" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_NumberNegativePattern" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_NumberNegativePattern" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_PercentPositivePattern" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_PercentPositivePattern" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_PercentNegativePattern" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_PercentNegativePattern" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_NegativeInfinitySymbol" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_NegativeInfinitySymbol" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_NegativeSign" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_NegativeSign" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_NumberDecimalDigits" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_NumberDecimalDigits" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_NumberDecimalSeparator" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_NumberDecimalSeparator" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_NumberGroupSeparator" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_NumberGroupSeparator" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_CurrencyPositivePattern" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_CurrencyPositivePattern" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_PositiveInfinitySymbol" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_PositiveInfinitySymbol" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_PositiveSign" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_PositiveSign" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_PercentDecimalDigits" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_PercentDecimalDigits" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_PercentDecimalSeparator" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_PercentDecimalSeparator" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_PercentGroupSeparator" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_PercentGroupSeparator" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_PercentSymbol" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_PercentSymbol" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_PerMilleSymbol" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_PerMilleSymbol" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_NativeDigits" Return_type="System.String[]">
        <Parameters />
      </Method>
      <Method Name="set_NativeDigits" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String[]" />
        </Parameters>
      </Method>
      <Method Name="get_DigitSubstitution" Return_type="System.Globalization.DigitShapes">
        <Parameters />
      </Method>
      <Method Name="set_DigitSubstitution" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Globalization.DigitShapes" />
        </Parameters>
      </Method>
      <Method Name="GetFormat" Return_type="System.Object">
        <Parameters>
          <Parameter Name="formatType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="ReadOnly" Return_type="System.Globalization.NumberFormatInfo">
        <Parameters>
          <Parameter Name="nfi" Type="System.Globalization.NumberFormatInfo" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Globalization.SortVersion">
    <Properties>
      <Property Name="FullVersion" Type="System.Int32" />
      <Property Name="SortId" Type="System.Guid" />
    </Properties>
    <Methods>
      <Method Name="get_FullVersion" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_SortId" Return_type="System.Guid">
        <Parameters />
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="other" Type="System.Globalization.SortVersion" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="op_Equality" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="left" Type="System.Globalization.SortVersion" />
          <Parameter Name="right" Type="System.Globalization.SortVersion" />
        </Parameters>
      </Method>
      <Method Name="op_Inequality" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="left" Type="System.Globalization.SortVersion" />
          <Parameter Name="right" Type="System.Globalization.SortVersion" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Diagnostics.ConditionalAttribute">
    <Properties>
      <Property Name="ConditionString" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_ConditionString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Diagnostics.Debugger">
    <Properties>
      <Property Name="IsAttached" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="Break" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Launch" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="NotifyOfCrossThreadDependency" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_IsAttached" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Log" Return_type="System.Void">
        <Parameters>
          <Parameter Name="level" Type="System.Int32" />
          <Parameter Name="category" Type="System.String" />
          <Parameter Name="message" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="IsLogging" Return_type="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Diagnostics.DebuggerStepThroughAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Diagnostics.DebuggerStepperBoundaryAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Diagnostics.DebuggerHiddenAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Diagnostics.DebuggerNonUserCodeAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Diagnostics.DebuggableAttribute">
    <Properties>
      <Property Name="IsJITTrackingEnabled" Type="System.Boolean" />
      <Property Name="IsJITOptimizerDisabled" Type="System.Boolean" />
      <Property Name="DebuggingFlags" Type="System.Diagnostics.DebuggableAttribute+DebuggingModes" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_IsJITTrackingEnabled" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsJITOptimizerDisabled" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_DebuggingFlags" Return_type="System.Diagnostics.DebuggableAttribute+DebuggingModes">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Diagnostics.DebuggerBrowsableAttribute">
    <Properties>
      <Property Name="State" Type="System.Diagnostics.DebuggerBrowsableState" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_State" Return_type="System.Diagnostics.DebuggerBrowsableState">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Diagnostics.DebuggerTypeProxyAttribute">
    <Properties>
      <Property Name="ProxyTypeName" Type="System.String" />
      <Property Name="Target" Type="System.Type" />
      <Property Name="TargetTypeName" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_ProxyTypeName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Target" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="get_Target" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_TargetTypeName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_TargetTypeName" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Diagnostics.DebuggerDisplayAttribute">
    <Properties>
      <Property Name="Value" Type="System.String" />
      <Property Name="Name" Type="System.String" />
      <Property Name="Type" Type="System.String" />
      <Property Name="Target" Type="System.Type" />
      <Property Name="TargetTypeName" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Name" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_Type" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Type" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="set_Target" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="get_Target" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_TargetTypeName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_TargetTypeName" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Diagnostics.DebuggerVisualizerAttribute">
    <Properties>
      <Property Name="VisualizerObjectSourceTypeName" Type="System.String" />
      <Property Name="VisualizerTypeName" Type="System.String" />
      <Property Name="Description" Type="System.String" />
      <Property Name="Target" Type="System.Type" />
      <Property Name="TargetTypeName" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_VisualizerObjectSourceTypeName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_VisualizerTypeName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Description" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Description" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="set_Target" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="get_Target" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="set_TargetTypeName" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_TargetTypeName" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Diagnostics.StackTrace">
    <Properties>
      <Property Name="FrameCount" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_FrameCount" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetFrame" Return_type="System.Diagnostics.StackFrame">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetFrames" Return_type="System.Diagnostics.StackFrame[]">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Diagnostics.StackFrame">
    <Properties />
    <Methods>
      <Method Name="GetMethod" Return_type="System.Reflection.MethodBase">
        <Parameters />
      </Method>
      <Method Name="GetNativeOffset" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetILOffset" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetFileName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetFileLineNumber" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetFileColumnNumber" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Diagnostics.SymbolStore.SymDocumentType">
    <Properties />
    <Methods />
  </Type>
  <Type Full_Name="System.Diagnostics.SymbolStore.SymLanguageType">
    <Properties />
    <Methods />
  </Type>
  <Type Full_Name="System.Diagnostics.SymbolStore.SymLanguageVendor">
    <Properties />
    <Methods />
  </Type>
  <Type Full_Name="System.Diagnostics.Contracts.PureAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Diagnostics.Contracts.ContractClassAttribute">
    <Properties>
      <Property Name="TypeContainingContracts" Type="System.Type" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_TypeContainingContracts" Return_type="System.Type">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Diagnostics.Contracts.ContractClassForAttribute">
    <Properties>
      <Property Name="TypeContractsAreFor" Type="System.Type" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_TypeContractsAreFor" Return_type="System.Type">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Diagnostics.Contracts.ContractInvariantMethodAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Diagnostics.Contracts.ContractReferenceAssemblyAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Diagnostics.Contracts.ContractRuntimeIgnoredAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Diagnostics.Contracts.ContractVerificationAttribute">
    <Properties>
      <Property Name="Value" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" Return_type="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Diagnostics.Contracts.ContractPublicPropertyNameAttribute">
    <Properties>
      <Property Name="Name" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Diagnostics.Contracts.ContractArgumentValidatorAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Diagnostics.Contracts.ContractAbbreviatorAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Diagnostics.Contracts.ContractOptionAttribute">
    <Properties>
      <Property Name="Category" Type="System.String" />
      <Property Name="Setting" Type="System.String" />
      <Property Name="Enabled" Type="System.Boolean" />
      <Property Name="Value" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Category" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Setting" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Enabled" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Value" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Diagnostics.Contracts.Contract">
    <Properties />
    <Methods>
      <Method Name="Assume" Return_type="System.Void">
        <Parameters>
          <Parameter Name="condition" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="Assume" Return_type="System.Void">
        <Parameters>
          <Parameter Name="condition" Type="System.Boolean" />
          <Parameter Name="userMessage" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Assert" Return_type="System.Void">
        <Parameters>
          <Parameter Name="condition" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="Assert" Return_type="System.Void">
        <Parameters>
          <Parameter Name="condition" Type="System.Boolean" />
          <Parameter Name="userMessage" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Requires" Return_type="System.Void">
        <Parameters>
          <Parameter Name="condition" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="Requires" Return_type="System.Void">
        <Parameters>
          <Parameter Name="condition" Type="System.Boolean" />
          <Parameter Name="userMessage" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Requires" Return_type="System.Void">
        <Parameters>
          <Parameter Name="condition" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="Requires" Return_type="System.Void">
        <Parameters>
          <Parameter Name="condition" Type="System.Boolean" />
          <Parameter Name="userMessage" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Ensures" Return_type="System.Void">
        <Parameters>
          <Parameter Name="condition" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="Ensures" Return_type="System.Void">
        <Parameters>
          <Parameter Name="condition" Type="System.Boolean" />
          <Parameter Name="userMessage" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="EnsuresOnThrow" Return_type="System.Void">
        <Parameters>
          <Parameter Name="condition" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="EnsuresOnThrow" Return_type="System.Void">
        <Parameters>
          <Parameter Name="condition" Type="System.Boolean" />
          <Parameter Name="userMessage" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Result" Return_type="T">
        <Parameters />
      </Method>
      <Method Name="ValueAtReturn" Return_type="T">
        <Parameters>
          <Parameter Name="value" Type="T&amp;" />
        </Parameters>
      </Method>
      <Method Name="OldValue" Return_type="T">
        <Parameters>
          <Parameter Name="value" Type="T" />
        </Parameters>
      </Method>
      <Method Name="Invariant" Return_type="System.Void">
        <Parameters>
          <Parameter Name="condition" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="Invariant" Return_type="System.Void">
        <Parameters>
          <Parameter Name="condition" Type="System.Boolean" />
          <Parameter Name="userMessage" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ForAll" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="fromInclusive" Type="System.Int32" />
          <Parameter Name="toExclusive" Type="System.Int32" />
          <Parameter Name="predicate" Type="System.Predicate`1[System.Int32]" />
        </Parameters>
      </Method>
      <Method Name="ForAll" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable`1[T]" />
          <Parameter Name="predicate" Type="System.Predicate`1[T]" />
        </Parameters>
      </Method>
      <Method Name="Exists" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="fromInclusive" Type="System.Int32" />
          <Parameter Name="toExclusive" Type="System.Int32" />
          <Parameter Name="predicate" Type="System.Predicate`1[System.Int32]" />
        </Parameters>
      </Method>
      <Method Name="Exists" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable`1[T]" />
          <Parameter Name="predicate" Type="System.Predicate`1[T]" />
        </Parameters>
      </Method>
      <Method Name="EndContractBlock" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="add_ContractFailed" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.EventHandler`1[System.Diagnostics.Contracts.ContractFailedEventArgs]" />
        </Parameters>
      </Method>
      <Method Name="remove_ContractFailed" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.EventHandler`1[System.Diagnostics.Contracts.ContractFailedEventArgs]" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Diagnostics.Contracts.ContractFailedEventArgs">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Condition" Type="System.String" />
      <Property Name="FailureKind" Type="System.Diagnostics.Contracts.ContractFailureKind" />
      <Property Name="OriginalException" Type="System.Exception" />
      <Property Name="Handled" Type="System.Boolean" />
      <Property Name="Unwind" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_Message" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Condition" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_FailureKind" Return_type="System.Diagnostics.Contracts.ContractFailureKind">
        <Parameters />
      </Method>
      <Method Name="get_OriginalException" Return_type="System.Exception">
        <Parameters />
      </Method>
      <Method Name="get_Handled" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="SetHandled" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_Unwind" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="SetUnwind" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Diagnostics.Contracts.Internal.ContractHelper">
    <Properties />
    <Methods>
      <Method Name="RaiseContractFailedEvent" Return_type="System.String">
        <Parameters>
          <Parameter Name="failureKind" Type="System.Diagnostics.Contracts.ContractFailureKind" />
          <Parameter Name="userMessage" Type="System.String" />
          <Parameter Name="conditionText" Type="System.String" />
          <Parameter Name="innerException" Type="System.Exception" />
        </Parameters>
      </Method>
      <Method Name="TriggerFailure" Return_type="System.Void">
        <Parameters>
          <Parameter Name="kind" Type="System.Diagnostics.Contracts.ContractFailureKind" />
          <Parameter Name="displayMessage" Type="System.String" />
          <Parameter Name="userMessage" Type="System.String" />
          <Parameter Name="conditionText" Type="System.String" />
          <Parameter Name="innerException" Type="System.Exception" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Diagnostics.CodeAnalysis.SuppressMessageAttribute">
    <Properties>
      <Property Name="Category" Type="System.String" />
      <Property Name="CheckId" Type="System.String" />
      <Property Name="Scope" Type="System.String" />
      <Property Name="Target" Type="System.String" />
      <Property Name="MessageId" Type="System.String" />
      <Property Name="Justification" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Category" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_CheckId" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Scope" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Scope" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_Target" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Target" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_MessageId" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_MessageId" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_Justification" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Justification" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Diagnostics.Tracing.EventSource">
    <Properties>
      <Property Name="Name" Type="System.String" />
      <Property Name="Guid" Type="System.Guid" />
      <Property Name="Settings" Type="System.Diagnostics.Tracing.EventSourceSettings" />
      <Property Name="CurrentThreadActivityId" Type="System.Guid" />
      <Property Name="ConstructionException" Type="System.Exception" />
    </Properties>
    <Methods>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Guid" Return_type="System.Guid">
        <Parameters />
      </Method>
      <Method Name="IsEnabled" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="IsEnabled" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="level" Type="System.Diagnostics.Tracing.EventLevel" />
          <Parameter Name="keywords" Type="System.Diagnostics.Tracing.EventKeywords" />
        </Parameters>
      </Method>
      <Method Name="IsEnabled" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="level" Type="System.Diagnostics.Tracing.EventLevel" />
          <Parameter Name="keywords" Type="System.Diagnostics.Tracing.EventKeywords" />
          <Parameter Name="channel" Type="System.Diagnostics.Tracing.EventChannel" />
        </Parameters>
      </Method>
      <Method Name="get_Settings" Return_type="System.Diagnostics.Tracing.EventSourceSettings">
        <Parameters />
      </Method>
      <Method Name="GetGuid" Return_type="System.Guid">
        <Parameters>
          <Parameter Name="eventSourceType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetName" Return_type="System.String">
        <Parameters>
          <Parameter Name="eventSourceType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GenerateManifest" Return_type="System.String">
        <Parameters>
          <Parameter Name="eventSourceType" Type="System.Type" />
          <Parameter Name="assemblyPathToIncludeInManifest" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GenerateManifest" Return_type="System.String">
        <Parameters>
          <Parameter Name="eventSourceType" Type="System.Type" />
          <Parameter Name="assemblyPathToIncludeInManifest" Type="System.String" />
          <Parameter Name="flags" Type="System.Diagnostics.Tracing.EventManifestOptions" />
        </Parameters>
      </Method>
      <Method Name="GetSources" Return_type="System.Collections.Generic.IEnumerable`1[System.Diagnostics.Tracing.EventSource]">
        <Parameters />
      </Method>
      <Method Name="SendCommand" Return_type="System.Void">
        <Parameters>
          <Parameter Name="eventSource" Type="System.Diagnostics.Tracing.EventSource" />
          <Parameter Name="command" Type="System.Diagnostics.Tracing.EventCommand" />
          <Parameter Name="commandArguments" Type="System.Collections.Generic.IDictionary`2[System.String,System.String]" />
        </Parameters>
      </Method>
      <Method Name="SetCurrentThreadActivityId" Return_type="System.Void">
        <Parameters>
          <Parameter Name="activityId" Type="System.Guid" />
        </Parameters>
      </Method>
      <Method Name="SetCurrentThreadActivityId" Return_type="System.Void">
        <Parameters>
          <Parameter Name="activityId" Type="System.Guid" />
          <Parameter Name="oldActivityThatWillContinue" Type="System.Guid&amp;" />
        </Parameters>
      </Method>
      <Method Name="get_CurrentThreadActivityId" Return_type="System.Guid">
        <Parameters />
      </Method>
      <Method Name="get_ConstructionException" Return_type="System.Exception">
        <Parameters />
      </Method>
      <Method Name="GetTrait" Return_type="System.String">
        <Parameters>
          <Parameter Name="key" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Dispose" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="eventName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="eventName" Type="System.String" />
          <Parameter Name="options" Type="System.Diagnostics.Tracing.EventSourceOptions" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="eventName" Type="System.String" />
          <Parameter Name="data" Type="T" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="eventName" Type="System.String" />
          <Parameter Name="options" Type="System.Diagnostics.Tracing.EventSourceOptions" />
          <Parameter Name="data" Type="T" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="eventName" Type="System.String" />
          <Parameter Name="options" Type="System.Diagnostics.Tracing.EventSourceOptions&amp;" />
          <Parameter Name="data" Type="T&amp;" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="eventName" Type="System.String" />
          <Parameter Name="options" Type="System.Diagnostics.Tracing.EventSourceOptions&amp;" />
          <Parameter Name="activityId" Type="System.Guid&amp;" />
          <Parameter Name="relatedActivityId" Type="System.Guid&amp;" />
          <Parameter Name="data" Type="T&amp;" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Diagnostics.Tracing.EventListener">
    <Properties />
    <Methods>
      <Method Name="Dispose" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="EnableEvents" Return_type="System.Void">
        <Parameters>
          <Parameter Name="eventSource" Type="System.Diagnostics.Tracing.EventSource" />
          <Parameter Name="level" Type="System.Diagnostics.Tracing.EventLevel" />
        </Parameters>
      </Method>
      <Method Name="EnableEvents" Return_type="System.Void">
        <Parameters>
          <Parameter Name="eventSource" Type="System.Diagnostics.Tracing.EventSource" />
          <Parameter Name="level" Type="System.Diagnostics.Tracing.EventLevel" />
          <Parameter Name="matchAnyKeyword" Type="System.Diagnostics.Tracing.EventKeywords" />
        </Parameters>
      </Method>
      <Method Name="EnableEvents" Return_type="System.Void">
        <Parameters>
          <Parameter Name="eventSource" Type="System.Diagnostics.Tracing.EventSource" />
          <Parameter Name="level" Type="System.Diagnostics.Tracing.EventLevel" />
          <Parameter Name="matchAnyKeyword" Type="System.Diagnostics.Tracing.EventKeywords" />
          <Parameter Name="arguments" Type="System.Collections.Generic.IDictionary`2[System.String,System.String]" />
        </Parameters>
      </Method>
      <Method Name="DisableEvents" Return_type="System.Void">
        <Parameters>
          <Parameter Name="eventSource" Type="System.Diagnostics.Tracing.EventSource" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Diagnostics.Tracing.EventCommandEventArgs">
    <Properties>
      <Property Name="Command" Type="System.Diagnostics.Tracing.EventCommand" />
      <Property Name="Arguments" Type="System.Collections.Generic.IDictionary`2[System.String,System.String]" />
    </Properties>
    <Methods>
      <Method Name="get_Command" Return_type="System.Diagnostics.Tracing.EventCommand">
        <Parameters />
      </Method>
      <Method Name="get_Arguments" Return_type="System.Collections.Generic.IDictionary`2[System.String,System.String]">
        <Parameters />
      </Method>
      <Method Name="EnableEvent" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="eventId" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="DisableEvent" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="eventId" Type="System.Int32" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Diagnostics.Tracing.EventWrittenEventArgs">
    <Properties>
      <Property Name="EventName" Type="System.String" />
      <Property Name="EventId" Type="System.Int32" />
      <Property Name="ActivityId" Type="System.Guid" />
      <Property Name="RelatedActivityId" Type="System.Guid" />
      <Property Name="Payload" Type="System.Collections.ObjectModel.ReadOnlyCollection`1[System.Object]" />
      <Property Name="PayloadNames" Type="System.Collections.ObjectModel.ReadOnlyCollection`1[System.String]" />
      <Property Name="EventSource" Type="System.Diagnostics.Tracing.EventSource" />
      <Property Name="Keywords" Type="System.Diagnostics.Tracing.EventKeywords" />
      <Property Name="Opcode" Type="System.Diagnostics.Tracing.EventOpcode" />
      <Property Name="Task" Type="System.Diagnostics.Tracing.EventTask" />
      <Property Name="Tags" Type="System.Diagnostics.Tracing.EventTags" />
      <Property Name="Message" Type="System.String" />
      <Property Name="Channel" Type="System.Diagnostics.Tracing.EventChannel" />
      <Property Name="Version" Type="System.Byte" />
      <Property Name="Level" Type="System.Diagnostics.Tracing.EventLevel" />
    </Properties>
    <Methods>
      <Method Name="get_EventName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_EventId" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_ActivityId" Return_type="System.Guid">
        <Parameters />
      </Method>
      <Method Name="get_RelatedActivityId" Return_type="System.Guid">
        <Parameters />
      </Method>
      <Method Name="get_Payload" Return_type="System.Collections.ObjectModel.ReadOnlyCollection`1[System.Object]">
        <Parameters />
      </Method>
      <Method Name="get_PayloadNames" Return_type="System.Collections.ObjectModel.ReadOnlyCollection`1[System.String]">
        <Parameters />
      </Method>
      <Method Name="get_EventSource" Return_type="System.Diagnostics.Tracing.EventSource">
        <Parameters />
      </Method>
      <Method Name="get_Keywords" Return_type="System.Diagnostics.Tracing.EventKeywords">
        <Parameters />
      </Method>
      <Method Name="get_Opcode" Return_type="System.Diagnostics.Tracing.EventOpcode">
        <Parameters />
      </Method>
      <Method Name="get_Task" Return_type="System.Diagnostics.Tracing.EventTask">
        <Parameters />
      </Method>
      <Method Name="get_Tags" Return_type="System.Diagnostics.Tracing.EventTags">
        <Parameters />
      </Method>
      <Method Name="get_Message" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Channel" Return_type="System.Diagnostics.Tracing.EventChannel">
        <Parameters />
      </Method>
      <Method Name="get_Version" Return_type="System.Byte">
        <Parameters />
      </Method>
      <Method Name="get_Level" Return_type="System.Diagnostics.Tracing.EventLevel">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Diagnostics.Tracing.EventSourceAttribute">
    <Properties>
      <Property Name="Name" Type="System.String" />
      <Property Name="Guid" Type="System.String" />
      <Property Name="LocalizationResources" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Name" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_Guid" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Guid" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_LocalizationResources" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_LocalizationResources" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Diagnostics.Tracing.EventAttribute">
    <Properties>
      <Property Name="EventId" Type="System.Int32" />
      <Property Name="Level" Type="System.Diagnostics.Tracing.EventLevel" />
      <Property Name="Keywords" Type="System.Diagnostics.Tracing.EventKeywords" />
      <Property Name="Opcode" Type="System.Diagnostics.Tracing.EventOpcode" />
      <Property Name="Task" Type="System.Diagnostics.Tracing.EventTask" />
      <Property Name="Channel" Type="System.Diagnostics.Tracing.EventChannel" />
      <Property Name="Version" Type="System.Byte" />
      <Property Name="Message" Type="System.String" />
      <Property Name="Tags" Type="System.Diagnostics.Tracing.EventTags" />
      <Property Name="ActivityOptions" Type="System.Diagnostics.Tracing.EventActivityOptions" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_EventId" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_Level" Return_type="System.Diagnostics.Tracing.EventLevel">
        <Parameters />
      </Method>
      <Method Name="set_Level" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Diagnostics.Tracing.EventLevel" />
        </Parameters>
      </Method>
      <Method Name="get_Keywords" Return_type="System.Diagnostics.Tracing.EventKeywords">
        <Parameters />
      </Method>
      <Method Name="set_Keywords" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Diagnostics.Tracing.EventKeywords" />
        </Parameters>
      </Method>
      <Method Name="get_Opcode" Return_type="System.Diagnostics.Tracing.EventOpcode">
        <Parameters />
      </Method>
      <Method Name="set_Opcode" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Diagnostics.Tracing.EventOpcode" />
        </Parameters>
      </Method>
      <Method Name="get_Task" Return_type="System.Diagnostics.Tracing.EventTask">
        <Parameters />
      </Method>
      <Method Name="set_Task" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Diagnostics.Tracing.EventTask" />
        </Parameters>
      </Method>
      <Method Name="get_Channel" Return_type="System.Diagnostics.Tracing.EventChannel">
        <Parameters />
      </Method>
      <Method Name="set_Channel" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Diagnostics.Tracing.EventChannel" />
        </Parameters>
      </Method>
      <Method Name="get_Version" Return_type="System.Byte">
        <Parameters />
      </Method>
      <Method Name="set_Version" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Byte" />
        </Parameters>
      </Method>
      <Method Name="get_Message" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Message" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_Tags" Return_type="System.Diagnostics.Tracing.EventTags">
        <Parameters />
      </Method>
      <Method Name="set_Tags" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Diagnostics.Tracing.EventTags" />
        </Parameters>
      </Method>
      <Method Name="get_ActivityOptions" Return_type="System.Diagnostics.Tracing.EventActivityOptions">
        <Parameters />
      </Method>
      <Method Name="set_ActivityOptions" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Diagnostics.Tracing.EventActivityOptions" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Diagnostics.Tracing.NonEventAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Diagnostics.Tracing.EventSourceException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Diagnostics.Tracing.EventDataAttribute">
    <Properties>
      <Property Name="Name" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Name" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Diagnostics.Tracing.EventFieldAttribute">
    <Properties>
      <Property Name="Tags" Type="System.Diagnostics.Tracing.EventFieldTags" />
      <Property Name="Format" Type="System.Diagnostics.Tracing.EventFieldFormat" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Tags" Return_type="System.Diagnostics.Tracing.EventFieldTags">
        <Parameters />
      </Method>
      <Method Name="set_Tags" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Diagnostics.Tracing.EventFieldTags" />
        </Parameters>
      </Method>
      <Method Name="get_Format" Return_type="System.Diagnostics.Tracing.EventFieldFormat">
        <Parameters />
      </Method>
      <Method Name="set_Format" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Diagnostics.Tracing.EventFieldFormat" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Diagnostics.Tracing.EventIgnoreAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Collections.CaseInsensitiveComparer">
    <Properties>
      <Property Name="Default" Type="System.Collections.CaseInsensitiveComparer" />
      <Property Name="DefaultInvariant" Type="System.Collections.CaseInsensitiveComparer" />
    </Properties>
    <Methods>
      <Method Name="get_Default" Return_type="System.Collections.CaseInsensitiveComparer">
        <Parameters />
      </Method>
      <Method Name="get_DefaultInvariant" Return_type="System.Collections.CaseInsensitiveComparer">
        <Parameters />
      </Method>
      <Method Name="Compare" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="a" Type="System.Object" />
          <Parameter Name="b" Type="System.Object" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Collections.CaseInsensitiveHashCodeProvider">
    <Properties>
      <Property Name="Default" Type="System.Collections.CaseInsensitiveHashCodeProvider" />
      <Property Name="DefaultInvariant" Type="System.Collections.CaseInsensitiveHashCodeProvider" />
    </Properties>
    <Methods>
      <Method Name="get_Default" Return_type="System.Collections.CaseInsensitiveHashCodeProvider">
        <Parameters />
      </Method>
      <Method Name="get_DefaultInvariant" Return_type="System.Collections.CaseInsensitiveHashCodeProvider">
        <Parameters />
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Collections.CollectionBase">
    <Properties>
      <Property Name="Capacity" Type="System.Int32" />
      <Property Name="Count" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Capacity" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_Capacity" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_Count" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Clear" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="RemoveAt" Return_type="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetEnumerator" Return_type="System.Collections.IEnumerator">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Collections.DictionaryBase">
    <Properties>
      <Property Name="Count" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Count" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="CopyTo" Return_type="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Array" />
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Clear" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="GetEnumerator" Return_type="System.Collections.IDictionaryEnumerator">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Collections.ReadOnlyCollectionBase">
    <Properties>
      <Property Name="Count" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Count" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetEnumerator" Return_type="System.Collections.IEnumerator">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Collections.Queue">
    <Properties>
      <Property Name="Count" Type="System.Int32" />
      <Property Name="IsSynchronized" Type="System.Boolean" />
      <Property Name="SyncRoot" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Count" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Clone" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_IsSynchronized" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_SyncRoot" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="Clear" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="CopyTo" Return_type="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Array" />
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Enqueue" Return_type="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetEnumerator" Return_type="System.Collections.IEnumerator">
        <Parameters />
      </Method>
      <Method Name="Dequeue" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="Peek" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="Synchronized" Return_type="System.Collections.Queue">
        <Parameters>
          <Parameter Name="queue" Type="System.Collections.Queue" />
        </Parameters>
      </Method>
      <Method Name="Contains" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="ToArray" Return_type="System.Object[]">
        <Parameters />
      </Method>
      <Method Name="TrimToSize" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Collections.ArrayList">
    <Properties>
      <Property Name="Capacity" Type="System.Int32" />
      <Property Name="Count" Type="System.Int32" />
      <Property Name="IsFixedSize" Type="System.Boolean" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="IsSynchronized" Type="System.Boolean" />
      <Property Name="SyncRoot" Type="System.Object" />
      <Property Name="Item" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Capacity" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_Capacity" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_Count" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_IsFixedSize" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsReadOnly" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSynchronized" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_SyncRoot" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_Item" Return_type="System.Object">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="set_Item" Return_type="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Adapter" Return_type="System.Collections.ArrayList">
        <Parameters>
          <Parameter Name="list" Type="System.Collections.IList" />
        </Parameters>
      </Method>
      <Method Name="Add" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="AddRange" Return_type="System.Void">
        <Parameters>
          <Parameter Name="c" Type="System.Collections.ICollection" />
        </Parameters>
      </Method>
      <Method Name="BinarySearch" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="comparer" Type="System.Collections.IComparer" />
        </Parameters>
      </Method>
      <Method Name="BinarySearch" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="BinarySearch" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="comparer" Type="System.Collections.IComparer" />
        </Parameters>
      </Method>
      <Method Name="Clear" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Clone" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="Contains" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="item" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="CopyTo" Return_type="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Array" />
        </Parameters>
      </Method>
      <Method Name="CopyTo" Return_type="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Array" />
          <Parameter Name="arrayIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="CopyTo" Return_type="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="array" Type="System.Array" />
          <Parameter Name="arrayIndex" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="FixedSize" Return_type="System.Collections.IList">
        <Parameters>
          <Parameter Name="list" Type="System.Collections.IList" />
        </Parameters>
      </Method>
      <Method Name="FixedSize" Return_type="System.Collections.ArrayList">
        <Parameters>
          <Parameter Name="list" Type="System.Collections.ArrayList" />
        </Parameters>
      </Method>
      <Method Name="GetEnumerator" Return_type="System.Collections.IEnumerator">
        <Parameters />
      </Method>
      <Method Name="GetEnumerator" Return_type="System.Collections.IEnumerator">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="startIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Insert" Return_type="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="InsertRange" Return_type="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="c" Type="System.Collections.ICollection" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="startIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ReadOnly" Return_type="System.Collections.IList">
        <Parameters>
          <Parameter Name="list" Type="System.Collections.IList" />
        </Parameters>
      </Method>
      <Method Name="ReadOnly" Return_type="System.Collections.ArrayList">
        <Parameters>
          <Parameter Name="list" Type="System.Collections.ArrayList" />
        </Parameters>
      </Method>
      <Method Name="Remove" Return_type="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="RemoveAt" Return_type="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="RemoveRange" Return_type="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Repeat" Return_type="System.Collections.ArrayList">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Reverse" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Reverse" Return_type="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="SetRange" Return_type="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="c" Type="System.Collections.ICollection" />
        </Parameters>
      </Method>
      <Method Name="GetRange" Return_type="System.Collections.ArrayList">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Sort" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Sort" Return_type="System.Void">
        <Parameters>
          <Parameter Name="comparer" Type="System.Collections.IComparer" />
        </Parameters>
      </Method>
      <Method Name="Sort" Return_type="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
          <Parameter Name="comparer" Type="System.Collections.IComparer" />
        </Parameters>
      </Method>
      <Method Name="Synchronized" Return_type="System.Collections.IList">
        <Parameters>
          <Parameter Name="list" Type="System.Collections.IList" />
        </Parameters>
      </Method>
      <Method Name="Synchronized" Return_type="System.Collections.ArrayList">
        <Parameters>
          <Parameter Name="list" Type="System.Collections.ArrayList" />
        </Parameters>
      </Method>
      <Method Name="ToArray" Return_type="System.Object[]">
        <Parameters />
      </Method>
      <Method Name="ToArray" Return_type="System.Array">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="TrimToSize" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Collections.BitArray">
    <Properties>
      <Property Name="Item" Type="System.Boolean" />
      <Property Name="Length" Type="System.Int32" />
      <Property Name="Count" Type="System.Int32" />
      <Property Name="SyncRoot" Type="System.Object" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="IsSynchronized" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="Get" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Set" Return_type="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_Item" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="set_Item" Return_type="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="SetAll" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="And" Return_type="System.Collections.BitArray">
        <Parameters>
          <Parameter Name="value" Type="System.Collections.BitArray" />
        </Parameters>
      </Method>
      <Method Name="Or" Return_type="System.Collections.BitArray">
        <Parameters>
          <Parameter Name="value" Type="System.Collections.BitArray" />
        </Parameters>
      </Method>
      <Method Name="Xor" Return_type="System.Collections.BitArray">
        <Parameters>
          <Parameter Name="value" Type="System.Collections.BitArray" />
        </Parameters>
      </Method>
      <Method Name="Not" Return_type="System.Collections.BitArray">
        <Parameters />
      </Method>
      <Method Name="get_Length" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_Length" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="CopyTo" Return_type="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Array" />
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_Count" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Clone" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_SyncRoot" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_IsReadOnly" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSynchronized" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetEnumerator" Return_type="System.Collections.IEnumerator">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Collections.Stack">
    <Properties>
      <Property Name="Count" Type="System.Int32" />
      <Property Name="IsSynchronized" Type="System.Boolean" />
      <Property Name="SyncRoot" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Count" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_IsSynchronized" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_SyncRoot" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="Clear" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Clone" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="Contains" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="CopyTo" Return_type="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Array" />
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetEnumerator" Return_type="System.Collections.IEnumerator">
        <Parameters />
      </Method>
      <Method Name="Peek" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="Pop" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="Push" Return_type="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Synchronized" Return_type="System.Collections.Stack">
        <Parameters>
          <Parameter Name="stack" Type="System.Collections.Stack" />
        </Parameters>
      </Method>
      <Method Name="ToArray" Return_type="System.Object[]">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Collections.Comparer">
    <Properties />
    <Methods>
      <Method Name="Compare" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="a" Type="System.Object" />
          <Parameter Name="b" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetObjectData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Collections.Hashtable">
    <Properties>
      <Property Name="Item" Type="System.Object" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="IsFixedSize" Type="System.Boolean" />
      <Property Name="IsSynchronized" Type="System.Boolean" />
      <Property Name="Keys" Type="System.Collections.ICollection" />
      <Property Name="Values" Type="System.Collections.ICollection" />
      <Property Name="SyncRoot" Type="System.Object" />
      <Property Name="Count" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="Add" Return_type="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Object" />
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Clear" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Clone" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="Contains" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="key" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="ContainsKey" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="key" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="ContainsValue" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="CopyTo" Return_type="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Array" />
          <Parameter Name="arrayIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_Item" Return_type="System.Object">
        <Parameters>
          <Parameter Name="key" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="set_Item" Return_type="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Object" />
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetEnumerator" Return_type="System.Collections.IDictionaryEnumerator">
        <Parameters />
      </Method>
      <Method Name="get_IsReadOnly" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsFixedSize" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSynchronized" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Keys" Return_type="System.Collections.ICollection">
        <Parameters />
      </Method>
      <Method Name="get_Values" Return_type="System.Collections.ICollection">
        <Parameters />
      </Method>
      <Method Name="Remove" Return_type="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="get_SyncRoot" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_Count" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Synchronized" Return_type="System.Collections.Hashtable">
        <Parameters>
          <Parameter Name="table" Type="System.Collections.Hashtable" />
        </Parameters>
      </Method>
      <Method Name="GetObjectData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
      <Method Name="OnDeserialization" Return_type="System.Void">
        <Parameters>
          <Parameter Name="sender" Type="System.Object" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Collections.SortedList">
    <Properties>
      <Property Name="Capacity" Type="System.Int32" />
      <Property Name="Count" Type="System.Int32" />
      <Property Name="Keys" Type="System.Collections.ICollection" />
      <Property Name="Values" Type="System.Collections.ICollection" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="IsFixedSize" Type="System.Boolean" />
      <Property Name="IsSynchronized" Type="System.Boolean" />
      <Property Name="SyncRoot" Type="System.Object" />
      <Property Name="Item" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Add" Return_type="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Object" />
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="get_Capacity" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_Capacity" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_Count" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_Keys" Return_type="System.Collections.ICollection">
        <Parameters />
      </Method>
      <Method Name="get_Values" Return_type="System.Collections.ICollection">
        <Parameters />
      </Method>
      <Method Name="get_IsReadOnly" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsFixedSize" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSynchronized" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_SyncRoot" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="Clear" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Clone" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="Contains" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="key" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="ContainsKey" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="key" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="ContainsValue" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="CopyTo" Return_type="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Array" />
          <Parameter Name="arrayIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetByIndex" Return_type="System.Object">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetEnumerator" Return_type="System.Collections.IDictionaryEnumerator">
        <Parameters />
      </Method>
      <Method Name="GetKey" Return_type="System.Object">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetKeyList" Return_type="System.Collections.IList">
        <Parameters />
      </Method>
      <Method Name="GetValueList" Return_type="System.Collections.IList">
        <Parameters />
      </Method>
      <Method Name="get_Item" Return_type="System.Object">
        <Parameters>
          <Parameter Name="key" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="set_Item" Return_type="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Object" />
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="IndexOfKey" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="key" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="IndexOfValue" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="RemoveAt" Return_type="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Remove" Return_type="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="SetByIndex" Return_type="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Synchronized" Return_type="System.Collections.SortedList">
        <Parameters>
          <Parameter Name="list" Type="System.Collections.SortedList" />
        </Parameters>
      </Method>
      <Method Name="TrimToSize" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Collections.StructuralComparisons">
    <Properties>
      <Property Name="StructuralComparer" Type="System.Collections.IComparer" />
      <Property Name="StructuralEqualityComparer" Type="System.Collections.IEqualityComparer" />
    </Properties>
    <Methods>
      <Method Name="get_StructuralComparer" Return_type="System.Collections.IComparer">
        <Parameters />
      </Method>
      <Method Name="get_StructuralEqualityComparer" Return_type="System.Collections.IEqualityComparer">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Collections.Concurrent.ConcurrentStack`1">
    <Properties>
      <Property Name="IsEmpty" Type="System.Boolean" />
      <Property Name="Count" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Count" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Push" Return_type="System.Void">
        <Parameters>
          <Parameter Name="item" Type="T" />
        </Parameters>
      </Method>
      <Method Name="TryPop" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="result" Type="T&amp;" />
        </Parameters>
      </Method>
      <Method Name="GetEnumerator" Return_type="System.Collections.Generic.IEnumerator`1[T]">
        <Parameters />
      </Method>
      <Method Name="get_IsEmpty" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Clear" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="CopyTo" Return_type="System.Void">
        <Parameters>
          <Parameter Name="array" Type="T[]" />
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="PushRange" Return_type="System.Void">
        <Parameters>
          <Parameter Name="items" Type="T[]" />
        </Parameters>
      </Method>
      <Method Name="PushRange" Return_type="System.Void">
        <Parameters>
          <Parameter Name="items" Type="T[]" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="TryPeek" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="result" Type="T&amp;" />
        </Parameters>
      </Method>
      <Method Name="TryPopRange" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="items" Type="T[]" />
        </Parameters>
      </Method>
      <Method Name="TryPopRange" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="items" Type="T[]" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToArray" Return_type="T[]">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Collections.Concurrent.ConcurrentDictionary`2">
    <Properties>
      <Property Name="Item" Type="TValue" />
      <Property Name="Count" Type="System.Int32" />
      <Property Name="IsEmpty" Type="System.Boolean" />
      <Property Name="Keys" Type="System.Collections.Generic.ICollection`1[TKey]" />
      <Property Name="Values" Type="System.Collections.Generic.ICollection`1[TValue]" />
    </Properties>
    <Methods>
      <Method Name="TryAdd" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="key" Type="TKey" />
          <Parameter Name="value" Type="TValue" />
        </Parameters>
      </Method>
      <Method Name="ContainsKey" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="key" Type="TKey" />
        </Parameters>
      </Method>
      <Method Name="TryGetValue" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="key" Type="TKey" />
          <Parameter Name="value" Type="TValue&amp;" />
        </Parameters>
      </Method>
      <Method Name="GetEnumerator" Return_type="System.Collections.Generic.IEnumerator`1[System.Collections.Generic.KeyValuePair`2[TKey,TValue]]">
        <Parameters />
      </Method>
      <Method Name="GetOrAdd" Return_type="TValue">
        <Parameters>
          <Parameter Name="key" Type="TKey" />
          <Parameter Name="valueFactory" Type="System.Func`2[TKey,TValue]" />
        </Parameters>
      </Method>
      <Method Name="TryRemove" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="key" Type="TKey" />
          <Parameter Name="value" Type="TValue&amp;" />
        </Parameters>
      </Method>
      <Method Name="TryUpdate" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="key" Type="TKey" />
          <Parameter Name="newValue" Type="TValue" />
          <Parameter Name="comparisonValue" Type="TValue" />
        </Parameters>
      </Method>
      <Method Name="Clear" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="ToArray" Return_type="System.Collections.Generic.KeyValuePair`2[TKey,TValue][]">
        <Parameters />
      </Method>
      <Method Name="get_Item" Return_type="TValue">
        <Parameters>
          <Parameter Name="key" Type="TKey" />
        </Parameters>
      </Method>
      <Method Name="set_Item" Return_type="System.Void">
        <Parameters>
          <Parameter Name="key" Type="TKey" />
          <Parameter Name="value" Type="TValue" />
        </Parameters>
      </Method>
      <Method Name="get_Count" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetOrAdd" Return_type="TValue">
        <Parameters>
          <Parameter Name="key" Type="TKey" />
          <Parameter Name="value" Type="TValue" />
        </Parameters>
      </Method>
      <Method Name="AddOrUpdate" Return_type="TValue">
        <Parameters>
          <Parameter Name="key" Type="TKey" />
          <Parameter Name="addValueFactory" Type="System.Func`2[TKey,TValue]" />
          <Parameter Name="updateValueFactory" Type="System.Func`3[TKey,TValue,TValue]" />
        </Parameters>
      </Method>
      <Method Name="AddOrUpdate" Return_type="TValue">
        <Parameters>
          <Parameter Name="key" Type="TKey" />
          <Parameter Name="addValue" Type="TValue" />
          <Parameter Name="updateValueFactory" Type="System.Func`3[TKey,TValue,TValue]" />
        </Parameters>
      </Method>
      <Method Name="get_IsEmpty" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Keys" Return_type="System.Collections.Generic.ICollection`1[TKey]">
        <Parameters />
      </Method>
      <Method Name="get_Values" Return_type="System.Collections.Generic.ICollection`1[TValue]">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Collections.Concurrent.ConcurrentQueue`1">
    <Properties>
      <Property Name="IsEmpty" Type="System.Boolean" />
      <Property Name="Count" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Count" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Enqueue" Return_type="System.Void">
        <Parameters>
          <Parameter Name="item" Type="T" />
        </Parameters>
      </Method>
      <Method Name="TryDequeue" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="result" Type="T&amp;" />
        </Parameters>
      </Method>
      <Method Name="get_IsEmpty" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="ToArray" Return_type="T[]">
        <Parameters />
      </Method>
      <Method Name="CopyTo" Return_type="System.Void">
        <Parameters>
          <Parameter Name="array" Type="T[]" />
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetEnumerator" Return_type="System.Collections.Generic.IEnumerator`1[T]">
        <Parameters />
      </Method>
      <Method Name="TryPeek" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="result" Type="T&amp;" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Collections.Concurrent.Partitioner`1">
    <Properties>
      <Property Name="SupportsDynamicPartitions" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="GetPartitions" Return_type="System.Collections.Generic.IList`1[System.Collections.Generic.IEnumerator`1[TSource]]">
        <Parameters>
          <Parameter Name="partitionCount" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_SupportsDynamicPartitions" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetDynamicPartitions" Return_type="System.Collections.Generic.IEnumerable`1[TSource]">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Collections.Concurrent.OrderablePartitioner`1">
    <Properties>
      <Property Name="KeysOrderedInEachPartition" Type="System.Boolean" />
      <Property Name="KeysOrderedAcrossPartitions" Type="System.Boolean" />
      <Property Name="KeysNormalized" Type="System.Boolean" />
      <Property Name="SupportsDynamicPartitions" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="GetOrderablePartitions" Return_type="System.Collections.Generic.IList`1[System.Collections.Generic.IEnumerator`1[System.Collections.Generic.KeyValuePair`2[System.Int64,TSource]]]">
        <Parameters>
          <Parameter Name="partitionCount" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetOrderableDynamicPartitions" Return_type="System.Collections.Generic.IEnumerable`1[System.Collections.Generic.KeyValuePair`2[System.Int64,TSource]]">
        <Parameters />
      </Method>
      <Method Name="get_KeysOrderedInEachPartition" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_KeysOrderedAcrossPartitions" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_KeysNormalized" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetPartitions" Return_type="System.Collections.Generic.IList`1[System.Collections.Generic.IEnumerator`1[TSource]]">
        <Parameters>
          <Parameter Name="partitionCount" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetDynamicPartitions" Return_type="System.Collections.Generic.IEnumerable`1[TSource]">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Collections.Concurrent.Partitioner">
    <Properties />
    <Methods>
      <Method Name="Create" Return_type="System.Collections.Concurrent.OrderablePartitioner`1[TSource]">
        <Parameters>
          <Parameter Name="list" Type="System.Collections.Generic.IList`1[TSource]" />
          <Parameter Name="loadBalance" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="Create" Return_type="System.Collections.Concurrent.OrderablePartitioner`1[TSource]">
        <Parameters>
          <Parameter Name="array" Type="TSource[]" />
          <Parameter Name="loadBalance" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="Create" Return_type="System.Collections.Concurrent.OrderablePartitioner`1[TSource]">
        <Parameters>
          <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1[TSource]" />
        </Parameters>
      </Method>
      <Method Name="Create" Return_type="System.Collections.Concurrent.OrderablePartitioner`1[TSource]">
        <Parameters>
          <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1[TSource]" />
          <Parameter Name="partitionerOptions" Type="System.Collections.Concurrent.EnumerablePartitionerOptions" />
        </Parameters>
      </Method>
      <Method Name="Create" Return_type="System.Collections.Concurrent.OrderablePartitioner`1[System.Tuple`2[System.Int64,System.Int64]]">
        <Parameters>
          <Parameter Name="fromInclusive" Type="System.Int64" />
          <Parameter Name="toExclusive" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="Create" Return_type="System.Collections.Concurrent.OrderablePartitioner`1[System.Tuple`2[System.Int64,System.Int64]]">
        <Parameters>
          <Parameter Name="fromInclusive" Type="System.Int64" />
          <Parameter Name="toExclusive" Type="System.Int64" />
          <Parameter Name="rangeSize" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="Create" Return_type="System.Collections.Concurrent.OrderablePartitioner`1[System.Tuple`2[System.Int32,System.Int32]]">
        <Parameters>
          <Parameter Name="fromInclusive" Type="System.Int32" />
          <Parameter Name="toExclusive" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Create" Return_type="System.Collections.Concurrent.OrderablePartitioner`1[System.Tuple`2[System.Int32,System.Int32]]">
        <Parameters>
          <Parameter Name="fromInclusive" Type="System.Int32" />
          <Parameter Name="toExclusive" Type="System.Int32" />
          <Parameter Name="rangeSize" Type="System.Int32" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Collections.ObjectModel.Collection`1">
    <Properties>
      <Property Name="Count" Type="System.Int32" />
      <Property Name="Item" Type="T" />
    </Properties>
    <Methods>
      <Method Name="get_Count" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_Item" Return_type="T">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="set_Item" Return_type="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="value" Type="T" />
        </Parameters>
      </Method>
      <Method Name="Add" Return_type="System.Void">
        <Parameters>
          <Parameter Name="item" Type="T" />
        </Parameters>
      </Method>
      <Method Name="Clear" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Contains" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="item" Type="T" />
        </Parameters>
      </Method>
      <Method Name="GetEnumerator" Return_type="System.Collections.Generic.IEnumerator`1[T]">
        <Parameters />
      </Method>
      <Method Name="IndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="item" Type="T" />
        </Parameters>
      </Method>
      <Method Name="Insert" Return_type="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="item" Type="T" />
        </Parameters>
      </Method>
      <Method Name="Remove" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="item" Type="T" />
        </Parameters>
      </Method>
      <Method Name="RemoveAt" Return_type="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="CopyTo" Return_type="System.Void">
        <Parameters>
          <Parameter Name="array" Type="T[]" />
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Collections.ObjectModel.ReadOnlyCollection`1">
    <Properties>
      <Property Name="Count" Type="System.Int32" />
      <Property Name="Item" Type="T" />
    </Properties>
    <Methods>
      <Method Name="get_Count" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_Item" Return_type="T">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Contains" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="T" />
        </Parameters>
      </Method>
      <Method Name="GetEnumerator" Return_type="System.Collections.Generic.IEnumerator`1[T]">
        <Parameters />
      </Method>
      <Method Name="IndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="T" />
        </Parameters>
      </Method>
      <Method Name="CopyTo" Return_type="System.Void">
        <Parameters>
          <Parameter Name="array" Type="T[]" />
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Collections.ObjectModel.ReadOnlyDictionary`2">
    <Properties>
      <Property Name="Keys" Type="System.Collections.ObjectModel.ReadOnlyDictionary`2+KeyCollection[TKey,TValue]" />
      <Property Name="Values" Type="System.Collections.ObjectModel.ReadOnlyDictionary`2+ValueCollection[TKey,TValue]" />
      <Property Name="Item" Type="TValue" />
      <Property Name="Count" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Keys" Return_type="System.Collections.ObjectModel.ReadOnlyDictionary`2+KeyCollection[TKey,TValue]">
        <Parameters />
      </Method>
      <Method Name="get_Values" Return_type="System.Collections.ObjectModel.ReadOnlyDictionary`2+ValueCollection[TKey,TValue]">
        <Parameters />
      </Method>
      <Method Name="get_Item" Return_type="TValue">
        <Parameters>
          <Parameter Name="key" Type="TKey" />
        </Parameters>
      </Method>
      <Method Name="get_Count" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetEnumerator" Return_type="System.Collections.Generic.IEnumerator`1[System.Collections.Generic.KeyValuePair`2[TKey,TValue]]">
        <Parameters />
      </Method>
      <Method Name="ContainsKey" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="key" Type="TKey" />
        </Parameters>
      </Method>
      <Method Name="TryGetValue" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="key" Type="TKey" />
          <Parameter Name="value" Type="TValue&amp;" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Collections.ObjectModel.KeyedCollection`2">
    <Properties>
      <Property Name="Comparer" Type="System.Collections.Generic.IEqualityComparer`1[TKey]" />
      <Property Name="Item" Type="TItem" />
      <Property Name="Count" Type="System.Int32" />
      <Property Name="Item" Type="TItem" />
    </Properties>
    <Methods>
      <Method Name="Contains" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="key" Type="TKey" />
        </Parameters>
      </Method>
      <Method Name="get_Comparer" Return_type="System.Collections.Generic.IEqualityComparer`1[TKey]">
        <Parameters />
      </Method>
      <Method Name="get_Item" Return_type="TItem">
        <Parameters>
          <Parameter Name="key" Type="TKey" />
        </Parameters>
      </Method>
      <Method Name="Remove" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="key" Type="TKey" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Collections.Generic.Comparer`1">
    <Properties>
      <Property Name="Default" Type="System.Collections.Generic.Comparer`1[T]" />
    </Properties>
    <Methods>
      <Method Name="get_Default" Return_type="System.Collections.Generic.Comparer`1[T]">
        <Parameters />
      </Method>
      <Method Name="Create" Return_type="System.Collections.Generic.Comparer`1[T]">
        <Parameters>
          <Parameter Name="comparison" Type="System.Comparison`1[T]" />
        </Parameters>
      </Method>
      <Method Name="Compare" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="x" Type="T" />
          <Parameter Name="y" Type="T" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Collections.Generic.Dictionary`2">
    <Properties>
      <Property Name="Comparer" Type="System.Collections.Generic.IEqualityComparer`1[TKey]" />
      <Property Name="Count" Type="System.Int32" />
      <Property Name="Keys" Type="System.Collections.Generic.Dictionary`2+KeyCollection[TKey,TValue]" />
      <Property Name="Values" Type="System.Collections.Generic.Dictionary`2+ValueCollection[TKey,TValue]" />
      <Property Name="Item" Type="TValue" />
    </Properties>
    <Methods>
      <Method Name="get_Comparer" Return_type="System.Collections.Generic.IEqualityComparer`1[TKey]">
        <Parameters />
      </Method>
      <Method Name="get_Count" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_Keys" Return_type="System.Collections.Generic.Dictionary`2+KeyCollection[TKey,TValue]">
        <Parameters />
      </Method>
      <Method Name="get_Values" Return_type="System.Collections.Generic.Dictionary`2+ValueCollection[TKey,TValue]">
        <Parameters />
      </Method>
      <Method Name="get_Item" Return_type="TValue">
        <Parameters>
          <Parameter Name="key" Type="TKey" />
        </Parameters>
      </Method>
      <Method Name="set_Item" Return_type="System.Void">
        <Parameters>
          <Parameter Name="key" Type="TKey" />
          <Parameter Name="value" Type="TValue" />
        </Parameters>
      </Method>
      <Method Name="Add" Return_type="System.Void">
        <Parameters>
          <Parameter Name="key" Type="TKey" />
          <Parameter Name="value" Type="TValue" />
        </Parameters>
      </Method>
      <Method Name="Clear" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="ContainsKey" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="key" Type="TKey" />
        </Parameters>
      </Method>
      <Method Name="GetEnumerator" Return_type="System.Collections.Generic.Dictionary`2+Enumerator[TKey,TValue]">
        <Parameters />
      </Method>
      <Method Name="Remove" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="key" Type="TKey" />
        </Parameters>
      </Method>
      <Method Name="TryGetValue" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="key" Type="TKey" />
          <Parameter Name="value" Type="TValue&amp;" />
        </Parameters>
      </Method>
      <Method Name="ContainsValue" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="TValue" />
        </Parameters>
      </Method>
      <Method Name="GetObjectData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
      <Method Name="OnDeserialization" Return_type="System.Void">
        <Parameters>
          <Parameter Name="sender" Type="System.Object" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Collections.Generic.EqualityComparer`1">
    <Properties>
      <Property Name="Default" Type="System.Collections.Generic.EqualityComparer`1[T]" />
    </Properties>
    <Methods>
      <Method Name="get_Default" Return_type="System.Collections.Generic.EqualityComparer`1[T]">
        <Parameters />
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="x" Type="T" />
          <Parameter Name="y" Type="T" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="obj" Type="T" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Collections.Generic.KeyNotFoundException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Collections.Generic.List`1">
    <Properties>
      <Property Name="Capacity" Type="System.Int32" />
      <Property Name="Count" Type="System.Int32" />
      <Property Name="Item" Type="T" />
    </Properties>
    <Methods>
      <Method Name="get_Capacity" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_Capacity" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_Count" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_Item" Return_type="T">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="set_Item" Return_type="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="value" Type="T" />
        </Parameters>
      </Method>
      <Method Name="Add" Return_type="System.Void">
        <Parameters>
          <Parameter Name="item" Type="T" />
        </Parameters>
      </Method>
      <Method Name="AddRange" Return_type="System.Void">
        <Parameters>
          <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable`1[T]" />
        </Parameters>
      </Method>
      <Method Name="AsReadOnly" Return_type="System.Collections.ObjectModel.ReadOnlyCollection`1[T]">
        <Parameters />
      </Method>
      <Method Name="BinarySearch" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
          <Parameter Name="item" Type="T" />
          <Parameter Name="comparer" Type="System.Collections.Generic.IComparer`1[T]" />
        </Parameters>
      </Method>
      <Method Name="BinarySearch" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="item" Type="T" />
        </Parameters>
      </Method>
      <Method Name="Clear" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Contains" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="item" Type="T" />
        </Parameters>
      </Method>
      <Method Name="ConvertAll" Return_type="System.Collections.Generic.List`1[TOutput]">
        <Parameters>
          <Parameter Name="converter" Type="System.Converter`2[T,TOutput]" />
        </Parameters>
      </Method>
      <Method Name="CopyTo" Return_type="System.Void">
        <Parameters>
          <Parameter Name="array" Type="T[]" />
        </Parameters>
      </Method>
      <Method Name="CopyTo" Return_type="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="array" Type="T[]" />
          <Parameter Name="arrayIndex" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="CopyTo" Return_type="System.Void">
        <Parameters>
          <Parameter Name="array" Type="T[]" />
          <Parameter Name="arrayIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="FindIndex" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
          <Parameter Name="match" Type="System.Predicate`1[T]" />
        </Parameters>
      </Method>
      <Method Name="ForEach" Return_type="System.Void">
        <Parameters>
          <Parameter Name="action" Type="System.Action`1[T]" />
        </Parameters>
      </Method>
      <Method Name="GetEnumerator" Return_type="System.Collections.Generic.List`1+Enumerator[T]">
        <Parameters />
      </Method>
      <Method Name="IndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="item" Type="T" />
        </Parameters>
      </Method>
      <Method Name="Insert" Return_type="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="item" Type="T" />
        </Parameters>
      </Method>
      <Method Name="InsertRange" Return_type="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="collection" Type="System.Collections.Generic.IEnumerable`1[T]" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="item" Type="T" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Remove" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="item" Type="T" />
        </Parameters>
      </Method>
      <Method Name="RemoveAll" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="match" Type="System.Predicate`1[T]" />
        </Parameters>
      </Method>
      <Method Name="RemoveAt" Return_type="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="RemoveRange" Return_type="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Reverse" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Reverse" Return_type="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Sort" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Sort" Return_type="System.Void">
        <Parameters>
          <Parameter Name="comparer" Type="System.Collections.Generic.IComparer`1[T]" />
        </Parameters>
      </Method>
      <Method Name="Sort" Return_type="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
          <Parameter Name="comparer" Type="System.Collections.Generic.IComparer`1[T]" />
        </Parameters>
      </Method>
      <Method Name="Sort" Return_type="System.Void">
        <Parameters>
          <Parameter Name="comparison" Type="System.Comparison`1[T]" />
        </Parameters>
      </Method>
      <Method Name="ToArray" Return_type="T[]">
        <Parameters />
      </Method>
      <Method Name="TrimExcess" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="BinarySearch" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="item" Type="T" />
          <Parameter Name="comparer" Type="System.Collections.Generic.IComparer`1[T]" />
        </Parameters>
      </Method>
      <Method Name="Exists" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="match" Type="System.Predicate`1[T]" />
        </Parameters>
      </Method>
      <Method Name="Find" Return_type="T">
        <Parameters>
          <Parameter Name="match" Type="System.Predicate`1[T]" />
        </Parameters>
      </Method>
      <Method Name="FindAll" Return_type="System.Collections.Generic.List`1[T]">
        <Parameters>
          <Parameter Name="match" Type="System.Predicate`1[T]" />
        </Parameters>
      </Method>
      <Method Name="FindIndex" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="match" Type="System.Predicate`1[T]" />
        </Parameters>
      </Method>
      <Method Name="FindIndex" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="match" Type="System.Predicate`1[T]" />
        </Parameters>
      </Method>
      <Method Name="FindLast" Return_type="T">
        <Parameters>
          <Parameter Name="match" Type="System.Predicate`1[T]" />
        </Parameters>
      </Method>
      <Method Name="FindLastIndex" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="match" Type="System.Predicate`1[T]" />
        </Parameters>
      </Method>
      <Method Name="FindLastIndex" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="match" Type="System.Predicate`1[T]" />
        </Parameters>
      </Method>
      <Method Name="FindLastIndex" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
          <Parameter Name="match" Type="System.Predicate`1[T]" />
        </Parameters>
      </Method>
      <Method Name="GetRange" Return_type="System.Collections.Generic.List`1[T]">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="item" Type="T" />
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="IndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="item" Type="T" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="item" Type="T" />
        </Parameters>
      </Method>
      <Method Name="LastIndexOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="item" Type="T" />
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="TrueForAll" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="match" Type="System.Predicate`1[T]" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Threading.AbandonedMutexException">
    <Properties>
      <Property Name="Mutex" Type="System.Threading.Mutex" />
      <Property Name="MutexIndex" Type="System.Int32" />
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Mutex" Return_type="System.Threading.Mutex">
        <Parameters />
      </Method>
      <Method Name="get_MutexIndex" Return_type="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Threading.AsyncLocal`1">
    <Properties>
      <Property Name="Value" Type="T" />
    </Properties>
    <Methods>
      <Method Name="get_Value" Return_type="T">
        <Parameters />
      </Method>
      <Method Name="set_Value" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="T" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Threading.AutoResetEvent">
    <Properties>
      <Property Name="Handle" Type="System.IntPtr" />
      <Property Name="SafeWaitHandle" Type="Microsoft.Win32.SafeHandles.SafeWaitHandle" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Threading.SendOrPostCallback">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="object" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Threading.SynchronizationContext">
    <Properties>
      <Property Name="Current" Type="System.Threading.SynchronizationContext" />
    </Properties>
    <Methods>
      <Method Name="IsWaitNotificationRequired" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Send" Return_type="System.Void">
        <Parameters>
          <Parameter Name="d" Type="System.Threading.SendOrPostCallback" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Post" Return_type="System.Void">
        <Parameters>
          <Parameter Name="d" Type="System.Threading.SendOrPostCallback" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="OperationStarted" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="OperationCompleted" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Wait" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="waitHandles" Type="System.IntPtr[]" />
          <Parameter Name="waitAll" Type="System.Boolean" />
          <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="SetSynchronizationContext" Return_type="System.Void">
        <Parameters>
          <Parameter Name="syncContext" Type="System.Threading.SynchronizationContext" />
        </Parameters>
      </Method>
      <Method Name="get_Current" Return_type="System.Threading.SynchronizationContext">
        <Parameters />
      </Method>
      <Method Name="CreateCopy" Return_type="System.Threading.SynchronizationContext">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Threading.CompressedStack">
    <Properties />
    <Methods>
      <Method Name="Capture" Return_type="System.Threading.CompressedStack">
        <Parameters />
      </Method>
      <Method Name="Run" Return_type="System.Void">
        <Parameters>
          <Parameter Name="compressedStack" Type="System.Threading.CompressedStack" />
          <Parameter Name="callback" Type="System.Threading.ContextCallback" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetObjectData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
      <Method Name="GetCompressedStack" Return_type="System.Threading.CompressedStack">
        <Parameters />
      </Method>
      <Method Name="CreateCopy" Return_type="System.Threading.CompressedStack">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Threading.EventWaitHandle">
    <Properties>
      <Property Name="Handle" Type="System.IntPtr" />
      <Property Name="SafeWaitHandle" Type="Microsoft.Win32.SafeHandles.SafeWaitHandle" />
    </Properties>
    <Methods>
      <Method Name="OpenExisting" Return_type="System.Threading.EventWaitHandle">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="OpenExisting" Return_type="System.Threading.EventWaitHandle">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="rights" Type="System.Security.AccessControl.EventWaitHandleRights" />
        </Parameters>
      </Method>
      <Method Name="TryOpenExisting" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="result" Type="System.Threading.EventWaitHandle&amp;" />
        </Parameters>
      </Method>
      <Method Name="TryOpenExisting" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="rights" Type="System.Security.AccessControl.EventWaitHandleRights" />
          <Parameter Name="result" Type="System.Threading.EventWaitHandle&amp;" />
        </Parameters>
      </Method>
      <Method Name="Reset" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Set" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetAccessControl" Return_type="System.Security.AccessControl.EventWaitHandleSecurity">
        <Parameters />
      </Method>
      <Method Name="SetAccessControl" Return_type="System.Void">
        <Parameters>
          <Parameter Name="eventSecurity" Type="System.Security.AccessControl.EventWaitHandleSecurity" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Threading.ContextCallback">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="object" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Threading.ExecutionContext">
    <Properties />
    <Methods>
      <Method Name="Dispose" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Run" Return_type="System.Void">
        <Parameters>
          <Parameter Name="executionContext" Type="System.Threading.ExecutionContext" />
          <Parameter Name="callback" Type="System.Threading.ContextCallback" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="CreateCopy" Return_type="System.Threading.ExecutionContext">
        <Parameters />
      </Method>
      <Method Name="SuppressFlow" Return_type="System.Threading.AsyncFlowControl">
        <Parameters />
      </Method>
      <Method Name="RestoreFlow" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="IsFlowSuppressed" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Capture" Return_type="System.Threading.ExecutionContext">
        <Parameters />
      </Method>
      <Method Name="GetObjectData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Threading.Interlocked">
    <Properties />
    <Methods>
      <Method Name="Increment" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="location" Type="System.Int32&amp;" />
        </Parameters>
      </Method>
      <Method Name="Increment" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="location" Type="System.Int64&amp;" />
        </Parameters>
      </Method>
      <Method Name="Decrement" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="location" Type="System.Int32&amp;" />
        </Parameters>
      </Method>
      <Method Name="Decrement" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="location" Type="System.Int64&amp;" />
        </Parameters>
      </Method>
      <Method Name="Exchange" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="location1" Type="System.Int32&amp;" />
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Exchange" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="location1" Type="System.Int64&amp;" />
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="Exchange" Return_type="System.Single">
        <Parameters>
          <Parameter Name="location1" Type="System.Single&amp;" />
          <Parameter Name="value" Type="System.Single" />
        </Parameters>
      </Method>
      <Method Name="Exchange" Return_type="System.Double">
        <Parameters>
          <Parameter Name="location1" Type="System.Double&amp;" />
          <Parameter Name="value" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="Exchange" Return_type="System.Object">
        <Parameters>
          <Parameter Name="location1" Type="System.Object&amp;" />
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Exchange" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="location1" Type="System.IntPtr&amp;" />
          <Parameter Name="value" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="Exchange" Return_type="T">
        <Parameters>
          <Parameter Name="location1" Type="T&amp;" />
          <Parameter Name="value" Type="T" />
        </Parameters>
      </Method>
      <Method Name="CompareExchange" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="location1" Type="System.Int32&amp;" />
          <Parameter Name="value" Type="System.Int32" />
          <Parameter Name="comparand" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="CompareExchange" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="location1" Type="System.Int64&amp;" />
          <Parameter Name="value" Type="System.Int64" />
          <Parameter Name="comparand" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="CompareExchange" Return_type="System.Single">
        <Parameters>
          <Parameter Name="location1" Type="System.Single&amp;" />
          <Parameter Name="value" Type="System.Single" />
          <Parameter Name="comparand" Type="System.Single" />
        </Parameters>
      </Method>
      <Method Name="CompareExchange" Return_type="System.Double">
        <Parameters>
          <Parameter Name="location1" Type="System.Double&amp;" />
          <Parameter Name="value" Type="System.Double" />
          <Parameter Name="comparand" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="CompareExchange" Return_type="System.Object">
        <Parameters>
          <Parameter Name="location1" Type="System.Object&amp;" />
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="comparand" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="CompareExchange" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="location1" Type="System.IntPtr&amp;" />
          <Parameter Name="value" Type="System.IntPtr" />
          <Parameter Name="comparand" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="CompareExchange" Return_type="T">
        <Parameters>
          <Parameter Name="location1" Type="T&amp;" />
          <Parameter Name="value" Type="T" />
          <Parameter Name="comparand" Type="T" />
        </Parameters>
      </Method>
      <Method Name="Add" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="location1" Type="System.Int32&amp;" />
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Add" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="location1" Type="System.Int64&amp;" />
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="Read" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="location" Type="System.Int64&amp;" />
        </Parameters>
      </Method>
      <Method Name="MemoryBarrier" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Threading.HostExecutionContext">
    <Properties />
    <Methods>
      <Method Name="CreateCopy" Return_type="System.Threading.HostExecutionContext">
        <Parameters />
      </Method>
      <Method Name="Dispose" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Dispose" Return_type="System.Void">
        <Parameters>
          <Parameter Name="disposing" Type="System.Boolean" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Threading.HostExecutionContextManager">
    <Properties />
    <Methods>
      <Method Name="Revert" Return_type="System.Void">
        <Parameters>
          <Parameter Name="previousState" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Capture" Return_type="System.Threading.HostExecutionContext">
        <Parameters />
      </Method>
      <Method Name="SetHostExecutionContext" Return_type="System.Object">
        <Parameters>
          <Parameter Name="hostExecutionContext" Type="System.Threading.HostExecutionContext" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Threading.LockRecursionException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Threading.ManualResetEvent">
    <Properties>
      <Property Name="Handle" Type="System.IntPtr" />
      <Property Name="SafeWaitHandle" Type="Microsoft.Win32.SafeHandles.SafeWaitHandle" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Threading.Monitor">
    <Properties />
    <Methods>
      <Method Name="Enter" Return_type="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Enter" Return_type="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
          <Parameter Name="lockTaken" Type="System.Boolean&amp;" />
        </Parameters>
      </Method>
      <Method Name="Exit" Return_type="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="TryEnter" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="TryEnter" Return_type="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
          <Parameter Name="lockTaken" Type="System.Boolean&amp;" />
        </Parameters>
      </Method>
      <Method Name="TryEnter" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
          <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="TryEnter" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
          <Parameter Name="timeout" Type="System.TimeSpan" />
        </Parameters>
      </Method>
      <Method Name="TryEnter" Return_type="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
          <Parameter Name="millisecondsTimeout" Type="System.Int32" />
          <Parameter Name="lockTaken" Type="System.Boolean&amp;" />
        </Parameters>
      </Method>
      <Method Name="TryEnter" Return_type="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
          <Parameter Name="timeout" Type="System.TimeSpan" />
          <Parameter Name="lockTaken" Type="System.Boolean&amp;" />
        </Parameters>
      </Method>
      <Method Name="IsEntered" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Wait" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
          <Parameter Name="millisecondsTimeout" Type="System.Int32" />
          <Parameter Name="exitContext" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="Wait" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
          <Parameter Name="timeout" Type="System.TimeSpan" />
          <Parameter Name="exitContext" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="Wait" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
          <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Wait" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
          <Parameter Name="timeout" Type="System.TimeSpan" />
        </Parameters>
      </Method>
      <Method Name="Wait" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Pulse" Return_type="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="PulseAll" Return_type="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Threading.Mutex">
    <Properties>
      <Property Name="Handle" Type="System.IntPtr" />
      <Property Name="SafeWaitHandle" Type="Microsoft.Win32.SafeHandles.SafeWaitHandle" />
    </Properties>
    <Methods>
      <Method Name="OpenExisting" Return_type="System.Threading.Mutex">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="OpenExisting" Return_type="System.Threading.Mutex">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="rights" Type="System.Security.AccessControl.MutexRights" />
        </Parameters>
      </Method>
      <Method Name="TryOpenExisting" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="result" Type="System.Threading.Mutex&amp;" />
        </Parameters>
      </Method>
      <Method Name="TryOpenExisting" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="rights" Type="System.Security.AccessControl.MutexRights" />
          <Parameter Name="result" Type="System.Threading.Mutex&amp;" />
        </Parameters>
      </Method>
      <Method Name="ReleaseMutex" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="GetAccessControl" Return_type="System.Security.AccessControl.MutexSecurity">
        <Parameters />
      </Method>
      <Method Name="SetAccessControl" Return_type="System.Void">
        <Parameters>
          <Parameter Name="mutexSecurity" Type="System.Security.AccessControl.MutexSecurity" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Threading.Overlapped">
    <Properties>
      <Property Name="AsyncResult" Type="System.IAsyncResult" />
      <Property Name="OffsetLow" Type="System.Int32" />
      <Property Name="OffsetHigh" Type="System.Int32" />
      <Property Name="EventHandle" Type="System.Int32" />
      <Property Name="EventHandleIntPtr" Type="System.IntPtr" />
    </Properties>
    <Methods>
      <Method Name="get_AsyncResult" Return_type="System.IAsyncResult">
        <Parameters />
      </Method>
      <Method Name="set_AsyncResult" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
      <Method Name="get_OffsetLow" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_OffsetLow" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_OffsetHigh" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_OffsetHigh" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_EventHandle" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_EventHandle" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_EventHandleIntPtr" Return_type="System.IntPtr">
        <Parameters />
      </Method>
      <Method Name="set_EventHandleIntPtr" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="Pack" Return_type="System.Threading.NativeOverlapped*">
        <Parameters>
          <Parameter Name="iocb" Type="System.Threading.IOCompletionCallback" />
        </Parameters>
      </Method>
      <Method Name="Pack" Return_type="System.Threading.NativeOverlapped*">
        <Parameters>
          <Parameter Name="iocb" Type="System.Threading.IOCompletionCallback" />
          <Parameter Name="userData" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="UnsafePack" Return_type="System.Threading.NativeOverlapped*">
        <Parameters>
          <Parameter Name="iocb" Type="System.Threading.IOCompletionCallback" />
        </Parameters>
      </Method>
      <Method Name="UnsafePack" Return_type="System.Threading.NativeOverlapped*">
        <Parameters>
          <Parameter Name="iocb" Type="System.Threading.IOCompletionCallback" />
          <Parameter Name="userData" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Unpack" Return_type="System.Threading.Overlapped">
        <Parameters>
          <Parameter Name="nativeOverlappedPtr" Type="System.Threading.NativeOverlapped*" />
        </Parameters>
      </Method>
      <Method Name="Free" Return_type="System.Void">
        <Parameters>
          <Parameter Name="nativeOverlappedPtr" Type="System.Threading.NativeOverlapped*" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Threading.ParameterizedThreadStart">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="object" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Threading.ReaderWriterLock">
    <Properties>
      <Property Name="IsReaderLockHeld" Type="System.Boolean" />
      <Property Name="IsWriterLockHeld" Type="System.Boolean" />
      <Property Name="WriterSeqNum" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_IsReaderLockHeld" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsWriterLockHeld" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_WriterSeqNum" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="AcquireReaderLock" Return_type="System.Void">
        <Parameters>
          <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="AcquireReaderLock" Return_type="System.Void">
        <Parameters>
          <Parameter Name="timeout" Type="System.TimeSpan" />
        </Parameters>
      </Method>
      <Method Name="AcquireWriterLock" Return_type="System.Void">
        <Parameters>
          <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="AcquireWriterLock" Return_type="System.Void">
        <Parameters>
          <Parameter Name="timeout" Type="System.TimeSpan" />
        </Parameters>
      </Method>
      <Method Name="ReleaseReaderLock" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="ReleaseWriterLock" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="UpgradeToWriterLock" Return_type="System.Threading.LockCookie">
        <Parameters>
          <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="UpgradeToWriterLock" Return_type="System.Threading.LockCookie">
        <Parameters>
          <Parameter Name="timeout" Type="System.TimeSpan" />
        </Parameters>
      </Method>
      <Method Name="DowngradeFromWriterLock" Return_type="System.Void">
        <Parameters>
          <Parameter Name="lockCookie" Type="System.Threading.LockCookie&amp;" />
        </Parameters>
      </Method>
      <Method Name="ReleaseLock" Return_type="System.Threading.LockCookie">
        <Parameters />
      </Method>
      <Method Name="RestoreLock" Return_type="System.Void">
        <Parameters>
          <Parameter Name="lockCookie" Type="System.Threading.LockCookie&amp;" />
        </Parameters>
      </Method>
      <Method Name="AnyWritersSince" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="seqNum" Type="System.Int32" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Threading.SemaphoreFullException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Threading.SynchronizationLockException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Threading.Thread">
    <Properties>
      <Property Name="ManagedThreadId" Type="System.Int32" />
      <Property Name="ExecutionContext" Type="System.Threading.ExecutionContext" />
      <Property Name="Priority" Type="System.Threading.ThreadPriority" />
      <Property Name="IsAlive" Type="System.Boolean" />
      <Property Name="IsThreadPoolThread" Type="System.Boolean" />
      <Property Name="CurrentThread" Type="System.Threading.Thread" />
      <Property Name="IsBackground" Type="System.Boolean" />
      <Property Name="ThreadState" Type="System.Threading.ThreadState" />
      <Property Name="ApartmentState" Type="System.Threading.ApartmentState" />
      <Property Name="CurrentUICulture" Type="System.Globalization.CultureInfo" />
      <Property Name="CurrentCulture" Type="System.Globalization.CultureInfo" />
      <Property Name="CurrentContext" Type="System.Runtime.Remoting.Contexts.Context" />
      <Property Name="CurrentPrincipal" Type="System.Security.Principal.IPrincipal" />
      <Property Name="Name" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_ManagedThreadId" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Start" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Start" Return_type="System.Void">
        <Parameters>
          <Parameter Name="parameter" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="get_ExecutionContext" Return_type="System.Threading.ExecutionContext">
        <Parameters />
      </Method>
      <Method Name="SetCompressedStack" Return_type="System.Void">
        <Parameters>
          <Parameter Name="stack" Type="System.Threading.CompressedStack" />
        </Parameters>
      </Method>
      <Method Name="GetCompressedStack" Return_type="System.Threading.CompressedStack">
        <Parameters />
      </Method>
      <Method Name="Abort" Return_type="System.Void">
        <Parameters>
          <Parameter Name="stateInfo" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Abort" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="ResetAbort" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Suspend" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Resume" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Interrupt" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_Priority" Return_type="System.Threading.ThreadPriority">
        <Parameters />
      </Method>
      <Method Name="set_Priority" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Threading.ThreadPriority" />
        </Parameters>
      </Method>
      <Method Name="get_IsAlive" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsThreadPoolThread" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Join" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Join" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Join" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="timeout" Type="System.TimeSpan" />
        </Parameters>
      </Method>
      <Method Name="Sleep" Return_type="System.Void">
        <Parameters>
          <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Sleep" Return_type="System.Void">
        <Parameters>
          <Parameter Name="timeout" Type="System.TimeSpan" />
        </Parameters>
      </Method>
      <Method Name="SpinWait" Return_type="System.Void">
        <Parameters>
          <Parameter Name="iterations" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Yield" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CurrentThread" Return_type="System.Threading.Thread">
        <Parameters />
      </Method>
      <Method Name="DisableComObjectEagerCleanup" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_IsBackground" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_IsBackground" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_ThreadState" Return_type="System.Threading.ThreadState">
        <Parameters />
      </Method>
      <Method Name="get_ApartmentState" Return_type="System.Threading.ApartmentState">
        <Parameters />
      </Method>
      <Method Name="set_ApartmentState" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Threading.ApartmentState" />
        </Parameters>
      </Method>
      <Method Name="GetApartmentState" Return_type="System.Threading.ApartmentState">
        <Parameters />
      </Method>
      <Method Name="TrySetApartmentState" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="state" Type="System.Threading.ApartmentState" />
        </Parameters>
      </Method>
      <Method Name="SetApartmentState" Return_type="System.Void">
        <Parameters>
          <Parameter Name="state" Type="System.Threading.ApartmentState" />
        </Parameters>
      </Method>
      <Method Name="AllocateDataSlot" Return_type="System.LocalDataStoreSlot">
        <Parameters />
      </Method>
      <Method Name="AllocateNamedDataSlot" Return_type="System.LocalDataStoreSlot">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetNamedDataSlot" Return_type="System.LocalDataStoreSlot">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="FreeNamedDataSlot" Return_type="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetData" Return_type="System.Object">
        <Parameters>
          <Parameter Name="slot" Type="System.LocalDataStoreSlot" />
        </Parameters>
      </Method>
      <Method Name="SetData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="slot" Type="System.LocalDataStoreSlot" />
          <Parameter Name="data" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="get_CurrentUICulture" Return_type="System.Globalization.CultureInfo">
        <Parameters />
      </Method>
      <Method Name="set_CurrentUICulture" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Globalization.CultureInfo" />
        </Parameters>
      </Method>
      <Method Name="get_CurrentCulture" Return_type="System.Globalization.CultureInfo">
        <Parameters />
      </Method>
      <Method Name="set_CurrentCulture" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Globalization.CultureInfo" />
        </Parameters>
      </Method>
      <Method Name="get_CurrentContext" Return_type="System.Runtime.Remoting.Contexts.Context">
        <Parameters />
      </Method>
      <Method Name="get_CurrentPrincipal" Return_type="System.Security.Principal.IPrincipal">
        <Parameters />
      </Method>
      <Method Name="set_CurrentPrincipal" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Security.Principal.IPrincipal" />
        </Parameters>
      </Method>
      <Method Name="GetDomain" Return_type="System.AppDomain">
        <Parameters />
      </Method>
      <Method Name="GetDomainID" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Name" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="BeginCriticalRegion" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="EndCriticalRegion" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="BeginThreadAffinity" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="EndThreadAffinity" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="VolatileRead" Return_type="System.Byte">
        <Parameters>
          <Parameter Name="address" Type="System.Byte&amp;" />
        </Parameters>
      </Method>
      <Method Name="VolatileRead" Return_type="System.Int16">
        <Parameters>
          <Parameter Name="address" Type="System.Int16&amp;" />
        </Parameters>
      </Method>
      <Method Name="VolatileRead" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="address" Type="System.Int32&amp;" />
        </Parameters>
      </Method>
      <Method Name="VolatileRead" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="address" Type="System.Int64&amp;" />
        </Parameters>
      </Method>
      <Method Name="VolatileRead" Return_type="System.SByte">
        <Parameters>
          <Parameter Name="address" Type="System.SByte&amp;" />
        </Parameters>
      </Method>
      <Method Name="VolatileRead" Return_type="System.UInt16">
        <Parameters>
          <Parameter Name="address" Type="System.UInt16&amp;" />
        </Parameters>
      </Method>
      <Method Name="VolatileRead" Return_type="System.UInt32">
        <Parameters>
          <Parameter Name="address" Type="System.UInt32&amp;" />
        </Parameters>
      </Method>
      <Method Name="VolatileRead" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="address" Type="System.IntPtr&amp;" />
        </Parameters>
      </Method>
      <Method Name="VolatileRead" Return_type="System.UIntPtr">
        <Parameters>
          <Parameter Name="address" Type="System.UIntPtr&amp;" />
        </Parameters>
      </Method>
      <Method Name="VolatileRead" Return_type="System.UInt64">
        <Parameters>
          <Parameter Name="address" Type="System.UInt64&amp;" />
        </Parameters>
      </Method>
      <Method Name="VolatileRead" Return_type="System.Single">
        <Parameters>
          <Parameter Name="address" Type="System.Single&amp;" />
        </Parameters>
      </Method>
      <Method Name="VolatileRead" Return_type="System.Double">
        <Parameters>
          <Parameter Name="address" Type="System.Double&amp;" />
        </Parameters>
      </Method>
      <Method Name="VolatileRead" Return_type="System.Object">
        <Parameters>
          <Parameter Name="address" Type="System.Object&amp;" />
        </Parameters>
      </Method>
      <Method Name="VolatileWrite" Return_type="System.Void">
        <Parameters>
          <Parameter Name="address" Type="System.Byte&amp;" />
          <Parameter Name="value" Type="System.Byte" />
        </Parameters>
      </Method>
      <Method Name="VolatileWrite" Return_type="System.Void">
        <Parameters>
          <Parameter Name="address" Type="System.Int16&amp;" />
          <Parameter Name="value" Type="System.Int16" />
        </Parameters>
      </Method>
      <Method Name="VolatileWrite" Return_type="System.Void">
        <Parameters>
          <Parameter Name="address" Type="System.Int32&amp;" />
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="VolatileWrite" Return_type="System.Void">
        <Parameters>
          <Parameter Name="address" Type="System.Int64&amp;" />
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="VolatileWrite" Return_type="System.Void">
        <Parameters>
          <Parameter Name="address" Type="System.SByte&amp;" />
          <Parameter Name="value" Type="System.SByte" />
        </Parameters>
      </Method>
      <Method Name="VolatileWrite" Return_type="System.Void">
        <Parameters>
          <Parameter Name="address" Type="System.UInt16&amp;" />
          <Parameter Name="value" Type="System.UInt16" />
        </Parameters>
      </Method>
      <Method Name="VolatileWrite" Return_type="System.Void">
        <Parameters>
          <Parameter Name="address" Type="System.UInt32&amp;" />
          <Parameter Name="value" Type="System.UInt32" />
        </Parameters>
      </Method>
      <Method Name="VolatileWrite" Return_type="System.Void">
        <Parameters>
          <Parameter Name="address" Type="System.IntPtr&amp;" />
          <Parameter Name="value" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="VolatileWrite" Return_type="System.Void">
        <Parameters>
          <Parameter Name="address" Type="System.UIntPtr&amp;" />
          <Parameter Name="value" Type="System.UIntPtr" />
        </Parameters>
      </Method>
      <Method Name="VolatileWrite" Return_type="System.Void">
        <Parameters>
          <Parameter Name="address" Type="System.UInt64&amp;" />
          <Parameter Name="value" Type="System.UInt64" />
        </Parameters>
      </Method>
      <Method Name="VolatileWrite" Return_type="System.Void">
        <Parameters>
          <Parameter Name="address" Type="System.Single&amp;" />
          <Parameter Name="value" Type="System.Single" />
        </Parameters>
      </Method>
      <Method Name="VolatileWrite" Return_type="System.Void">
        <Parameters>
          <Parameter Name="address" Type="System.Double&amp;" />
          <Parameter Name="value" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="VolatileWrite" Return_type="System.Void">
        <Parameters>
          <Parameter Name="address" Type="System.Object&amp;" />
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="MemoryBarrier" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Threading.ThreadAbortException">
    <Properties>
      <Property Name="ExceptionState" Type="System.Object" />
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_ExceptionState" Return_type="System.Object">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Threading.ThreadInterruptedException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Threading.RegisteredWaitHandle">
    <Properties />
    <Methods>
      <Method Name="Unregister" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="waitObject" Type="System.Threading.WaitHandle" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Threading.WaitCallback">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="object" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Threading.WaitOrTimerCallback">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="timedOut" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="timedOut" Type="System.Boolean" />
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="object" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Threading.IOCompletionCallback">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="errorCode" Type="System.UInt32" />
          <Parameter Name="numBytes" Type="System.UInt32" />
          <Parameter Name="pOVERLAP" Type="System.Threading.NativeOverlapped*" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="errorCode" Type="System.UInt32" />
          <Parameter Name="numBytes" Type="System.UInt32" />
          <Parameter Name="pOVERLAP" Type="System.Threading.NativeOverlapped*" />
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="object" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Threading.ThreadPool">
    <Properties />
    <Methods>
      <Method Name="SetMaxThreads" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="workerThreads" Type="System.Int32" />
          <Parameter Name="completionPortThreads" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetMaxThreads" Return_type="System.Void">
        <Parameters>
          <Parameter Name="workerThreads" Type="System.Int32&amp;" />
          <Parameter Name="completionPortThreads" Type="System.Int32&amp;" />
        </Parameters>
      </Method>
      <Method Name="SetMinThreads" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="workerThreads" Type="System.Int32" />
          <Parameter Name="completionPortThreads" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetMinThreads" Return_type="System.Void">
        <Parameters>
          <Parameter Name="workerThreads" Type="System.Int32&amp;" />
          <Parameter Name="completionPortThreads" Type="System.Int32&amp;" />
        </Parameters>
      </Method>
      <Method Name="GetAvailableThreads" Return_type="System.Void">
        <Parameters>
          <Parameter Name="workerThreads" Type="System.Int32&amp;" />
          <Parameter Name="completionPortThreads" Type="System.Int32&amp;" />
        </Parameters>
      </Method>
      <Method Name="RegisterWaitForSingleObject" Return_type="System.Threading.RegisteredWaitHandle">
        <Parameters>
          <Parameter Name="waitObject" Type="System.Threading.WaitHandle" />
          <Parameter Name="callBack" Type="System.Threading.WaitOrTimerCallback" />
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="millisecondsTimeOutInterval" Type="System.UInt32" />
          <Parameter Name="executeOnlyOnce" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="UnsafeRegisterWaitForSingleObject" Return_type="System.Threading.RegisteredWaitHandle">
        <Parameters>
          <Parameter Name="waitObject" Type="System.Threading.WaitHandle" />
          <Parameter Name="callBack" Type="System.Threading.WaitOrTimerCallback" />
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="millisecondsTimeOutInterval" Type="System.UInt32" />
          <Parameter Name="executeOnlyOnce" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="RegisterWaitForSingleObject" Return_type="System.Threading.RegisteredWaitHandle">
        <Parameters>
          <Parameter Name="waitObject" Type="System.Threading.WaitHandle" />
          <Parameter Name="callBack" Type="System.Threading.WaitOrTimerCallback" />
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="millisecondsTimeOutInterval" Type="System.Int32" />
          <Parameter Name="executeOnlyOnce" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="UnsafeRegisterWaitForSingleObject" Return_type="System.Threading.RegisteredWaitHandle">
        <Parameters>
          <Parameter Name="waitObject" Type="System.Threading.WaitHandle" />
          <Parameter Name="callBack" Type="System.Threading.WaitOrTimerCallback" />
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="millisecondsTimeOutInterval" Type="System.Int32" />
          <Parameter Name="executeOnlyOnce" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="RegisterWaitForSingleObject" Return_type="System.Threading.RegisteredWaitHandle">
        <Parameters>
          <Parameter Name="waitObject" Type="System.Threading.WaitHandle" />
          <Parameter Name="callBack" Type="System.Threading.WaitOrTimerCallback" />
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="millisecondsTimeOutInterval" Type="System.Int64" />
          <Parameter Name="executeOnlyOnce" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="UnsafeRegisterWaitForSingleObject" Return_type="System.Threading.RegisteredWaitHandle">
        <Parameters>
          <Parameter Name="waitObject" Type="System.Threading.WaitHandle" />
          <Parameter Name="callBack" Type="System.Threading.WaitOrTimerCallback" />
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="millisecondsTimeOutInterval" Type="System.Int64" />
          <Parameter Name="executeOnlyOnce" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="RegisterWaitForSingleObject" Return_type="System.Threading.RegisteredWaitHandle">
        <Parameters>
          <Parameter Name="waitObject" Type="System.Threading.WaitHandle" />
          <Parameter Name="callBack" Type="System.Threading.WaitOrTimerCallback" />
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="timeout" Type="System.TimeSpan" />
          <Parameter Name="executeOnlyOnce" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="UnsafeRegisterWaitForSingleObject" Return_type="System.Threading.RegisteredWaitHandle">
        <Parameters>
          <Parameter Name="waitObject" Type="System.Threading.WaitHandle" />
          <Parameter Name="callBack" Type="System.Threading.WaitOrTimerCallback" />
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="timeout" Type="System.TimeSpan" />
          <Parameter Name="executeOnlyOnce" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="QueueUserWorkItem" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="callBack" Type="System.Threading.WaitCallback" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="QueueUserWorkItem" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="callBack" Type="System.Threading.WaitCallback" />
        </Parameters>
      </Method>
      <Method Name="UnsafeQueueUserWorkItem" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="callBack" Type="System.Threading.WaitCallback" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="UnsafeQueueNativeOverlapped" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="overlapped" Type="System.Threading.NativeOverlapped*" />
        </Parameters>
      </Method>
      <Method Name="BindHandle" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="osHandle" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="BindHandle" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="osHandle" Type="System.Runtime.InteropServices.SafeHandle" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Threading.ThreadStart">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="BeginInvoke" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="object" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Threading.ThreadStateException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Threading.ThreadStartException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Threading.Timeout">
    <Properties />
    <Methods />
  </Type>
  <Type Full_Name="System.Threading.TimerCallback">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="object" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Threading.Timer">
    <Properties />
    <Methods>
      <Method Name="Change" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="dueTime" Type="System.Int32" />
          <Parameter Name="period" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Change" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="dueTime" Type="System.TimeSpan" />
          <Parameter Name="period" Type="System.TimeSpan" />
        </Parameters>
      </Method>
      <Method Name="Change" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="dueTime" Type="System.UInt32" />
          <Parameter Name="period" Type="System.UInt32" />
        </Parameters>
      </Method>
      <Method Name="Change" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="dueTime" Type="System.Int64" />
          <Parameter Name="period" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="Dispose" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="notifyObject" Type="System.Threading.WaitHandle" />
        </Parameters>
      </Method>
      <Method Name="Dispose" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Threading.Volatile">
    <Properties />
    <Methods>
      <Method Name="Read" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="location" Type="System.Boolean&amp;" />
        </Parameters>
      </Method>
      <Method Name="Read" Return_type="System.SByte">
        <Parameters>
          <Parameter Name="location" Type="System.SByte&amp;" />
        </Parameters>
      </Method>
      <Method Name="Read" Return_type="System.Byte">
        <Parameters>
          <Parameter Name="location" Type="System.Byte&amp;" />
        </Parameters>
      </Method>
      <Method Name="Read" Return_type="System.Int16">
        <Parameters>
          <Parameter Name="location" Type="System.Int16&amp;" />
        </Parameters>
      </Method>
      <Method Name="Read" Return_type="System.UInt16">
        <Parameters>
          <Parameter Name="location" Type="System.UInt16&amp;" />
        </Parameters>
      </Method>
      <Method Name="Read" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="location" Type="System.Int32&amp;" />
        </Parameters>
      </Method>
      <Method Name="Read" Return_type="System.UInt32">
        <Parameters>
          <Parameter Name="location" Type="System.UInt32&amp;" />
        </Parameters>
      </Method>
      <Method Name="Read" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="location" Type="System.Int64&amp;" />
        </Parameters>
      </Method>
      <Method Name="Read" Return_type="System.UInt64">
        <Parameters>
          <Parameter Name="location" Type="System.UInt64&amp;" />
        </Parameters>
      </Method>
      <Method Name="Read" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="location" Type="System.IntPtr&amp;" />
        </Parameters>
      </Method>
      <Method Name="Read" Return_type="System.UIntPtr">
        <Parameters>
          <Parameter Name="location" Type="System.UIntPtr&amp;" />
        </Parameters>
      </Method>
      <Method Name="Read" Return_type="System.Single">
        <Parameters>
          <Parameter Name="location" Type="System.Single&amp;" />
        </Parameters>
      </Method>
      <Method Name="Read" Return_type="System.Double">
        <Parameters>
          <Parameter Name="location" Type="System.Double&amp;" />
        </Parameters>
      </Method>
      <Method Name="Read" Return_type="T">
        <Parameters>
          <Parameter Name="location" Type="T&amp;" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="location" Type="System.Boolean&amp;" />
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="location" Type="System.SByte&amp;" />
          <Parameter Name="value" Type="System.SByte" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="location" Type="System.Byte&amp;" />
          <Parameter Name="value" Type="System.Byte" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="location" Type="System.Int16&amp;" />
          <Parameter Name="value" Type="System.Int16" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="location" Type="System.UInt16&amp;" />
          <Parameter Name="value" Type="System.UInt16" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="location" Type="System.Int32&amp;" />
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="location" Type="System.UInt32&amp;" />
          <Parameter Name="value" Type="System.UInt32" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="location" Type="System.Int64&amp;" />
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="location" Type="System.UInt64&amp;" />
          <Parameter Name="value" Type="System.UInt64" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="location" Type="System.IntPtr&amp;" />
          <Parameter Name="value" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="location" Type="System.UIntPtr&amp;" />
          <Parameter Name="value" Type="System.UIntPtr" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="location" Type="System.Single&amp;" />
          <Parameter Name="value" Type="System.Single" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="location" Type="System.Double&amp;" />
          <Parameter Name="value" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="location" Type="T&amp;" />
          <Parameter Name="value" Type="T" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Threading.WaitHandle">
    <Properties>
      <Property Name="Handle" Type="System.IntPtr" />
      <Property Name="SafeWaitHandle" Type="Microsoft.Win32.SafeHandles.SafeWaitHandle" />
    </Properties>
    <Methods>
      <Method Name="get_Handle" Return_type="System.IntPtr">
        <Parameters />
      </Method>
      <Method Name="set_Handle" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="get_SafeWaitHandle" Return_type="Microsoft.Win32.SafeHandles.SafeWaitHandle">
        <Parameters />
      </Method>
      <Method Name="set_SafeWaitHandle" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="Microsoft.Win32.SafeHandles.SafeWaitHandle" />
        </Parameters>
      </Method>
      <Method Name="WaitOne" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="millisecondsTimeout" Type="System.Int32" />
          <Parameter Name="exitContext" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="WaitOne" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="timeout" Type="System.TimeSpan" />
          <Parameter Name="exitContext" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="WaitOne" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="WaitOne" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="WaitOne" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="timeout" Type="System.TimeSpan" />
        </Parameters>
      </Method>
      <Method Name="WaitAll" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
          <Parameter Name="millisecondsTimeout" Type="System.Int32" />
          <Parameter Name="exitContext" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="WaitAll" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
          <Parameter Name="timeout" Type="System.TimeSpan" />
          <Parameter Name="exitContext" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="WaitAll" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        </Parameters>
      </Method>
      <Method Name="WaitAll" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
          <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="WaitAll" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
          <Parameter Name="timeout" Type="System.TimeSpan" />
        </Parameters>
      </Method>
      <Method Name="WaitAny" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
          <Parameter Name="millisecondsTimeout" Type="System.Int32" />
          <Parameter Name="exitContext" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="WaitAny" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
          <Parameter Name="timeout" Type="System.TimeSpan" />
          <Parameter Name="exitContext" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="WaitAny" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
          <Parameter Name="timeout" Type="System.TimeSpan" />
        </Parameters>
      </Method>
      <Method Name="WaitAny" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
        </Parameters>
      </Method>
      <Method Name="WaitAny" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="waitHandles" Type="System.Threading.WaitHandle[]" />
          <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="SignalAndWait" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="toSignal" Type="System.Threading.WaitHandle" />
          <Parameter Name="toWaitOn" Type="System.Threading.WaitHandle" />
        </Parameters>
      </Method>
      <Method Name="SignalAndWait" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="toSignal" Type="System.Threading.WaitHandle" />
          <Parameter Name="toWaitOn" Type="System.Threading.WaitHandle" />
          <Parameter Name="timeout" Type="System.TimeSpan" />
          <Parameter Name="exitContext" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="SignalAndWait" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="toSignal" Type="System.Threading.WaitHandle" />
          <Parameter Name="toWaitOn" Type="System.Threading.WaitHandle" />
          <Parameter Name="millisecondsTimeout" Type="System.Int32" />
          <Parameter Name="exitContext" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="Close" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Dispose" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Threading.WaitHandleExtensions">
    <Properties />
    <Methods>
      <Method Name="GetSafeWaitHandle" Return_type="Microsoft.Win32.SafeHandles.SafeWaitHandle">
        <Parameters>
          <Parameter Name="waitHandle" Type="System.Threading.WaitHandle" />
        </Parameters>
      </Method>
      <Method Name="SetSafeWaitHandle" Return_type="System.Void">
        <Parameters>
          <Parameter Name="waitHandle" Type="System.Threading.WaitHandle" />
          <Parameter Name="value" Type="Microsoft.Win32.SafeHandles.SafeWaitHandle" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Threading.WaitHandleCannotBeOpenedException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Threading.CountdownEvent">
    <Properties>
      <Property Name="CurrentCount" Type="System.Int32" />
      <Property Name="InitialCount" Type="System.Int32" />
      <Property Name="IsSet" Type="System.Boolean" />
      <Property Name="WaitHandle" Type="System.Threading.WaitHandle" />
    </Properties>
    <Methods>
      <Method Name="get_CurrentCount" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_InitialCount" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_IsSet" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_WaitHandle" Return_type="System.Threading.WaitHandle">
        <Parameters />
      </Method>
      <Method Name="Dispose" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Signal" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Signal" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="signalCount" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="AddCount" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="TryAddCount" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="AddCount" Return_type="System.Void">
        <Parameters>
          <Parameter Name="signalCount" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="TryAddCount" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="signalCount" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Reset" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Reset" Return_type="System.Void">
        <Parameters>
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Wait" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Wait" Return_type="System.Void">
        <Parameters>
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="Wait" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="timeout" Type="System.TimeSpan" />
        </Parameters>
      </Method>
      <Method Name="Wait" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="timeout" Type="System.TimeSpan" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="Wait" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Wait" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="millisecondsTimeout" Type="System.Int32" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Threading.LazyInitializer">
    <Properties />
    <Methods>
      <Method Name="EnsureInitialized" Return_type="T">
        <Parameters>
          <Parameter Name="target" Type="T&amp;" />
        </Parameters>
      </Method>
      <Method Name="EnsureInitialized" Return_type="T">
        <Parameters>
          <Parameter Name="target" Type="T&amp;" />
          <Parameter Name="valueFactory" Type="System.Func`1[T]" />
        </Parameters>
      </Method>
      <Method Name="EnsureInitialized" Return_type="T">
        <Parameters>
          <Parameter Name="target" Type="T&amp;" />
          <Parameter Name="initialized" Type="System.Boolean&amp;" />
          <Parameter Name="syncLock" Type="System.Object&amp;" />
        </Parameters>
      </Method>
      <Method Name="EnsureInitialized" Return_type="T">
        <Parameters>
          <Parameter Name="target" Type="T&amp;" />
          <Parameter Name="initialized" Type="System.Boolean&amp;" />
          <Parameter Name="syncLock" Type="System.Object&amp;" />
          <Parameter Name="valueFactory" Type="System.Func`1[T]" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Threading.ThreadLocal`1">
    <Properties>
      <Property Name="Value" Type="T" />
      <Property Name="Values" Type="System.Collections.Generic.IList`1[T]" />
      <Property Name="IsValueCreated" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_Value" Return_type="T">
        <Parameters />
      </Method>
      <Method Name="set_Value" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="T" />
        </Parameters>
      </Method>
      <Method Name="Dispose" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Values" Return_type="System.Collections.Generic.IList`1[T]">
        <Parameters />
      </Method>
      <Method Name="get_IsValueCreated" Return_type="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Threading.SemaphoreSlim">
    <Properties>
      <Property Name="CurrentCount" Type="System.Int32" />
      <Property Name="AvailableWaitHandle" Type="System.Threading.WaitHandle" />
    </Properties>
    <Methods>
      <Method Name="get_CurrentCount" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_AvailableWaitHandle" Return_type="System.Threading.WaitHandle">
        <Parameters />
      </Method>
      <Method Name="Wait" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Wait" Return_type="System.Void">
        <Parameters>
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="Wait" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="timeout" Type="System.TimeSpan" />
        </Parameters>
      </Method>
      <Method Name="Wait" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="timeout" Type="System.TimeSpan" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="Wait" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Wait" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="millisecondsTimeout" Type="System.Int32" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="WaitAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters />
      </Method>
      <Method Name="WaitAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="WaitAsync" Return_type="System.Threading.Tasks.Task`1[System.Boolean]">
        <Parameters>
          <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="WaitAsync" Return_type="System.Threading.Tasks.Task`1[System.Boolean]">
        <Parameters>
          <Parameter Name="timeout" Type="System.TimeSpan" />
        </Parameters>
      </Method>
      <Method Name="WaitAsync" Return_type="System.Threading.Tasks.Task`1[System.Boolean]">
        <Parameters>
          <Parameter Name="timeout" Type="System.TimeSpan" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="WaitAsync" Return_type="System.Threading.Tasks.Task`1[System.Boolean]">
        <Parameters>
          <Parameter Name="millisecondsTimeout" Type="System.Int32" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="Release" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Release" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="releaseCount" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Dispose" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Threading.ManualResetEventSlim">
    <Properties>
      <Property Name="WaitHandle" Type="System.Threading.WaitHandle" />
      <Property Name="IsSet" Type="System.Boolean" />
      <Property Name="SpinCount" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_WaitHandle" Return_type="System.Threading.WaitHandle">
        <Parameters />
      </Method>
      <Method Name="get_IsSet" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_SpinCount" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Set" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Reset" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Wait" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Wait" Return_type="System.Void">
        <Parameters>
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="Wait" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="timeout" Type="System.TimeSpan" />
        </Parameters>
      </Method>
      <Method Name="Wait" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="timeout" Type="System.TimeSpan" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="Wait" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Wait" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="millisecondsTimeout" Type="System.Int32" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="Dispose" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Threading.CancellationTokenSource">
    <Properties>
      <Property Name="IsCancellationRequested" Type="System.Boolean" />
      <Property Name="Token" Type="System.Threading.CancellationToken" />
    </Properties>
    <Methods>
      <Method Name="get_IsCancellationRequested" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Token" Return_type="System.Threading.CancellationToken">
        <Parameters />
      </Method>
      <Method Name="Cancel" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Cancel" Return_type="System.Void">
        <Parameters>
          <Parameter Name="throwOnFirstException" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="CancelAfter" Return_type="System.Void">
        <Parameters>
          <Parameter Name="delay" Type="System.TimeSpan" />
        </Parameters>
      </Method>
      <Method Name="CancelAfter" Return_type="System.Void">
        <Parameters>
          <Parameter Name="millisecondsDelay" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Dispose" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="CreateLinkedTokenSource" Return_type="System.Threading.CancellationTokenSource">
        <Parameters>
          <Parameter Name="token1" Type="System.Threading.CancellationToken" />
          <Parameter Name="token2" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="CreateLinkedTokenSource" Return_type="System.Threading.CancellationTokenSource">
        <Parameters>
          <Parameter Name="tokens" Type="System.Threading.CancellationToken[]" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Threading.Tasks.Task`1">
    <Properties>
      <Property Name="Result" Type="TResult" />
      <Property Name="Factory" Type="System.Threading.Tasks.TaskFactory`1[TResult]" />
      <Property Name="Id" Type="System.Int32" />
      <Property Name="Exception" Type="System.AggregateException" />
      <Property Name="Status" Type="System.Threading.Tasks.TaskStatus" />
      <Property Name="IsCanceled" Type="System.Boolean" />
      <Property Name="IsCompleted" Type="System.Boolean" />
      <Property Name="CreationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      <Property Name="AsyncState" Type="System.Object" />
      <Property Name="IsFaulted" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_Result" Return_type="TResult">
        <Parameters />
      </Method>
      <Method Name="get_Factory" Return_type="System.Threading.Tasks.TaskFactory`1[TResult]">
        <Parameters />
      </Method>
      <Method Name="GetAwaiter" Return_type="System.Runtime.CompilerServices.TaskAwaiter`1[TResult]">
        <Parameters />
      </Method>
      <Method Name="ConfigureAwait" Return_type="System.Runtime.CompilerServices.ConfiguredTaskAwaitable`1[TResult]">
        <Parameters>
          <Parameter Name="continueOnCapturedContext" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="continuationAction" Type="System.Action`1[System.Threading.Tasks.Task`1[TResult]]" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="continuationAction" Type="System.Action`1[System.Threading.Tasks.Task`1[TResult]]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="continuationAction" Type="System.Action`1[System.Threading.Tasks.Task`1[TResult]]" />
          <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="continuationAction" Type="System.Action`1[System.Threading.Tasks.Task`1[TResult]]" />
          <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="continuationAction" Type="System.Action`1[System.Threading.Tasks.Task`1[TResult]]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
          <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
          <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="continuationAction" Type="System.Action`2[System.Threading.Tasks.Task`1[TResult],System.Object]" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="continuationAction" Type="System.Action`2[System.Threading.Tasks.Task`1[TResult],System.Object]" />
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="continuationAction" Type="System.Action`2[System.Threading.Tasks.Task`1[TResult],System.Object]" />
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="continuationAction" Type="System.Action`2[System.Threading.Tasks.Task`1[TResult],System.Object]" />
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="continuationAction" Type="System.Action`2[System.Threading.Tasks.Task`1[TResult],System.Object]" />
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
          <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
          <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" Return_type="System.Threading.Tasks.Task`1[TNewResult]">
        <Parameters>
          <Parameter Name="continuationFunction" Type="System.Func`2[System.Threading.Tasks.Task`1[TResult],TNewResult]" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" Return_type="System.Threading.Tasks.Task`1[TNewResult]">
        <Parameters>
          <Parameter Name="continuationFunction" Type="System.Func`2[System.Threading.Tasks.Task`1[TResult],TNewResult]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" Return_type="System.Threading.Tasks.Task`1[TNewResult]">
        <Parameters>
          <Parameter Name="continuationFunction" Type="System.Func`2[System.Threading.Tasks.Task`1[TResult],TNewResult]" />
          <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" Return_type="System.Threading.Tasks.Task`1[TNewResult]">
        <Parameters>
          <Parameter Name="continuationFunction" Type="System.Func`2[System.Threading.Tasks.Task`1[TResult],TNewResult]" />
          <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" Return_type="System.Threading.Tasks.Task`1[TNewResult]">
        <Parameters>
          <Parameter Name="continuationFunction" Type="System.Func`2[System.Threading.Tasks.Task`1[TResult],TNewResult]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
          <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
          <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" Return_type="System.Threading.Tasks.Task`1[TNewResult]">
        <Parameters>
          <Parameter Name="continuationFunction" Type="System.Func`3[System.Threading.Tasks.Task`1[TResult],System.Object,TNewResult]" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" Return_type="System.Threading.Tasks.Task`1[TNewResult]">
        <Parameters>
          <Parameter Name="continuationFunction" Type="System.Func`3[System.Threading.Tasks.Task`1[TResult],System.Object,TNewResult]" />
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" Return_type="System.Threading.Tasks.Task`1[TNewResult]">
        <Parameters>
          <Parameter Name="continuationFunction" Type="System.Func`3[System.Threading.Tasks.Task`1[TResult],System.Object,TNewResult]" />
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" Return_type="System.Threading.Tasks.Task`1[TNewResult]">
        <Parameters>
          <Parameter Name="continuationFunction" Type="System.Func`3[System.Threading.Tasks.Task`1[TResult],System.Object,TNewResult]" />
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" Return_type="System.Threading.Tasks.Task`1[TNewResult]">
        <Parameters>
          <Parameter Name="continuationFunction" Type="System.Func`3[System.Threading.Tasks.Task`1[TResult],System.Object,TNewResult]" />
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
          <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
          <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Threading.Tasks.TaskFactory`1">
    <Properties>
      <Property Name="CancellationToken" Type="System.Threading.CancellationToken" />
      <Property Name="Scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      <Property Name="CreationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      <Property Name="ContinuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
    </Properties>
    <Methods>
      <Method Name="get_CancellationToken" Return_type="System.Threading.CancellationToken">
        <Parameters />
      </Method>
      <Method Name="get_Scheduler" Return_type="System.Threading.Tasks.TaskScheduler">
        <Parameters />
      </Method>
      <Method Name="get_CreationOptions" Return_type="System.Threading.Tasks.TaskCreationOptions">
        <Parameters />
      </Method>
      <Method Name="get_ContinuationOptions" Return_type="System.Threading.Tasks.TaskContinuationOptions">
        <Parameters />
      </Method>
      <Method Name="StartNew" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="function" Type="System.Func`1[TResult]" />
        </Parameters>
      </Method>
      <Method Name="StartNew" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="function" Type="System.Func`1[TResult]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="StartNew" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="function" Type="System.Func`1[TResult]" />
          <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        </Parameters>
      </Method>
      <Method Name="StartNew" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="function" Type="System.Func`1[TResult]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
          <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
          <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
        </Parameters>
      </Method>
      <Method Name="StartNew" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="function" Type="System.Func`2[System.Object,TResult]" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="StartNew" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="function" Type="System.Func`2[System.Object,TResult]" />
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="StartNew" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="function" Type="System.Func`2[System.Object,TResult]" />
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        </Parameters>
      </Method>
      <Method Name="StartNew" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="function" Type="System.Func`2[System.Object,TResult]" />
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
          <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
          <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="asyncResult" Type="System.IAsyncResult" />
          <Parameter Name="endMethod" Type="System.Func`2[System.IAsyncResult,TResult]" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="asyncResult" Type="System.IAsyncResult" />
          <Parameter Name="endMethod" Type="System.Func`2[System.IAsyncResult,TResult]" />
          <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="asyncResult" Type="System.IAsyncResult" />
          <Parameter Name="endMethod" Type="System.Func`2[System.IAsyncResult,TResult]" />
          <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
          <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Func`3[System.AsyncCallback,System.Object,System.IAsyncResult]" />
          <Parameter Name="endMethod" Type="System.Func`2[System.IAsyncResult,TResult]" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Func`3[System.AsyncCallback,System.Object,System.IAsyncResult]" />
          <Parameter Name="endMethod" Type="System.Func`2[System.IAsyncResult,TResult]" />
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Func`4[TArg1,System.AsyncCallback,System.Object,System.IAsyncResult]" />
          <Parameter Name="endMethod" Type="System.Func`2[System.IAsyncResult,TResult]" />
          <Parameter Name="arg1" Type="TArg1" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Func`4[TArg1,System.AsyncCallback,System.Object,System.IAsyncResult]" />
          <Parameter Name="endMethod" Type="System.Func`2[System.IAsyncResult,TResult]" />
          <Parameter Name="arg1" Type="TArg1" />
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Func`5[TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult]" />
          <Parameter Name="endMethod" Type="System.Func`2[System.IAsyncResult,TResult]" />
          <Parameter Name="arg1" Type="TArg1" />
          <Parameter Name="arg2" Type="TArg2" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Func`5[TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult]" />
          <Parameter Name="endMethod" Type="System.Func`2[System.IAsyncResult,TResult]" />
          <Parameter Name="arg1" Type="TArg1" />
          <Parameter Name="arg2" Type="TArg2" />
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Func`6[TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult]" />
          <Parameter Name="endMethod" Type="System.Func`2[System.IAsyncResult,TResult]" />
          <Parameter Name="arg1" Type="TArg1" />
          <Parameter Name="arg2" Type="TArg2" />
          <Parameter Name="arg3" Type="TArg3" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Func`6[TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult]" />
          <Parameter Name="endMethod" Type="System.Func`2[System.IAsyncResult,TResult]" />
          <Parameter Name="arg1" Type="TArg1" />
          <Parameter Name="arg2" Type="TArg2" />
          <Parameter Name="arg3" Type="TArg3" />
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
          <Parameter Name="continuationFunction" Type="System.Func`2[System.Threading.Tasks.Task[],TResult]" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
          <Parameter Name="continuationFunction" Type="System.Func`2[System.Threading.Tasks.Task[],TResult]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
          <Parameter Name="continuationFunction" Type="System.Func`2[System.Threading.Tasks.Task[],TResult]" />
          <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
          <Parameter Name="continuationFunction" Type="System.Func`2[System.Threading.Tasks.Task[],TResult]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
          <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
          <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task`1[TAntecedentResult][]" />
          <Parameter Name="continuationFunction" Type="System.Func`2[System.Threading.Tasks.Task`1[TAntecedentResult][],TResult]" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task`1[TAntecedentResult][]" />
          <Parameter Name="continuationFunction" Type="System.Func`2[System.Threading.Tasks.Task`1[TAntecedentResult][],TResult]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task`1[TAntecedentResult][]" />
          <Parameter Name="continuationFunction" Type="System.Func`2[System.Threading.Tasks.Task`1[TAntecedentResult][],TResult]" />
          <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task`1[TAntecedentResult][]" />
          <Parameter Name="continuationFunction" Type="System.Func`2[System.Threading.Tasks.Task`1[TAntecedentResult][],TResult]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
          <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
          <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
          <Parameter Name="continuationFunction" Type="System.Func`2[System.Threading.Tasks.Task,TResult]" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
          <Parameter Name="continuationFunction" Type="System.Func`2[System.Threading.Tasks.Task,TResult]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
          <Parameter Name="continuationFunction" Type="System.Func`2[System.Threading.Tasks.Task,TResult]" />
          <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
          <Parameter Name="continuationFunction" Type="System.Func`2[System.Threading.Tasks.Task,TResult]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
          <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
          <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task`1[TAntecedentResult][]" />
          <Parameter Name="continuationFunction" Type="System.Func`2[System.Threading.Tasks.Task`1[TAntecedentResult],TResult]" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task`1[TAntecedentResult][]" />
          <Parameter Name="continuationFunction" Type="System.Func`2[System.Threading.Tasks.Task`1[TAntecedentResult],TResult]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task`1[TAntecedentResult][]" />
          <Parameter Name="continuationFunction" Type="System.Func`2[System.Threading.Tasks.Task`1[TAntecedentResult],TResult]" />
          <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task`1[TAntecedentResult][]" />
          <Parameter Name="continuationFunction" Type="System.Func`2[System.Threading.Tasks.Task`1[TAntecedentResult],TResult]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
          <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
          <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Threading.Tasks.ParallelOptions">
    <Properties>
      <Property Name="TaskScheduler" Type="System.Threading.Tasks.TaskScheduler" />
      <Property Name="MaxDegreeOfParallelism" Type="System.Int32" />
      <Property Name="CancellationToken" Type="System.Threading.CancellationToken" />
    </Properties>
    <Methods>
      <Method Name="get_TaskScheduler" Return_type="System.Threading.Tasks.TaskScheduler">
        <Parameters />
      </Method>
      <Method Name="set_TaskScheduler" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Threading.Tasks.TaskScheduler" />
        </Parameters>
      </Method>
      <Method Name="get_MaxDegreeOfParallelism" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_MaxDegreeOfParallelism" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_CancellationToken" Return_type="System.Threading.CancellationToken">
        <Parameters />
      </Method>
      <Method Name="set_CancellationToken" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Threading.Tasks.Parallel">
    <Properties />
    <Methods>
      <Method Name="ForEach" Return_type="System.Threading.Tasks.ParallelLoopResult">
        <Parameters>
          <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1[TSource]" />
          <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
          <Parameter Name="body" Type="System.Action`1[TSource]" />
        </Parameters>
      </Method>
      <Method Name="Invoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="actions" Type="System.Action[]" />
        </Parameters>
      </Method>
      <Method Name="Invoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
          <Parameter Name="actions" Type="System.Action[]" />
        </Parameters>
      </Method>
      <Method Name="For" Return_type="System.Threading.Tasks.ParallelLoopResult">
        <Parameters>
          <Parameter Name="fromInclusive" Type="System.Int32" />
          <Parameter Name="toExclusive" Type="System.Int32" />
          <Parameter Name="body" Type="System.Action`1[System.Int32]" />
        </Parameters>
      </Method>
      <Method Name="For" Return_type="System.Threading.Tasks.ParallelLoopResult">
        <Parameters>
          <Parameter Name="fromInclusive" Type="System.Int64" />
          <Parameter Name="toExclusive" Type="System.Int64" />
          <Parameter Name="body" Type="System.Action`1[System.Int64]" />
        </Parameters>
      </Method>
      <Method Name="For" Return_type="System.Threading.Tasks.ParallelLoopResult">
        <Parameters>
          <Parameter Name="fromInclusive" Type="System.Int32" />
          <Parameter Name="toExclusive" Type="System.Int32" />
          <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
          <Parameter Name="body" Type="System.Action`1[System.Int32]" />
        </Parameters>
      </Method>
      <Method Name="For" Return_type="System.Threading.Tasks.ParallelLoopResult">
        <Parameters>
          <Parameter Name="fromInclusive" Type="System.Int64" />
          <Parameter Name="toExclusive" Type="System.Int64" />
          <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
          <Parameter Name="body" Type="System.Action`1[System.Int64]" />
        </Parameters>
      </Method>
      <Method Name="For" Return_type="System.Threading.Tasks.ParallelLoopResult">
        <Parameters>
          <Parameter Name="fromInclusive" Type="System.Int32" />
          <Parameter Name="toExclusive" Type="System.Int32" />
          <Parameter Name="body" Type="System.Action`2[System.Int32,System.Threading.Tasks.ParallelLoopState]" />
        </Parameters>
      </Method>
      <Method Name="For" Return_type="System.Threading.Tasks.ParallelLoopResult">
        <Parameters>
          <Parameter Name="fromInclusive" Type="System.Int64" />
          <Parameter Name="toExclusive" Type="System.Int64" />
          <Parameter Name="body" Type="System.Action`2[System.Int64,System.Threading.Tasks.ParallelLoopState]" />
        </Parameters>
      </Method>
      <Method Name="For" Return_type="System.Threading.Tasks.ParallelLoopResult">
        <Parameters>
          <Parameter Name="fromInclusive" Type="System.Int32" />
          <Parameter Name="toExclusive" Type="System.Int32" />
          <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
          <Parameter Name="body" Type="System.Action`2[System.Int32,System.Threading.Tasks.ParallelLoopState]" />
        </Parameters>
      </Method>
      <Method Name="For" Return_type="System.Threading.Tasks.ParallelLoopResult">
        <Parameters>
          <Parameter Name="fromInclusive" Type="System.Int64" />
          <Parameter Name="toExclusive" Type="System.Int64" />
          <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
          <Parameter Name="body" Type="System.Action`2[System.Int64,System.Threading.Tasks.ParallelLoopState]" />
        </Parameters>
      </Method>
      <Method Name="For" Return_type="System.Threading.Tasks.ParallelLoopResult">
        <Parameters>
          <Parameter Name="fromInclusive" Type="System.Int32" />
          <Parameter Name="toExclusive" Type="System.Int32" />
          <Parameter Name="localInit" Type="System.Func`1[TLocal]" />
          <Parameter Name="body" Type="System.Func`4[System.Int32,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal]" />
          <Parameter Name="localFinally" Type="System.Action`1[TLocal]" />
        </Parameters>
      </Method>
      <Method Name="For" Return_type="System.Threading.Tasks.ParallelLoopResult">
        <Parameters>
          <Parameter Name="fromInclusive" Type="System.Int64" />
          <Parameter Name="toExclusive" Type="System.Int64" />
          <Parameter Name="localInit" Type="System.Func`1[TLocal]" />
          <Parameter Name="body" Type="System.Func`4[System.Int64,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal]" />
          <Parameter Name="localFinally" Type="System.Action`1[TLocal]" />
        </Parameters>
      </Method>
      <Method Name="For" Return_type="System.Threading.Tasks.ParallelLoopResult">
        <Parameters>
          <Parameter Name="fromInclusive" Type="System.Int32" />
          <Parameter Name="toExclusive" Type="System.Int32" />
          <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
          <Parameter Name="localInit" Type="System.Func`1[TLocal]" />
          <Parameter Name="body" Type="System.Func`4[System.Int32,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal]" />
          <Parameter Name="localFinally" Type="System.Action`1[TLocal]" />
        </Parameters>
      </Method>
      <Method Name="For" Return_type="System.Threading.Tasks.ParallelLoopResult">
        <Parameters>
          <Parameter Name="fromInclusive" Type="System.Int64" />
          <Parameter Name="toExclusive" Type="System.Int64" />
          <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
          <Parameter Name="localInit" Type="System.Func`1[TLocal]" />
          <Parameter Name="body" Type="System.Func`4[System.Int64,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal]" />
          <Parameter Name="localFinally" Type="System.Action`1[TLocal]" />
        </Parameters>
      </Method>
      <Method Name="ForEach" Return_type="System.Threading.Tasks.ParallelLoopResult">
        <Parameters>
          <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1[TSource]" />
          <Parameter Name="body" Type="System.Action`1[TSource]" />
        </Parameters>
      </Method>
      <Method Name="ForEach" Return_type="System.Threading.Tasks.ParallelLoopResult">
        <Parameters>
          <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1[TSource]" />
          <Parameter Name="body" Type="System.Action`2[TSource,System.Threading.Tasks.ParallelLoopState]" />
        </Parameters>
      </Method>
      <Method Name="ForEach" Return_type="System.Threading.Tasks.ParallelLoopResult">
        <Parameters>
          <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1[TSource]" />
          <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
          <Parameter Name="body" Type="System.Action`2[TSource,System.Threading.Tasks.ParallelLoopState]" />
        </Parameters>
      </Method>
      <Method Name="ForEach" Return_type="System.Threading.Tasks.ParallelLoopResult">
        <Parameters>
          <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1[TSource]" />
          <Parameter Name="body" Type="System.Action`3[TSource,System.Threading.Tasks.ParallelLoopState,System.Int64]" />
        </Parameters>
      </Method>
      <Method Name="ForEach" Return_type="System.Threading.Tasks.ParallelLoopResult">
        <Parameters>
          <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1[TSource]" />
          <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
          <Parameter Name="body" Type="System.Action`3[TSource,System.Threading.Tasks.ParallelLoopState,System.Int64]" />
        </Parameters>
      </Method>
      <Method Name="ForEach" Return_type="System.Threading.Tasks.ParallelLoopResult">
        <Parameters>
          <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1[TSource]" />
          <Parameter Name="localInit" Type="System.Func`1[TLocal]" />
          <Parameter Name="body" Type="System.Func`4[TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal]" />
          <Parameter Name="localFinally" Type="System.Action`1[TLocal]" />
        </Parameters>
      </Method>
      <Method Name="ForEach" Return_type="System.Threading.Tasks.ParallelLoopResult">
        <Parameters>
          <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1[TSource]" />
          <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
          <Parameter Name="localInit" Type="System.Func`1[TLocal]" />
          <Parameter Name="body" Type="System.Func`4[TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal]" />
          <Parameter Name="localFinally" Type="System.Action`1[TLocal]" />
        </Parameters>
      </Method>
      <Method Name="ForEach" Return_type="System.Threading.Tasks.ParallelLoopResult">
        <Parameters>
          <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1[TSource]" />
          <Parameter Name="localInit" Type="System.Func`1[TLocal]" />
          <Parameter Name="body" Type="System.Func`5[TSource,System.Threading.Tasks.ParallelLoopState,System.Int64,TLocal,TLocal]" />
          <Parameter Name="localFinally" Type="System.Action`1[TLocal]" />
        </Parameters>
      </Method>
      <Method Name="ForEach" Return_type="System.Threading.Tasks.ParallelLoopResult">
        <Parameters>
          <Parameter Name="source" Type="System.Collections.Generic.IEnumerable`1[TSource]" />
          <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
          <Parameter Name="localInit" Type="System.Func`1[TLocal]" />
          <Parameter Name="body" Type="System.Func`5[TSource,System.Threading.Tasks.ParallelLoopState,System.Int64,TLocal,TLocal]" />
          <Parameter Name="localFinally" Type="System.Action`1[TLocal]" />
        </Parameters>
      </Method>
      <Method Name="ForEach" Return_type="System.Threading.Tasks.ParallelLoopResult">
        <Parameters>
          <Parameter Name="source" Type="System.Collections.Concurrent.Partitioner`1[TSource]" />
          <Parameter Name="body" Type="System.Action`1[TSource]" />
        </Parameters>
      </Method>
      <Method Name="ForEach" Return_type="System.Threading.Tasks.ParallelLoopResult">
        <Parameters>
          <Parameter Name="source" Type="System.Collections.Concurrent.Partitioner`1[TSource]" />
          <Parameter Name="body" Type="System.Action`2[TSource,System.Threading.Tasks.ParallelLoopState]" />
        </Parameters>
      </Method>
      <Method Name="ForEach" Return_type="System.Threading.Tasks.ParallelLoopResult">
        <Parameters>
          <Parameter Name="source" Type="System.Collections.Concurrent.OrderablePartitioner`1[TSource]" />
          <Parameter Name="body" Type="System.Action`3[TSource,System.Threading.Tasks.ParallelLoopState,System.Int64]" />
        </Parameters>
      </Method>
      <Method Name="ForEach" Return_type="System.Threading.Tasks.ParallelLoopResult">
        <Parameters>
          <Parameter Name="source" Type="System.Collections.Concurrent.Partitioner`1[TSource]" />
          <Parameter Name="localInit" Type="System.Func`1[TLocal]" />
          <Parameter Name="body" Type="System.Func`4[TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal]" />
          <Parameter Name="localFinally" Type="System.Action`1[TLocal]" />
        </Parameters>
      </Method>
      <Method Name="ForEach" Return_type="System.Threading.Tasks.ParallelLoopResult">
        <Parameters>
          <Parameter Name="source" Type="System.Collections.Concurrent.OrderablePartitioner`1[TSource]" />
          <Parameter Name="localInit" Type="System.Func`1[TLocal]" />
          <Parameter Name="body" Type="System.Func`5[TSource,System.Threading.Tasks.ParallelLoopState,System.Int64,TLocal,TLocal]" />
          <Parameter Name="localFinally" Type="System.Action`1[TLocal]" />
        </Parameters>
      </Method>
      <Method Name="ForEach" Return_type="System.Threading.Tasks.ParallelLoopResult">
        <Parameters>
          <Parameter Name="source" Type="System.Collections.Concurrent.Partitioner`1[TSource]" />
          <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
          <Parameter Name="body" Type="System.Action`1[TSource]" />
        </Parameters>
      </Method>
      <Method Name="ForEach" Return_type="System.Threading.Tasks.ParallelLoopResult">
        <Parameters>
          <Parameter Name="source" Type="System.Collections.Concurrent.Partitioner`1[TSource]" />
          <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
          <Parameter Name="body" Type="System.Action`2[TSource,System.Threading.Tasks.ParallelLoopState]" />
        </Parameters>
      </Method>
      <Method Name="ForEach" Return_type="System.Threading.Tasks.ParallelLoopResult">
        <Parameters>
          <Parameter Name="source" Type="System.Collections.Concurrent.OrderablePartitioner`1[TSource]" />
          <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
          <Parameter Name="body" Type="System.Action`3[TSource,System.Threading.Tasks.ParallelLoopState,System.Int64]" />
        </Parameters>
      </Method>
      <Method Name="ForEach" Return_type="System.Threading.Tasks.ParallelLoopResult">
        <Parameters>
          <Parameter Name="source" Type="System.Collections.Concurrent.Partitioner`1[TSource]" />
          <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
          <Parameter Name="localInit" Type="System.Func`1[TLocal]" />
          <Parameter Name="body" Type="System.Func`4[TSource,System.Threading.Tasks.ParallelLoopState,TLocal,TLocal]" />
          <Parameter Name="localFinally" Type="System.Action`1[TLocal]" />
        </Parameters>
      </Method>
      <Method Name="ForEach" Return_type="System.Threading.Tasks.ParallelLoopResult">
        <Parameters>
          <Parameter Name="source" Type="System.Collections.Concurrent.OrderablePartitioner`1[TSource]" />
          <Parameter Name="parallelOptions" Type="System.Threading.Tasks.ParallelOptions" />
          <Parameter Name="localInit" Type="System.Func`1[TLocal]" />
          <Parameter Name="body" Type="System.Func`5[TSource,System.Threading.Tasks.ParallelLoopState,System.Int64,TLocal,TLocal]" />
          <Parameter Name="localFinally" Type="System.Action`1[TLocal]" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Threading.Tasks.ParallelLoopState">
    <Properties>
      <Property Name="ShouldExitCurrentIteration" Type="System.Boolean" />
      <Property Name="IsStopped" Type="System.Boolean" />
      <Property Name="IsExceptional" Type="System.Boolean" />
      <Property Name="LowestBreakIteration" Type="System.Nullable`1[System.Int64]" />
    </Properties>
    <Methods>
      <Method Name="get_ShouldExitCurrentIteration" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsStopped" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsExceptional" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_LowestBreakIteration" Return_type="System.Nullable`1[System.Int64]">
        <Parameters />
      </Method>
      <Method Name="Stop" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Break" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Threading.Tasks.Task">
    <Properties>
      <Property Name="Id" Type="System.Int32" />
      <Property Name="CurrentId" Type="System.Nullable`1[System.Int32]" />
      <Property Name="Exception" Type="System.AggregateException" />
      <Property Name="Status" Type="System.Threading.Tasks.TaskStatus" />
      <Property Name="IsCanceled" Type="System.Boolean" />
      <Property Name="IsCompleted" Type="System.Boolean" />
      <Property Name="CreationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      <Property Name="AsyncState" Type="System.Object" />
      <Property Name="Factory" Type="System.Threading.Tasks.TaskFactory" />
      <Property Name="CompletedTask" Type="System.Threading.Tasks.Task" />
      <Property Name="IsFaulted" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="Start" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Start" Return_type="System.Void">
        <Parameters>
          <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
        </Parameters>
      </Method>
      <Method Name="RunSynchronously" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="RunSynchronously" Return_type="System.Void">
        <Parameters>
          <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
        </Parameters>
      </Method>
      <Method Name="get_Id" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_CurrentId" Return_type="System.Nullable`1[System.Int32]">
        <Parameters />
      </Method>
      <Method Name="get_Exception" Return_type="System.AggregateException">
        <Parameters />
      </Method>
      <Method Name="get_Status" Return_type="System.Threading.Tasks.TaskStatus">
        <Parameters />
      </Method>
      <Method Name="get_IsCanceled" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsCompleted" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CreationOptions" Return_type="System.Threading.Tasks.TaskCreationOptions">
        <Parameters />
      </Method>
      <Method Name="get_AsyncState" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_Factory" Return_type="System.Threading.Tasks.TaskFactory">
        <Parameters />
      </Method>
      <Method Name="get_CompletedTask" Return_type="System.Threading.Tasks.Task">
        <Parameters />
      </Method>
      <Method Name="get_IsFaulted" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Dispose" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="GetAwaiter" Return_type="System.Runtime.CompilerServices.TaskAwaiter">
        <Parameters />
      </Method>
      <Method Name="ConfigureAwait" Return_type="System.Runtime.CompilerServices.ConfiguredTaskAwaitable">
        <Parameters>
          <Parameter Name="continueOnCapturedContext" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="Yield" Return_type="System.Runtime.CompilerServices.YieldAwaitable">
        <Parameters />
      </Method>
      <Method Name="Wait" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Wait" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="timeout" Type="System.TimeSpan" />
        </Parameters>
      </Method>
      <Method Name="Wait" Return_type="System.Void">
        <Parameters>
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="Wait" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Wait" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="millisecondsTimeout" Type="System.Int32" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="continuationAction" Type="System.Action`1[System.Threading.Tasks.Task]" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="continuationAction" Type="System.Action`1[System.Threading.Tasks.Task]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="continuationAction" Type="System.Action`1[System.Threading.Tasks.Task]" />
          <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="continuationAction" Type="System.Action`1[System.Threading.Tasks.Task]" />
          <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="continuationAction" Type="System.Action`1[System.Threading.Tasks.Task]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
          <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
          <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="continuationAction" Type="System.Action`2[System.Threading.Tasks.Task,System.Object]" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="continuationAction" Type="System.Action`2[System.Threading.Tasks.Task,System.Object]" />
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="continuationAction" Type="System.Action`2[System.Threading.Tasks.Task,System.Object]" />
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="continuationAction" Type="System.Action`2[System.Threading.Tasks.Task,System.Object]" />
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="continuationAction" Type="System.Action`2[System.Threading.Tasks.Task,System.Object]" />
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
          <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
          <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="continuationFunction" Type="System.Func`2[System.Threading.Tasks.Task,TResult]" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="continuationFunction" Type="System.Func`2[System.Threading.Tasks.Task,TResult]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="continuationFunction" Type="System.Func`2[System.Threading.Tasks.Task,TResult]" />
          <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="continuationFunction" Type="System.Func`2[System.Threading.Tasks.Task,TResult]" />
          <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="continuationFunction" Type="System.Func`2[System.Threading.Tasks.Task,TResult]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
          <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
          <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="continuationFunction" Type="System.Func`3[System.Threading.Tasks.Task,System.Object,TResult]" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="continuationFunction" Type="System.Func`3[System.Threading.Tasks.Task,System.Object,TResult]" />
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="continuationFunction" Type="System.Func`3[System.Threading.Tasks.Task,System.Object,TResult]" />
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="continuationFunction" Type="System.Func`3[System.Threading.Tasks.Task,System.Object,TResult]" />
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        </Parameters>
      </Method>
      <Method Name="ContinueWith" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="continuationFunction" Type="System.Func`3[System.Threading.Tasks.Task,System.Object,TResult]" />
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
          <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
          <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
        </Parameters>
      </Method>
      <Method Name="WaitAll" Return_type="System.Void">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        </Parameters>
      </Method>
      <Method Name="WaitAll" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
          <Parameter Name="timeout" Type="System.TimeSpan" />
        </Parameters>
      </Method>
      <Method Name="WaitAll" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
          <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="WaitAll" Return_type="System.Void">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="WaitAll" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
          <Parameter Name="millisecondsTimeout" Type="System.Int32" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="WaitAny" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        </Parameters>
      </Method>
      <Method Name="WaitAny" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
          <Parameter Name="timeout" Type="System.TimeSpan" />
        </Parameters>
      </Method>
      <Method Name="WaitAny" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="WaitAny" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
          <Parameter Name="millisecondsTimeout" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="WaitAny" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
          <Parameter Name="millisecondsTimeout" Type="System.Int32" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="FromResult" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="result" Type="TResult" />
        </Parameters>
      </Method>
      <Method Name="FromException" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="exception" Type="System.Exception" />
        </Parameters>
      </Method>
      <Method Name="FromException" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="exception" Type="System.Exception" />
        </Parameters>
      </Method>
      <Method Name="FromCanceled" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="FromCanceled" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="Run" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="action" Type="System.Action" />
        </Parameters>
      </Method>
      <Method Name="Run" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="action" Type="System.Action" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="Run" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="function" Type="System.Func`1[TResult]" />
        </Parameters>
      </Method>
      <Method Name="Run" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="function" Type="System.Func`1[TResult]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="Run" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="function" Type="System.Func`1[System.Threading.Tasks.Task]" />
        </Parameters>
      </Method>
      <Method Name="Run" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="function" Type="System.Func`1[System.Threading.Tasks.Task]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="Run" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="function" Type="System.Func`1[System.Threading.Tasks.Task`1[TResult]]" />
        </Parameters>
      </Method>
      <Method Name="Run" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="function" Type="System.Func`1[System.Threading.Tasks.Task`1[TResult]]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="Delay" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="delay" Type="System.TimeSpan" />
        </Parameters>
      </Method>
      <Method Name="Delay" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="delay" Type="System.TimeSpan" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="Delay" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="millisecondsDelay" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Delay" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="millisecondsDelay" Type="System.Int32" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="WhenAll" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="tasks" Type="System.Collections.Generic.IEnumerable`1[System.Threading.Tasks.Task]" />
        </Parameters>
      </Method>
      <Method Name="WhenAll" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        </Parameters>
      </Method>
      <Method Name="WhenAll" Return_type="System.Threading.Tasks.Task`1[TResult[]]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Collections.Generic.IEnumerable`1[System.Threading.Tasks.Task`1[TResult]]" />
        </Parameters>
      </Method>
      <Method Name="WhenAll" Return_type="System.Threading.Tasks.Task`1[TResult[]]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task`1[TResult][]" />
        </Parameters>
      </Method>
      <Method Name="WhenAny" Return_type="System.Threading.Tasks.Task`1[System.Threading.Tasks.Task]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
        </Parameters>
      </Method>
      <Method Name="WhenAny" Return_type="System.Threading.Tasks.Task`1[System.Threading.Tasks.Task]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Collections.Generic.IEnumerable`1[System.Threading.Tasks.Task]" />
        </Parameters>
      </Method>
      <Method Name="WhenAny" Return_type="System.Threading.Tasks.Task`1[System.Threading.Tasks.Task`1[TResult]]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task`1[TResult][]" />
        </Parameters>
      </Method>
      <Method Name="WhenAny" Return_type="System.Threading.Tasks.Task`1[System.Threading.Tasks.Task`1[TResult]]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Collections.Generic.IEnumerable`1[System.Threading.Tasks.Task`1[TResult]]" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Threading.Tasks.TaskCanceledException">
    <Properties>
      <Property Name="Task" Type="System.Threading.Tasks.Task" />
      <Property Name="CancellationToken" Type="System.Threading.CancellationToken" />
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Task" Return_type="System.Threading.Tasks.Task">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Threading.Tasks.TaskSchedulerException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Threading.Tasks.TaskFactory">
    <Properties>
      <Property Name="CancellationToken" Type="System.Threading.CancellationToken" />
      <Property Name="Scheduler" Type="System.Threading.Tasks.TaskScheduler" />
      <Property Name="CreationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
      <Property Name="ContinuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
    </Properties>
    <Methods>
      <Method Name="get_CancellationToken" Return_type="System.Threading.CancellationToken">
        <Parameters />
      </Method>
      <Method Name="get_Scheduler" Return_type="System.Threading.Tasks.TaskScheduler">
        <Parameters />
      </Method>
      <Method Name="get_CreationOptions" Return_type="System.Threading.Tasks.TaskCreationOptions">
        <Parameters />
      </Method>
      <Method Name="get_ContinuationOptions" Return_type="System.Threading.Tasks.TaskContinuationOptions">
        <Parameters />
      </Method>
      <Method Name="StartNew" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="action" Type="System.Action" />
        </Parameters>
      </Method>
      <Method Name="StartNew" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="action" Type="System.Action" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="StartNew" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="action" Type="System.Action" />
          <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        </Parameters>
      </Method>
      <Method Name="StartNew" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="action" Type="System.Action" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
          <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
          <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
        </Parameters>
      </Method>
      <Method Name="StartNew" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="action" Type="System.Action`1[System.Object]" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="StartNew" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="action" Type="System.Action`1[System.Object]" />
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="StartNew" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="action" Type="System.Action`1[System.Object]" />
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        </Parameters>
      </Method>
      <Method Name="StartNew" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="action" Type="System.Action`1[System.Object]" />
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
          <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
          <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
        </Parameters>
      </Method>
      <Method Name="StartNew" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="function" Type="System.Func`1[TResult]" />
        </Parameters>
      </Method>
      <Method Name="StartNew" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="function" Type="System.Func`1[TResult]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="StartNew" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="function" Type="System.Func`1[TResult]" />
          <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        </Parameters>
      </Method>
      <Method Name="StartNew" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="function" Type="System.Func`1[TResult]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
          <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
          <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
        </Parameters>
      </Method>
      <Method Name="StartNew" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="function" Type="System.Func`2[System.Object,TResult]" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="StartNew" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="function" Type="System.Func`2[System.Object,TResult]" />
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="StartNew" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="function" Type="System.Func`2[System.Object,TResult]" />
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        </Parameters>
      </Method>
      <Method Name="StartNew" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="function" Type="System.Func`2[System.Object,TResult]" />
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
          <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
          <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="asyncResult" Type="System.IAsyncResult" />
          <Parameter Name="endMethod" Type="System.Action`1[System.IAsyncResult]" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="asyncResult" Type="System.IAsyncResult" />
          <Parameter Name="endMethod" Type="System.Action`1[System.IAsyncResult]" />
          <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="asyncResult" Type="System.IAsyncResult" />
          <Parameter Name="endMethod" Type="System.Action`1[System.IAsyncResult]" />
          <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
          <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Func`3[System.AsyncCallback,System.Object,System.IAsyncResult]" />
          <Parameter Name="endMethod" Type="System.Action`1[System.IAsyncResult]" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Func`3[System.AsyncCallback,System.Object,System.IAsyncResult]" />
          <Parameter Name="endMethod" Type="System.Action`1[System.IAsyncResult]" />
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Func`4[TArg1,System.AsyncCallback,System.Object,System.IAsyncResult]" />
          <Parameter Name="endMethod" Type="System.Action`1[System.IAsyncResult]" />
          <Parameter Name="arg1" Type="TArg1" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Func`4[TArg1,System.AsyncCallback,System.Object,System.IAsyncResult]" />
          <Parameter Name="endMethod" Type="System.Action`1[System.IAsyncResult]" />
          <Parameter Name="arg1" Type="TArg1" />
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Func`5[TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult]" />
          <Parameter Name="endMethod" Type="System.Action`1[System.IAsyncResult]" />
          <Parameter Name="arg1" Type="TArg1" />
          <Parameter Name="arg2" Type="TArg2" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Func`5[TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult]" />
          <Parameter Name="endMethod" Type="System.Action`1[System.IAsyncResult]" />
          <Parameter Name="arg1" Type="TArg1" />
          <Parameter Name="arg2" Type="TArg2" />
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Func`6[TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult]" />
          <Parameter Name="endMethod" Type="System.Action`1[System.IAsyncResult]" />
          <Parameter Name="arg1" Type="TArg1" />
          <Parameter Name="arg2" Type="TArg2" />
          <Parameter Name="arg3" Type="TArg3" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Func`6[TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult]" />
          <Parameter Name="endMethod" Type="System.Action`1[System.IAsyncResult]" />
          <Parameter Name="arg1" Type="TArg1" />
          <Parameter Name="arg2" Type="TArg2" />
          <Parameter Name="arg3" Type="TArg3" />
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="asyncResult" Type="System.IAsyncResult" />
          <Parameter Name="endMethod" Type="System.Func`2[System.IAsyncResult,TResult]" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="asyncResult" Type="System.IAsyncResult" />
          <Parameter Name="endMethod" Type="System.Func`2[System.IAsyncResult,TResult]" />
          <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="asyncResult" Type="System.IAsyncResult" />
          <Parameter Name="endMethod" Type="System.Func`2[System.IAsyncResult,TResult]" />
          <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
          <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Func`3[System.AsyncCallback,System.Object,System.IAsyncResult]" />
          <Parameter Name="endMethod" Type="System.Func`2[System.IAsyncResult,TResult]" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Func`3[System.AsyncCallback,System.Object,System.IAsyncResult]" />
          <Parameter Name="endMethod" Type="System.Func`2[System.IAsyncResult,TResult]" />
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Func`4[TArg1,System.AsyncCallback,System.Object,System.IAsyncResult]" />
          <Parameter Name="endMethod" Type="System.Func`2[System.IAsyncResult,TResult]" />
          <Parameter Name="arg1" Type="TArg1" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Func`4[TArg1,System.AsyncCallback,System.Object,System.IAsyncResult]" />
          <Parameter Name="endMethod" Type="System.Func`2[System.IAsyncResult,TResult]" />
          <Parameter Name="arg1" Type="TArg1" />
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Func`5[TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult]" />
          <Parameter Name="endMethod" Type="System.Func`2[System.IAsyncResult,TResult]" />
          <Parameter Name="arg1" Type="TArg1" />
          <Parameter Name="arg2" Type="TArg2" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Func`5[TArg1,TArg2,System.AsyncCallback,System.Object,System.IAsyncResult]" />
          <Parameter Name="endMethod" Type="System.Func`2[System.IAsyncResult,TResult]" />
          <Parameter Name="arg1" Type="TArg1" />
          <Parameter Name="arg2" Type="TArg2" />
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Func`6[TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult]" />
          <Parameter Name="endMethod" Type="System.Func`2[System.IAsyncResult,TResult]" />
          <Parameter Name="arg1" Type="TArg1" />
          <Parameter Name="arg2" Type="TArg2" />
          <Parameter Name="arg3" Type="TArg3" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="FromAsync" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="beginMethod" Type="System.Func`6[TArg1,TArg2,TArg3,System.AsyncCallback,System.Object,System.IAsyncResult]" />
          <Parameter Name="endMethod" Type="System.Func`2[System.IAsyncResult,TResult]" />
          <Parameter Name="arg1" Type="TArg1" />
          <Parameter Name="arg2" Type="TArg2" />
          <Parameter Name="arg3" Type="TArg3" />
          <Parameter Name="state" Type="System.Object" />
          <Parameter Name="creationOptions" Type="System.Threading.Tasks.TaskCreationOptions" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
          <Parameter Name="continuationAction" Type="System.Action`1[System.Threading.Tasks.Task[]]" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
          <Parameter Name="continuationAction" Type="System.Action`1[System.Threading.Tasks.Task[]]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
          <Parameter Name="continuationAction" Type="System.Action`1[System.Threading.Tasks.Task[]]" />
          <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
          <Parameter Name="continuationAction" Type="System.Action`1[System.Threading.Tasks.Task[]]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
          <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
          <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task`1[TAntecedentResult][]" />
          <Parameter Name="continuationAction" Type="System.Action`1[System.Threading.Tasks.Task`1[TAntecedentResult][]]" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task`1[TAntecedentResult][]" />
          <Parameter Name="continuationAction" Type="System.Action`1[System.Threading.Tasks.Task`1[TAntecedentResult][]]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task`1[TAntecedentResult][]" />
          <Parameter Name="continuationAction" Type="System.Action`1[System.Threading.Tasks.Task`1[TAntecedentResult][]]" />
          <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task`1[TAntecedentResult][]" />
          <Parameter Name="continuationAction" Type="System.Action`1[System.Threading.Tasks.Task`1[TAntecedentResult][]]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
          <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
          <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
          <Parameter Name="continuationFunction" Type="System.Func`2[System.Threading.Tasks.Task[],TResult]" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
          <Parameter Name="continuationFunction" Type="System.Func`2[System.Threading.Tasks.Task[],TResult]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
          <Parameter Name="continuationFunction" Type="System.Func`2[System.Threading.Tasks.Task[],TResult]" />
          <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
          <Parameter Name="continuationFunction" Type="System.Func`2[System.Threading.Tasks.Task[],TResult]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
          <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
          <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task`1[TAntecedentResult][]" />
          <Parameter Name="continuationFunction" Type="System.Func`2[System.Threading.Tasks.Task`1[TAntecedentResult][],TResult]" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task`1[TAntecedentResult][]" />
          <Parameter Name="continuationFunction" Type="System.Func`2[System.Threading.Tasks.Task`1[TAntecedentResult][],TResult]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task`1[TAntecedentResult][]" />
          <Parameter Name="continuationFunction" Type="System.Func`2[System.Threading.Tasks.Task`1[TAntecedentResult][],TResult]" />
          <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAll" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task`1[TAntecedentResult][]" />
          <Parameter Name="continuationFunction" Type="System.Func`2[System.Threading.Tasks.Task`1[TAntecedentResult][],TResult]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
          <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
          <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
          <Parameter Name="continuationAction" Type="System.Action`1[System.Threading.Tasks.Task]" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
          <Parameter Name="continuationAction" Type="System.Action`1[System.Threading.Tasks.Task]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
          <Parameter Name="continuationAction" Type="System.Action`1[System.Threading.Tasks.Task]" />
          <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
          <Parameter Name="continuationAction" Type="System.Action`1[System.Threading.Tasks.Task]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
          <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
          <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
          <Parameter Name="continuationFunction" Type="System.Func`2[System.Threading.Tasks.Task,TResult]" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
          <Parameter Name="continuationFunction" Type="System.Func`2[System.Threading.Tasks.Task,TResult]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
          <Parameter Name="continuationFunction" Type="System.Func`2[System.Threading.Tasks.Task,TResult]" />
          <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task[]" />
          <Parameter Name="continuationFunction" Type="System.Func`2[System.Threading.Tasks.Task,TResult]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
          <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
          <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task`1[TAntecedentResult][]" />
          <Parameter Name="continuationFunction" Type="System.Func`2[System.Threading.Tasks.Task`1[TAntecedentResult],TResult]" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task`1[TAntecedentResult][]" />
          <Parameter Name="continuationFunction" Type="System.Func`2[System.Threading.Tasks.Task`1[TAntecedentResult],TResult]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task`1[TAntecedentResult][]" />
          <Parameter Name="continuationFunction" Type="System.Func`2[System.Threading.Tasks.Task`1[TAntecedentResult],TResult]" />
          <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task`1[TAntecedentResult][]" />
          <Parameter Name="continuationFunction" Type="System.Func`2[System.Threading.Tasks.Task`1[TAntecedentResult],TResult]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
          <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
          <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task`1[TAntecedentResult][]" />
          <Parameter Name="continuationAction" Type="System.Action`1[System.Threading.Tasks.Task`1[TAntecedentResult]]" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task`1[TAntecedentResult][]" />
          <Parameter Name="continuationAction" Type="System.Action`1[System.Threading.Tasks.Task`1[TAntecedentResult]]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task`1[TAntecedentResult][]" />
          <Parameter Name="continuationAction" Type="System.Action`1[System.Threading.Tasks.Task`1[TAntecedentResult]]" />
          <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
        </Parameters>
      </Method>
      <Method Name="ContinueWhenAny" Return_type="System.Threading.Tasks.Task">
        <Parameters>
          <Parameter Name="tasks" Type="System.Threading.Tasks.Task`1[TAntecedentResult][]" />
          <Parameter Name="continuationAction" Type="System.Action`1[System.Threading.Tasks.Task`1[TAntecedentResult]]" />
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
          <Parameter Name="continuationOptions" Type="System.Threading.Tasks.TaskContinuationOptions" />
          <Parameter Name="scheduler" Type="System.Threading.Tasks.TaskScheduler" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Threading.Tasks.TaskScheduler">
    <Properties>
      <Property Name="MaximumConcurrencyLevel" Type="System.Int32" />
      <Property Name="Default" Type="System.Threading.Tasks.TaskScheduler" />
      <Property Name="Current" Type="System.Threading.Tasks.TaskScheduler" />
      <Property Name="Id" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_MaximumConcurrencyLevel" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_Default" Return_type="System.Threading.Tasks.TaskScheduler">
        <Parameters />
      </Method>
      <Method Name="get_Current" Return_type="System.Threading.Tasks.TaskScheduler">
        <Parameters />
      </Method>
      <Method Name="FromCurrentSynchronizationContext" Return_type="System.Threading.Tasks.TaskScheduler">
        <Parameters />
      </Method>
      <Method Name="get_Id" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="add_UnobservedTaskException" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.EventHandler`1[System.Threading.Tasks.UnobservedTaskExceptionEventArgs]" />
        </Parameters>
      </Method>
      <Method Name="remove_UnobservedTaskException" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.EventHandler`1[System.Threading.Tasks.UnobservedTaskExceptionEventArgs]" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Threading.Tasks.UnobservedTaskExceptionEventArgs">
    <Properties>
      <Property Name="Observed" Type="System.Boolean" />
      <Property Name="Exception" Type="System.AggregateException" />
    </Properties>
    <Methods>
      <Method Name="SetObserved" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_Observed" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Exception" Return_type="System.AggregateException">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Threading.Tasks.TaskCompletionSource`1">
    <Properties>
      <Property Name="Task" Type="System.Threading.Tasks.Task`1[TResult]" />
    </Properties>
    <Methods>
      <Method Name="get_Task" Return_type="System.Threading.Tasks.Task`1[TResult]">
        <Parameters />
      </Method>
      <Method Name="TrySetException" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="exception" Type="System.Exception" />
        </Parameters>
      </Method>
      <Method Name="TrySetException" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="exceptions" Type="System.Collections.Generic.IEnumerable`1[System.Exception]" />
        </Parameters>
      </Method>
      <Method Name="SetException" Return_type="System.Void">
        <Parameters>
          <Parameter Name="exception" Type="System.Exception" />
        </Parameters>
      </Method>
      <Method Name="SetException" Return_type="System.Void">
        <Parameters>
          <Parameter Name="exceptions" Type="System.Collections.Generic.IEnumerable`1[System.Exception]" />
        </Parameters>
      </Method>
      <Method Name="TrySetResult" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="result" Type="TResult" />
        </Parameters>
      </Method>
      <Method Name="SetResult" Return_type="System.Void">
        <Parameters>
          <Parameter Name="result" Type="TResult" />
        </Parameters>
      </Method>
      <Method Name="TrySetCanceled" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="TrySetCanceled" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
        </Parameters>
      </Method>
      <Method Name="SetCanceled" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Threading.Tasks.ConcurrentExclusiveSchedulerPair">
    <Properties>
      <Property Name="Completion" Type="System.Threading.Tasks.Task" />
      <Property Name="ConcurrentScheduler" Type="System.Threading.Tasks.TaskScheduler" />
      <Property Name="ExclusiveScheduler" Type="System.Threading.Tasks.TaskScheduler" />
    </Properties>
    <Methods>
      <Method Name="Complete" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_Completion" Return_type="System.Threading.Tasks.Task">
        <Parameters />
      </Method>
      <Method Name="get_ConcurrentScheduler" Return_type="System.Threading.Tasks.TaskScheduler">
        <Parameters />
      </Method>
      <Method Name="get_ExclusiveScheduler" Return_type="System.Threading.Tasks.TaskScheduler">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.AmbiguousMatchException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Reflection.ModuleResolveEventHandler">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" Return_type="System.Reflection.Module">
        <Parameters>
          <Parameter Name="sender" Type="System.Object" />
          <Parameter Name="e" Type="System.ResolveEventArgs" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="sender" Type="System.Object" />
          <Parameter Name="e" Type="System.ResolveEventArgs" />
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="object" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" Return_type="System.Reflection.Module">
        <Parameters>
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.Assembly">
    <Properties>
      <Property Name="CodeBase" Type="System.String" />
      <Property Name="EscapedCodeBase" Type="System.String" />
      <Property Name="FullName" Type="System.String" />
      <Property Name="EntryPoint" Type="System.Reflection.MethodInfo" />
      <Property Name="ExportedTypes" Type="System.Collections.Generic.IEnumerable`1[System.Type]" />
      <Property Name="DefinedTypes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.TypeInfo]" />
      <Property Name="Evidence" Type="System.Security.Policy.Evidence" />
      <Property Name="PermissionSet" Type="System.Security.PermissionSet" />
      <Property Name="IsFullyTrusted" Type="System.Boolean" />
      <Property Name="SecurityRuleSet" Type="System.Security.SecurityRuleSet" />
      <Property Name="ManifestModule" Type="System.Reflection.Module" />
      <Property Name="CustomAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]" />
      <Property Name="ReflectionOnly" Type="System.Boolean" />
      <Property Name="Modules" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.Module]" />
      <Property Name="Location" Type="System.String" />
      <Property Name="ImageRuntimeVersion" Type="System.String" />
      <Property Name="GlobalAssemblyCache" Type="System.Boolean" />
      <Property Name="HostContext" Type="System.Int64" />
      <Property Name="IsDynamic" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="CreateQualifiedName" Return_type="System.String">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.String" />
          <Parameter Name="typeName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetAssembly" Return_type="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="op_Equality" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="left" Type="System.Reflection.Assembly" />
          <Parameter Name="right" Type="System.Reflection.Assembly" />
        </Parameters>
      </Method>
      <Method Name="op_Inequality" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="left" Type="System.Reflection.Assembly" />
          <Parameter Name="right" Type="System.Reflection.Assembly" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="LoadFrom" Return_type="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="assemblyFile" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ReflectionOnlyLoadFrom" Return_type="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="assemblyFile" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="LoadFrom" Return_type="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="assemblyFile" Type="System.String" />
          <Parameter Name="securityEvidence" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="LoadFrom" Return_type="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="assemblyFile" Type="System.String" />
          <Parameter Name="securityEvidence" Type="System.Security.Policy.Evidence" />
          <Parameter Name="hashValue" Type="System.Byte[]" />
          <Parameter Name="hashAlgorithm" Type="System.Configuration.Assemblies.AssemblyHashAlgorithm" />
        </Parameters>
      </Method>
      <Method Name="LoadFrom" Return_type="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="assemblyFile" Type="System.String" />
          <Parameter Name="hashValue" Type="System.Byte[]" />
          <Parameter Name="hashAlgorithm" Type="System.Configuration.Assemblies.AssemblyHashAlgorithm" />
        </Parameters>
      </Method>
      <Method Name="UnsafeLoadFrom" Return_type="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="assemblyFile" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Load" Return_type="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="assemblyString" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ReflectionOnlyLoad" Return_type="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="assemblyString" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Load" Return_type="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="assemblyString" Type="System.String" />
          <Parameter Name="assemblySecurity" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="Load" Return_type="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="assemblyRef" Type="System.Reflection.AssemblyName" />
        </Parameters>
      </Method>
      <Method Name="Load" Return_type="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="assemblyRef" Type="System.Reflection.AssemblyName" />
          <Parameter Name="assemblySecurity" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="LoadWithPartialName" Return_type="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="partialName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="LoadWithPartialName" Return_type="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="partialName" Type="System.String" />
          <Parameter Name="securityEvidence" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="Load" Return_type="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="rawAssembly" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="ReflectionOnlyLoad" Return_type="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="rawAssembly" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="Load" Return_type="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="rawAssembly" Type="System.Byte[]" />
          <Parameter Name="rawSymbolStore" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="Load" Return_type="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="rawAssembly" Type="System.Byte[]" />
          <Parameter Name="rawSymbolStore" Type="System.Byte[]" />
          <Parameter Name="securityContextSource" Type="System.Security.SecurityContextSource" />
        </Parameters>
      </Method>
      <Method Name="Load" Return_type="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="rawAssembly" Type="System.Byte[]" />
          <Parameter Name="rawSymbolStore" Type="System.Byte[]" />
          <Parameter Name="securityEvidence" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="LoadFile" Return_type="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="LoadFile" Return_type="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="path" Type="System.String" />
          <Parameter Name="securityEvidence" Type="System.Security.Policy.Evidence" />
        </Parameters>
      </Method>
      <Method Name="GetExecutingAssembly" Return_type="System.Reflection.Assembly">
        <Parameters />
      </Method>
      <Method Name="GetCallingAssembly" Return_type="System.Reflection.Assembly">
        <Parameters />
      </Method>
      <Method Name="GetEntryAssembly" Return_type="System.Reflection.Assembly">
        <Parameters />
      </Method>
      <Method Name="add_ModuleResolve" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.ModuleResolveEventHandler" />
        </Parameters>
      </Method>
      <Method Name="remove_ModuleResolve" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.ModuleResolveEventHandler" />
        </Parameters>
      </Method>
      <Method Name="get_CodeBase" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_EscapedCodeBase" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetName" Return_type="System.Reflection.AssemblyName">
        <Parameters />
      </Method>
      <Method Name="GetName" Return_type="System.Reflection.AssemblyName">
        <Parameters>
          <Parameter Name="copiedName" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_FullName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_EntryPoint" Return_type="System.Reflection.MethodInfo">
        <Parameters />
      </Method>
      <Method Name="GetType" Return_type="System.Type">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetType" Return_type="System.Type">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="throwOnError" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetType" Return_type="System.Type">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="throwOnError" Type="System.Boolean" />
          <Parameter Name="ignoreCase" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_ExportedTypes" Return_type="System.Collections.Generic.IEnumerable`1[System.Type]">
        <Parameters />
      </Method>
      <Method Name="GetExportedTypes" Return_type="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="get_DefinedTypes" Return_type="System.Collections.Generic.IEnumerable`1[System.Reflection.TypeInfo]">
        <Parameters />
      </Method>
      <Method Name="GetTypes" Return_type="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="GetManifestResourceStream" Return_type="System.IO.Stream">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetManifestResourceStream" Return_type="System.IO.Stream">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetSatelliteAssembly" Return_type="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        </Parameters>
      </Method>
      <Method Name="GetSatelliteAssembly" Return_type="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
          <Parameter Name="version" Type="System.Version" />
        </Parameters>
      </Method>
      <Method Name="get_Evidence" Return_type="System.Security.Policy.Evidence">
        <Parameters />
      </Method>
      <Method Name="get_PermissionSet" Return_type="System.Security.PermissionSet">
        <Parameters />
      </Method>
      <Method Name="get_IsFullyTrusted" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_SecurityRuleSet" Return_type="System.Security.SecurityRuleSet">
        <Parameters />
      </Method>
      <Method Name="GetObjectData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
      <Method Name="get_ManifestModule" Return_type="System.Reflection.Module">
        <Parameters />
      </Method>
      <Method Name="get_CustomAttributes" Return_type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]">
        <Parameters />
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Object[]">
        <Parameters>
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Object[]">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="IsDefined" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributesData" Return_type="System.Collections.Generic.IList`1[System.Reflection.CustomAttributeData]">
        <Parameters />
      </Method>
      <Method Name="get_ReflectionOnly" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="LoadModule" Return_type="System.Reflection.Module">
        <Parameters>
          <Parameter Name="moduleName" Type="System.String" />
          <Parameter Name="rawModule" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="LoadModule" Return_type="System.Reflection.Module">
        <Parameters>
          <Parameter Name="moduleName" Type="System.String" />
          <Parameter Name="rawModule" Type="System.Byte[]" />
          <Parameter Name="rawSymbolStore" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="CreateInstance" Return_type="System.Object">
        <Parameters>
          <Parameter Name="typeName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="CreateInstance" Return_type="System.Object">
        <Parameters>
          <Parameter Name="typeName" Type="System.String" />
          <Parameter Name="ignoreCase" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="CreateInstance" Return_type="System.Object">
        <Parameters>
          <Parameter Name="typeName" Type="System.String" />
          <Parameter Name="ignoreCase" Type="System.Boolean" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="binder" Type="System.Reflection.Binder" />
          <Parameter Name="args" Type="System.Object[]" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
          <Parameter Name="activationAttributes" Type="System.Object[]" />
        </Parameters>
      </Method>
      <Method Name="get_Modules" Return_type="System.Collections.Generic.IEnumerable`1[System.Reflection.Module]">
        <Parameters />
      </Method>
      <Method Name="GetLoadedModules" Return_type="System.Reflection.Module[]">
        <Parameters />
      </Method>
      <Method Name="GetLoadedModules" Return_type="System.Reflection.Module[]">
        <Parameters>
          <Parameter Name="getResourceModules" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetModules" Return_type="System.Reflection.Module[]">
        <Parameters />
      </Method>
      <Method Name="GetModules" Return_type="System.Reflection.Module[]">
        <Parameters>
          <Parameter Name="getResourceModules" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetModule" Return_type="System.Reflection.Module">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetFile" Return_type="System.IO.FileStream">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetFiles" Return_type="System.IO.FileStream[]">
        <Parameters />
      </Method>
      <Method Name="GetFiles" Return_type="System.IO.FileStream[]">
        <Parameters>
          <Parameter Name="getResourceModules" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetManifestResourceNames" Return_type="System.String[]">
        <Parameters />
      </Method>
      <Method Name="GetReferencedAssemblies" Return_type="System.Reflection.AssemblyName[]">
        <Parameters />
      </Method>
      <Method Name="GetManifestResourceInfo" Return_type="System.Reflection.ManifestResourceInfo">
        <Parameters>
          <Parameter Name="resourceName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Location" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ImageRuntimeVersion" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_GlobalAssemblyCache" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_HostContext" Return_type="System.Int64">
        <Parameters />
      </Method>
      <Method Name="get_IsDynamic" Return_type="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.AssemblyCopyrightAttribute">
    <Properties>
      <Property Name="Copyright" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Copyright" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.AssemblyTrademarkAttribute">
    <Properties>
      <Property Name="Trademark" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Trademark" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.AssemblyProductAttribute">
    <Properties>
      <Property Name="Product" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Product" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.AssemblyCompanyAttribute">
    <Properties>
      <Property Name="Company" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Company" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.AssemblyDescriptionAttribute">
    <Properties>
      <Property Name="Description" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Description" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.AssemblyTitleAttribute">
    <Properties>
      <Property Name="Title" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Title" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.AssemblyConfigurationAttribute">
    <Properties>
      <Property Name="Configuration" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Configuration" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.AssemblyDefaultAliasAttribute">
    <Properties>
      <Property Name="DefaultAlias" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_DefaultAlias" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.AssemblyInformationalVersionAttribute">
    <Properties>
      <Property Name="InformationalVersion" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_InformationalVersion" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.AssemblyFileVersionAttribute">
    <Properties>
      <Property Name="Version" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Version" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.AssemblyCultureAttribute">
    <Properties>
      <Property Name="Culture" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Culture" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.AssemblyVersionAttribute">
    <Properties>
      <Property Name="Version" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Version" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.AssemblyKeyFileAttribute">
    <Properties>
      <Property Name="KeyFile" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_KeyFile" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.AssemblyDelaySignAttribute">
    <Properties>
      <Property Name="DelaySign" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_DelaySign" Return_type="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.AssemblyAlgorithmIdAttribute">
    <Properties>
      <Property Name="AlgorithmId" Type="System.UInt32" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_AlgorithmId" Return_type="System.UInt32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.AssemblyFlagsAttribute">
    <Properties>
      <Property Name="Flags" Type="System.UInt32" />
      <Property Name="AssemblyFlags" Type="System.Int32" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Flags" Return_type="System.UInt32">
        <Parameters />
      </Method>
      <Method Name="get_AssemblyFlags" Return_type="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.AssemblyMetadataAttribute">
    <Properties>
      <Property Name="Key" Type="System.String" />
      <Property Name="Value" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Key" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.AssemblySignatureKeyAttribute">
    <Properties>
      <Property Name="PublicKey" Type="System.String" />
      <Property Name="Countersignature" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_PublicKey" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Countersignature" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.AssemblyKeyNameAttribute">
    <Properties>
      <Property Name="KeyName" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_KeyName" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.AssemblyName">
    <Properties>
      <Property Name="Name" Type="System.String" />
      <Property Name="Version" Type="System.Version" />
      <Property Name="CultureInfo" Type="System.Globalization.CultureInfo" />
      <Property Name="CultureName" Type="System.String" />
      <Property Name="CodeBase" Type="System.String" />
      <Property Name="EscapedCodeBase" Type="System.String" />
      <Property Name="ProcessorArchitecture" Type="System.Reflection.ProcessorArchitecture" />
      <Property Name="ContentType" Type="System.Reflection.AssemblyContentType" />
      <Property Name="Flags" Type="System.Reflection.AssemblyNameFlags" />
      <Property Name="HashAlgorithm" Type="System.Configuration.Assemblies.AssemblyHashAlgorithm" />
      <Property Name="VersionCompatibility" Type="System.Configuration.Assemblies.AssemblyVersionCompatibility" />
      <Property Name="KeyPair" Type="System.Reflection.StrongNameKeyPair" />
      <Property Name="FullName" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Name" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_Version" Return_type="System.Version">
        <Parameters />
      </Method>
      <Method Name="set_Version" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Version" />
        </Parameters>
      </Method>
      <Method Name="get_CultureInfo" Return_type="System.Globalization.CultureInfo">
        <Parameters />
      </Method>
      <Method Name="set_CultureInfo" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Globalization.CultureInfo" />
        </Parameters>
      </Method>
      <Method Name="get_CultureName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_CultureName" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_CodeBase" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_CodeBase" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_EscapedCodeBase" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ProcessorArchitecture" Return_type="System.Reflection.ProcessorArchitecture">
        <Parameters />
      </Method>
      <Method Name="set_ProcessorArchitecture" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.ProcessorArchitecture" />
        </Parameters>
      </Method>
      <Method Name="get_ContentType" Return_type="System.Reflection.AssemblyContentType">
        <Parameters />
      </Method>
      <Method Name="set_ContentType" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.AssemblyContentType" />
        </Parameters>
      </Method>
      <Method Name="Clone" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="GetAssemblyName" Return_type="System.Reflection.AssemblyName">
        <Parameters>
          <Parameter Name="assemblyFile" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetPublicKey" Return_type="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="SetPublicKey" Return_type="System.Void">
        <Parameters>
          <Parameter Name="publicKey" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="GetPublicKeyToken" Return_type="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="SetPublicKeyToken" Return_type="System.Void">
        <Parameters>
          <Parameter Name="publicKeyToken" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="get_Flags" Return_type="System.Reflection.AssemblyNameFlags">
        <Parameters />
      </Method>
      <Method Name="set_Flags" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.AssemblyNameFlags" />
        </Parameters>
      </Method>
      <Method Name="get_HashAlgorithm" Return_type="System.Configuration.Assemblies.AssemblyHashAlgorithm">
        <Parameters />
      </Method>
      <Method Name="set_HashAlgorithm" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Configuration.Assemblies.AssemblyHashAlgorithm" />
        </Parameters>
      </Method>
      <Method Name="get_VersionCompatibility" Return_type="System.Configuration.Assemblies.AssemblyVersionCompatibility">
        <Parameters />
      </Method>
      <Method Name="set_VersionCompatibility" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Configuration.Assemblies.AssemblyVersionCompatibility" />
        </Parameters>
      </Method>
      <Method Name="get_KeyPair" Return_type="System.Reflection.StrongNameKeyPair">
        <Parameters />
      </Method>
      <Method Name="set_KeyPair" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Reflection.StrongNameKeyPair" />
        </Parameters>
      </Method>
      <Method Name="get_FullName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetObjectData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
      <Method Name="OnDeserialization" Return_type="System.Void">
        <Parameters>
          <Parameter Name="sender" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="ReferenceMatchesDefinition" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="reference" Type="System.Reflection.AssemblyName" />
          <Parameter Name="definition" Type="System.Reflection.AssemblyName" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.AssemblyNameProxy">
    <Properties />
    <Methods>
      <Method Name="GetAssemblyName" Return_type="System.Reflection.AssemblyName">
        <Parameters>
          <Parameter Name="assemblyFile" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.CustomAttributeExtensions">
    <Properties />
    <Methods>
      <Method Name="GetCustomAttribute" Return_type="System.Attribute">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.Assembly" />
          <Parameter Name="attributeType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttribute" Return_type="System.Attribute">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.Module" />
          <Parameter Name="attributeType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttribute" Return_type="System.Attribute">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.MemberInfo" />
          <Parameter Name="attributeType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttribute" Return_type="System.Attribute">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
          <Parameter Name="attributeType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttribute" Return_type="T">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.Assembly" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttribute" Return_type="T">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.Module" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttribute" Return_type="T">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttribute" Return_type="T">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttribute" Return_type="System.Attribute">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.MemberInfo" />
          <Parameter Name="attributeType" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttribute" Return_type="System.Attribute">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
          <Parameter Name="attributeType" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttribute" Return_type="T">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.MemberInfo" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttribute" Return_type="T">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Collections.Generic.IEnumerable`1[System.Attribute]">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.Assembly" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Collections.Generic.IEnumerable`1[System.Attribute]">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.Module" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Collections.Generic.IEnumerable`1[System.Attribute]">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Collections.Generic.IEnumerable`1[System.Attribute]">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Collections.Generic.IEnumerable`1[System.Attribute]">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.MemberInfo" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Collections.Generic.IEnumerable`1[System.Attribute]">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Collections.Generic.IEnumerable`1[System.Attribute]">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.Assembly" />
          <Parameter Name="attributeType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Collections.Generic.IEnumerable`1[System.Attribute]">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.Module" />
          <Parameter Name="attributeType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Collections.Generic.IEnumerable`1[System.Attribute]">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.MemberInfo" />
          <Parameter Name="attributeType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Collections.Generic.IEnumerable`1[System.Attribute]">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
          <Parameter Name="attributeType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Collections.Generic.IEnumerable`1[T]">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.Assembly" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Collections.Generic.IEnumerable`1[T]">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.Module" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Collections.Generic.IEnumerable`1[T]">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.MemberInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Collections.Generic.IEnumerable`1[T]">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Collections.Generic.IEnumerable`1[System.Attribute]">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.MemberInfo" />
          <Parameter Name="attributeType" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Collections.Generic.IEnumerable`1[System.Attribute]">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
          <Parameter Name="attributeType" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Collections.Generic.IEnumerable`1[T]">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.MemberInfo" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Collections.Generic.IEnumerable`1[T]">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="IsDefined" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.Assembly" />
          <Parameter Name="attributeType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="IsDefined" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.Module" />
          <Parameter Name="attributeType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="IsDefined" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.MemberInfo" />
          <Parameter Name="attributeType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="IsDefined" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
          <Parameter Name="attributeType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="IsDefined" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.MemberInfo" />
          <Parameter Name="attributeType" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="IsDefined" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="element" Type="System.Reflection.ParameterInfo" />
          <Parameter Name="attributeType" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.CustomAttributeFormatException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Reflection.Binder">
    <Properties />
    <Methods>
      <Method Name="BindToMethod" Return_type="System.Reflection.MethodBase">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="match" Type="System.Reflection.MethodBase[]" />
          <Parameter Name="args" Type="System.Object[]&amp;" />
          <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
          <Parameter Name="names" Type="System.String[]" />
          <Parameter Name="state" Type="System.Object&amp;" />
        </Parameters>
      </Method>
      <Method Name="BindToField" Return_type="System.Reflection.FieldInfo">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="match" Type="System.Reflection.FieldInfo[]" />
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        </Parameters>
      </Method>
      <Method Name="SelectMethod" Return_type="System.Reflection.MethodBase">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="match" Type="System.Reflection.MethodBase[]" />
          <Parameter Name="types" Type="System.Type[]" />
          <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        </Parameters>
      </Method>
      <Method Name="SelectProperty" Return_type="System.Reflection.PropertyInfo">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="match" Type="System.Reflection.PropertyInfo[]" />
          <Parameter Name="returnType" Type="System.Type" />
          <Parameter Name="indexes" Type="System.Type[]" />
          <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        </Parameters>
      </Method>
      <Method Name="ChangeType" Return_type="System.Object">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="type" Type="System.Type" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        </Parameters>
      </Method>
      <Method Name="ReorderArgumentArray" Return_type="System.Void">
        <Parameters>
          <Parameter Name="args" Type="System.Object[]&amp;" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.ConstructorInfo">
    <Properties>
      <Property Name="MemberType" Type="System.Reflection.MemberTypes" />
      <Property Name="MethodImplementationFlags" Type="System.Reflection.MethodImplAttributes" />
      <Property Name="MethodHandle" Type="System.RuntimeMethodHandle" />
      <Property Name="Attributes" Type="System.Reflection.MethodAttributes" />
      <Property Name="CallingConvention" Type="System.Reflection.CallingConventions" />
      <Property Name="IsGenericMethodDefinition" Type="System.Boolean" />
      <Property Name="ContainsGenericParameters" Type="System.Boolean" />
      <Property Name="IsGenericMethod" Type="System.Boolean" />
      <Property Name="IsSecurityCritical" Type="System.Boolean" />
      <Property Name="IsSecuritySafeCritical" Type="System.Boolean" />
      <Property Name="IsSecurityTransparent" Type="System.Boolean" />
      <Property Name="IsPublic" Type="System.Boolean" />
      <Property Name="IsPrivate" Type="System.Boolean" />
      <Property Name="IsFamily" Type="System.Boolean" />
      <Property Name="IsAssembly" Type="System.Boolean" />
      <Property Name="IsFamilyAndAssembly" Type="System.Boolean" />
      <Property Name="IsFamilyOrAssembly" Type="System.Boolean" />
      <Property Name="IsStatic" Type="System.Boolean" />
      <Property Name="IsFinal" Type="System.Boolean" />
      <Property Name="IsVirtual" Type="System.Boolean" />
      <Property Name="IsHideBySig" Type="System.Boolean" />
      <Property Name="IsAbstract" Type="System.Boolean" />
      <Property Name="IsSpecialName" Type="System.Boolean" />
      <Property Name="IsConstructor" Type="System.Boolean" />
      <Property Name="Name" Type="System.String" />
      <Property Name="DeclaringType" Type="System.Type" />
      <Property Name="ReflectedType" Type="System.Type" />
      <Property Name="CustomAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]" />
      <Property Name="MetadataToken" Type="System.Int32" />
      <Property Name="Module" Type="System.Reflection.Module" />
    </Properties>
    <Methods>
      <Method Name="op_Equality" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="left" Type="System.Reflection.ConstructorInfo" />
          <Parameter Name="right" Type="System.Reflection.ConstructorInfo" />
        </Parameters>
      </Method>
      <Method Name="op_Inequality" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="left" Type="System.Reflection.ConstructorInfo" />
          <Parameter Name="right" Type="System.Reflection.ConstructorInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_MemberType" Return_type="System.Reflection.MemberTypes">
        <Parameters />
      </Method>
      <Method Name="Invoke" Return_type="System.Object">
        <Parameters>
          <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="binder" Type="System.Reflection.Binder" />
          <Parameter Name="parameters" Type="System.Object[]" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        </Parameters>
      </Method>
      <Method Name="Invoke" Return_type="System.Object">
        <Parameters>
          <Parameter Name="parameters" Type="System.Object[]" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.CustomAttributeData">
    <Properties>
      <Property Name="AttributeType" Type="System.Type" />
      <Property Name="Constructor" Type="System.Reflection.ConstructorInfo" />
      <Property Name="ConstructorArguments" Type="System.Collections.Generic.IList`1[System.Reflection.CustomAttributeTypedArgument]" />
      <Property Name="NamedArguments" Type="System.Collections.Generic.IList`1[System.Reflection.CustomAttributeNamedArgument]" />
    </Properties>
    <Methods>
      <Method Name="GetCustomAttributes" Return_type="System.Collections.Generic.IList`1[System.Reflection.CustomAttributeData]">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.MemberInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Collections.Generic.IList`1[System.Reflection.CustomAttributeData]">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.Module" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Collections.Generic.IList`1[System.Reflection.CustomAttributeData]">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.Assembly" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Collections.Generic.IList`1[System.Reflection.CustomAttributeData]">
        <Parameters>
          <Parameter Name="target" Type="System.Reflection.ParameterInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="get_AttributeType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_Constructor" Return_type="System.Reflection.ConstructorInfo">
        <Parameters />
      </Method>
      <Method Name="get_ConstructorArguments" Return_type="System.Collections.Generic.IList`1[System.Reflection.CustomAttributeTypedArgument]">
        <Parameters />
      </Method>
      <Method Name="get_NamedArguments" Return_type="System.Collections.Generic.IList`1[System.Reflection.CustomAttributeNamedArgument]">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.DefaultMemberAttribute">
    <Properties>
      <Property Name="MemberName" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_MemberName" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.EventInfo">
    <Properties>
      <Property Name="MemberType" Type="System.Reflection.MemberTypes" />
      <Property Name="Attributes" Type="System.Reflection.EventAttributes" />
      <Property Name="AddMethod" Type="System.Reflection.MethodInfo" />
      <Property Name="RemoveMethod" Type="System.Reflection.MethodInfo" />
      <Property Name="RaiseMethod" Type="System.Reflection.MethodInfo" />
      <Property Name="EventHandlerType" Type="System.Type" />
      <Property Name="IsSpecialName" Type="System.Boolean" />
      <Property Name="IsMulticast" Type="System.Boolean" />
      <Property Name="Name" Type="System.String" />
      <Property Name="DeclaringType" Type="System.Type" />
      <Property Name="ReflectedType" Type="System.Type" />
      <Property Name="CustomAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]" />
      <Property Name="MetadataToken" Type="System.Int32" />
      <Property Name="Module" Type="System.Reflection.Module" />
    </Properties>
    <Methods>
      <Method Name="op_Equality" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="left" Type="System.Reflection.EventInfo" />
          <Parameter Name="right" Type="System.Reflection.EventInfo" />
        </Parameters>
      </Method>
      <Method Name="op_Inequality" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="left" Type="System.Reflection.EventInfo" />
          <Parameter Name="right" Type="System.Reflection.EventInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_MemberType" Return_type="System.Reflection.MemberTypes">
        <Parameters />
      </Method>
      <Method Name="GetOtherMethods" Return_type="System.Reflection.MethodInfo[]">
        <Parameters>
          <Parameter Name="nonPublic" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetAddMethod" Return_type="System.Reflection.MethodInfo">
        <Parameters>
          <Parameter Name="nonPublic" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetRemoveMethod" Return_type="System.Reflection.MethodInfo">
        <Parameters>
          <Parameter Name="nonPublic" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetRaiseMethod" Return_type="System.Reflection.MethodInfo">
        <Parameters>
          <Parameter Name="nonPublic" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_Attributes" Return_type="System.Reflection.EventAttributes">
        <Parameters />
      </Method>
      <Method Name="get_AddMethod" Return_type="System.Reflection.MethodInfo">
        <Parameters />
      </Method>
      <Method Name="get_RemoveMethod" Return_type="System.Reflection.MethodInfo">
        <Parameters />
      </Method>
      <Method Name="get_RaiseMethod" Return_type="System.Reflection.MethodInfo">
        <Parameters />
      </Method>
      <Method Name="GetOtherMethods" Return_type="System.Reflection.MethodInfo[]">
        <Parameters />
      </Method>
      <Method Name="GetAddMethod" Return_type="System.Reflection.MethodInfo">
        <Parameters />
      </Method>
      <Method Name="GetRemoveMethod" Return_type="System.Reflection.MethodInfo">
        <Parameters />
      </Method>
      <Method Name="GetRaiseMethod" Return_type="System.Reflection.MethodInfo">
        <Parameters />
      </Method>
      <Method Name="AddEventHandler" Return_type="System.Void">
        <Parameters>
          <Parameter Name="target" Type="System.Object" />
          <Parameter Name="handler" Type="System.Delegate" />
        </Parameters>
      </Method>
      <Method Name="RemoveEventHandler" Return_type="System.Void">
        <Parameters>
          <Parameter Name="target" Type="System.Object" />
          <Parameter Name="handler" Type="System.Delegate" />
        </Parameters>
      </Method>
      <Method Name="get_EventHandlerType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_IsSpecialName" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsMulticast" Return_type="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.FieldInfo">
    <Properties>
      <Property Name="MemberType" Type="System.Reflection.MemberTypes" />
      <Property Name="FieldHandle" Type="System.RuntimeFieldHandle" />
      <Property Name="FieldType" Type="System.Type" />
      <Property Name="Attributes" Type="System.Reflection.FieldAttributes" />
      <Property Name="IsPublic" Type="System.Boolean" />
      <Property Name="IsPrivate" Type="System.Boolean" />
      <Property Name="IsFamily" Type="System.Boolean" />
      <Property Name="IsAssembly" Type="System.Boolean" />
      <Property Name="IsFamilyAndAssembly" Type="System.Boolean" />
      <Property Name="IsFamilyOrAssembly" Type="System.Boolean" />
      <Property Name="IsStatic" Type="System.Boolean" />
      <Property Name="IsInitOnly" Type="System.Boolean" />
      <Property Name="IsLiteral" Type="System.Boolean" />
      <Property Name="IsNotSerialized" Type="System.Boolean" />
      <Property Name="IsSpecialName" Type="System.Boolean" />
      <Property Name="IsPinvokeImpl" Type="System.Boolean" />
      <Property Name="IsSecurityCritical" Type="System.Boolean" />
      <Property Name="IsSecuritySafeCritical" Type="System.Boolean" />
      <Property Name="IsSecurityTransparent" Type="System.Boolean" />
      <Property Name="Name" Type="System.String" />
      <Property Name="DeclaringType" Type="System.Type" />
      <Property Name="ReflectedType" Type="System.Type" />
      <Property Name="CustomAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]" />
      <Property Name="MetadataToken" Type="System.Int32" />
      <Property Name="Module" Type="System.Reflection.Module" />
    </Properties>
    <Methods>
      <Method Name="GetFieldFromHandle" Return_type="System.Reflection.FieldInfo">
        <Parameters>
          <Parameter Name="handle" Type="System.RuntimeFieldHandle" />
        </Parameters>
      </Method>
      <Method Name="GetFieldFromHandle" Return_type="System.Reflection.FieldInfo">
        <Parameters>
          <Parameter Name="handle" Type="System.RuntimeFieldHandle" />
          <Parameter Name="declaringType" Type="System.RuntimeTypeHandle" />
        </Parameters>
      </Method>
      <Method Name="op_Equality" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="left" Type="System.Reflection.FieldInfo" />
          <Parameter Name="right" Type="System.Reflection.FieldInfo" />
        </Parameters>
      </Method>
      <Method Name="op_Inequality" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="left" Type="System.Reflection.FieldInfo" />
          <Parameter Name="right" Type="System.Reflection.FieldInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_MemberType" Return_type="System.Reflection.MemberTypes">
        <Parameters />
      </Method>
      <Method Name="GetRequiredCustomModifiers" Return_type="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="GetOptionalCustomModifiers" Return_type="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="SetValueDirect" Return_type="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.TypedReference" />
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetValueDirect" Return_type="System.Object">
        <Parameters>
          <Parameter Name="obj" Type="System.TypedReference" />
        </Parameters>
      </Method>
      <Method Name="get_FieldHandle" Return_type="System.RuntimeFieldHandle">
        <Parameters />
      </Method>
      <Method Name="get_FieldType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="GetValue" Return_type="System.Object">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetRawConstantValue" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="SetValue" Return_type="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="binder" Type="System.Reflection.Binder" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        </Parameters>
      </Method>
      <Method Name="get_Attributes" Return_type="System.Reflection.FieldAttributes">
        <Parameters />
      </Method>
      <Method Name="SetValue" Return_type="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="get_IsPublic" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsPrivate" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsFamily" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsAssembly" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsFamilyAndAssembly" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsFamilyOrAssembly" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsStatic" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsInitOnly" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsLiteral" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsNotSerialized" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSpecialName" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsPinvokeImpl" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSecurityCritical" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSecuritySafeCritical" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSecurityTransparent" Return_type="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.IntrospectionExtensions">
    <Properties />
    <Methods>
      <Method Name="GetTypeInfo" Return_type="System.Reflection.TypeInfo">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.RuntimeReflectionExtensions">
    <Properties />
    <Methods>
      <Method Name="GetRuntimeProperties" Return_type="System.Collections.Generic.IEnumerable`1[System.Reflection.PropertyInfo]">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetRuntimeEvents" Return_type="System.Collections.Generic.IEnumerable`1[System.Reflection.EventInfo]">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetRuntimeMethods" Return_type="System.Collections.Generic.IEnumerable`1[System.Reflection.MethodInfo]">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetRuntimeFields" Return_type="System.Collections.Generic.IEnumerable`1[System.Reflection.FieldInfo]">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetRuntimeProperty" Return_type="System.Reflection.PropertyInfo">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetRuntimeEvent" Return_type="System.Reflection.EventInfo">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetRuntimeMethod" Return_type="System.Reflection.MethodInfo">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="parameters" Type="System.Type[]" />
        </Parameters>
      </Method>
      <Method Name="GetRuntimeField" Return_type="System.Reflection.FieldInfo">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetRuntimeBaseDefinition" Return_type="System.Reflection.MethodInfo">
        <Parameters>
          <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        </Parameters>
      </Method>
      <Method Name="GetRuntimeInterfaceMap" Return_type="System.Reflection.InterfaceMapping">
        <Parameters>
          <Parameter Name="typeInfo" Type="System.Reflection.TypeInfo" />
          <Parameter Name="interfaceType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetMethodInfo" Return_type="System.Reflection.MethodInfo">
        <Parameters>
          <Parameter Name="del" Type="System.Delegate" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.InvalidFilterCriteriaException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Reflection.ManifestResourceInfo">
    <Properties>
      <Property Name="ReferencedAssembly" Type="System.Reflection.Assembly" />
      <Property Name="FileName" Type="System.String" />
      <Property Name="ResourceLocation" Type="System.Reflection.ResourceLocation" />
    </Properties>
    <Methods>
      <Method Name="get_ReferencedAssembly" Return_type="System.Reflection.Assembly">
        <Parameters />
      </Method>
      <Method Name="get_FileName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ResourceLocation" Return_type="System.Reflection.ResourceLocation">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.MemberFilter">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="m" Type="System.Reflection.MemberInfo" />
          <Parameter Name="filterCriteria" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="m" Type="System.Reflection.MemberInfo" />
          <Parameter Name="filterCriteria" Type="System.Object" />
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="object" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.MemberInfo">
    <Properties>
      <Property Name="MemberType" Type="System.Reflection.MemberTypes" />
      <Property Name="Name" Type="System.String" />
      <Property Name="DeclaringType" Type="System.Type" />
      <Property Name="ReflectedType" Type="System.Type" />
      <Property Name="CustomAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]" />
      <Property Name="MetadataToken" Type="System.Int32" />
      <Property Name="Module" Type="System.Reflection.Module" />
    </Properties>
    <Methods>
      <Method Name="get_MemberType" Return_type="System.Reflection.MemberTypes">
        <Parameters />
      </Method>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_DeclaringType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_ReflectedType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_CustomAttributes" Return_type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]">
        <Parameters />
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Object[]">
        <Parameters>
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Object[]">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="IsDefined" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributesData" Return_type="System.Collections.Generic.IList`1[System.Reflection.CustomAttributeData]">
        <Parameters />
      </Method>
      <Method Name="get_MetadataToken" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_Module" Return_type="System.Reflection.Module">
        <Parameters />
      </Method>
      <Method Name="op_Equality" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="left" Type="System.Reflection.MemberInfo" />
          <Parameter Name="right" Type="System.Reflection.MemberInfo" />
        </Parameters>
      </Method>
      <Method Name="op_Inequality" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="left" Type="System.Reflection.MemberInfo" />
          <Parameter Name="right" Type="System.Reflection.MemberInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.MethodBase">
    <Properties>
      <Property Name="MethodImplementationFlags" Type="System.Reflection.MethodImplAttributes" />
      <Property Name="MethodHandle" Type="System.RuntimeMethodHandle" />
      <Property Name="Attributes" Type="System.Reflection.MethodAttributes" />
      <Property Name="CallingConvention" Type="System.Reflection.CallingConventions" />
      <Property Name="IsGenericMethodDefinition" Type="System.Boolean" />
      <Property Name="ContainsGenericParameters" Type="System.Boolean" />
      <Property Name="IsGenericMethod" Type="System.Boolean" />
      <Property Name="IsSecurityCritical" Type="System.Boolean" />
      <Property Name="IsSecuritySafeCritical" Type="System.Boolean" />
      <Property Name="IsSecurityTransparent" Type="System.Boolean" />
      <Property Name="IsPublic" Type="System.Boolean" />
      <Property Name="IsPrivate" Type="System.Boolean" />
      <Property Name="IsFamily" Type="System.Boolean" />
      <Property Name="IsAssembly" Type="System.Boolean" />
      <Property Name="IsFamilyAndAssembly" Type="System.Boolean" />
      <Property Name="IsFamilyOrAssembly" Type="System.Boolean" />
      <Property Name="IsStatic" Type="System.Boolean" />
      <Property Name="IsFinal" Type="System.Boolean" />
      <Property Name="IsVirtual" Type="System.Boolean" />
      <Property Name="IsHideBySig" Type="System.Boolean" />
      <Property Name="IsAbstract" Type="System.Boolean" />
      <Property Name="IsSpecialName" Type="System.Boolean" />
      <Property Name="IsConstructor" Type="System.Boolean" />
      <Property Name="MemberType" Type="System.Reflection.MemberTypes" />
      <Property Name="Name" Type="System.String" />
      <Property Name="DeclaringType" Type="System.Type" />
      <Property Name="ReflectedType" Type="System.Type" />
      <Property Name="CustomAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]" />
      <Property Name="MetadataToken" Type="System.Int32" />
      <Property Name="Module" Type="System.Reflection.Module" />
    </Properties>
    <Methods>
      <Method Name="GetMethodFromHandle" Return_type="System.Reflection.MethodBase">
        <Parameters>
          <Parameter Name="handle" Type="System.RuntimeMethodHandle" />
        </Parameters>
      </Method>
      <Method Name="GetMethodFromHandle" Return_type="System.Reflection.MethodBase">
        <Parameters>
          <Parameter Name="handle" Type="System.RuntimeMethodHandle" />
          <Parameter Name="declaringType" Type="System.RuntimeTypeHandle" />
        </Parameters>
      </Method>
      <Method Name="GetCurrentMethod" Return_type="System.Reflection.MethodBase">
        <Parameters />
      </Method>
      <Method Name="op_Equality" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="left" Type="System.Reflection.MethodBase" />
          <Parameter Name="right" Type="System.Reflection.MethodBase" />
        </Parameters>
      </Method>
      <Method Name="op_Inequality" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="left" Type="System.Reflection.MethodBase" />
          <Parameter Name="right" Type="System.Reflection.MethodBase" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetParameters" Return_type="System.Reflection.ParameterInfo[]">
        <Parameters />
      </Method>
      <Method Name="get_MethodImplementationFlags" Return_type="System.Reflection.MethodImplAttributes">
        <Parameters />
      </Method>
      <Method Name="GetMethodImplementationFlags" Return_type="System.Reflection.MethodImplAttributes">
        <Parameters />
      </Method>
      <Method Name="get_MethodHandle" Return_type="System.RuntimeMethodHandle">
        <Parameters />
      </Method>
      <Method Name="get_Attributes" Return_type="System.Reflection.MethodAttributes">
        <Parameters />
      </Method>
      <Method Name="Invoke" Return_type="System.Object">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
          <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="binder" Type="System.Reflection.Binder" />
          <Parameter Name="parameters" Type="System.Object[]" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        </Parameters>
      </Method>
      <Method Name="get_CallingConvention" Return_type="System.Reflection.CallingConventions">
        <Parameters />
      </Method>
      <Method Name="GetGenericArguments" Return_type="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="get_IsGenericMethodDefinition" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_ContainsGenericParameters" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsGenericMethod" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSecurityCritical" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSecuritySafeCritical" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSecurityTransparent" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Invoke" Return_type="System.Object">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
          <Parameter Name="parameters" Type="System.Object[]" />
        </Parameters>
      </Method>
      <Method Name="get_IsPublic" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsPrivate" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsFamily" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsAssembly" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsFamilyAndAssembly" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsFamilyOrAssembly" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsStatic" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsFinal" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsVirtual" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsHideBySig" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsAbstract" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSpecialName" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsConstructor" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetMethodBody" Return_type="System.Reflection.MethodBody">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.MethodInfo">
    <Properties>
      <Property Name="MemberType" Type="System.Reflection.MemberTypes" />
      <Property Name="ReturnType" Type="System.Type" />
      <Property Name="ReturnParameter" Type="System.Reflection.ParameterInfo" />
      <Property Name="ReturnTypeCustomAttributes" Type="System.Reflection.ICustomAttributeProvider" />
      <Property Name="MethodImplementationFlags" Type="System.Reflection.MethodImplAttributes" />
      <Property Name="MethodHandle" Type="System.RuntimeMethodHandle" />
      <Property Name="Attributes" Type="System.Reflection.MethodAttributes" />
      <Property Name="CallingConvention" Type="System.Reflection.CallingConventions" />
      <Property Name="IsGenericMethodDefinition" Type="System.Boolean" />
      <Property Name="ContainsGenericParameters" Type="System.Boolean" />
      <Property Name="IsGenericMethod" Type="System.Boolean" />
      <Property Name="IsSecurityCritical" Type="System.Boolean" />
      <Property Name="IsSecuritySafeCritical" Type="System.Boolean" />
      <Property Name="IsSecurityTransparent" Type="System.Boolean" />
      <Property Name="IsPublic" Type="System.Boolean" />
      <Property Name="IsPrivate" Type="System.Boolean" />
      <Property Name="IsFamily" Type="System.Boolean" />
      <Property Name="IsAssembly" Type="System.Boolean" />
      <Property Name="IsFamilyAndAssembly" Type="System.Boolean" />
      <Property Name="IsFamilyOrAssembly" Type="System.Boolean" />
      <Property Name="IsStatic" Type="System.Boolean" />
      <Property Name="IsFinal" Type="System.Boolean" />
      <Property Name="IsVirtual" Type="System.Boolean" />
      <Property Name="IsHideBySig" Type="System.Boolean" />
      <Property Name="IsAbstract" Type="System.Boolean" />
      <Property Name="IsSpecialName" Type="System.Boolean" />
      <Property Name="IsConstructor" Type="System.Boolean" />
      <Property Name="Name" Type="System.String" />
      <Property Name="DeclaringType" Type="System.Type" />
      <Property Name="ReflectedType" Type="System.Type" />
      <Property Name="CustomAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]" />
      <Property Name="MetadataToken" Type="System.Int32" />
      <Property Name="Module" Type="System.Reflection.Module" />
    </Properties>
    <Methods>
      <Method Name="op_Equality" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="left" Type="System.Reflection.MethodInfo" />
          <Parameter Name="right" Type="System.Reflection.MethodInfo" />
        </Parameters>
      </Method>
      <Method Name="op_Inequality" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="left" Type="System.Reflection.MethodInfo" />
          <Parameter Name="right" Type="System.Reflection.MethodInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_MemberType" Return_type="System.Reflection.MemberTypes">
        <Parameters />
      </Method>
      <Method Name="get_ReturnType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_ReturnParameter" Return_type="System.Reflection.ParameterInfo">
        <Parameters />
      </Method>
      <Method Name="get_ReturnTypeCustomAttributes" Return_type="System.Reflection.ICustomAttributeProvider">
        <Parameters />
      </Method>
      <Method Name="GetBaseDefinition" Return_type="System.Reflection.MethodInfo">
        <Parameters />
      </Method>
      <Method Name="GetGenericArguments" Return_type="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="GetGenericMethodDefinition" Return_type="System.Reflection.MethodInfo">
        <Parameters />
      </Method>
      <Method Name="MakeGenericMethod" Return_type="System.Reflection.MethodInfo">
        <Parameters>
          <Parameter Name="typeArguments" Type="System.Type[]" />
        </Parameters>
      </Method>
      <Method Name="CreateDelegate" Return_type="System.Delegate">
        <Parameters>
          <Parameter Name="delegateType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="CreateDelegate" Return_type="System.Delegate">
        <Parameters>
          <Parameter Name="delegateType" Type="System.Type" />
          <Parameter Name="target" Type="System.Object" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.Missing">
    <Properties />
    <Methods />
  </Type>
  <Type Full_Name="System.Reflection.Module">
    <Properties>
      <Property Name="CustomAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]" />
      <Property Name="MDStreamVersion" Type="System.Int32" />
      <Property Name="FullyQualifiedName" Type="System.String" />
      <Property Name="ModuleVersionId" Type="System.Guid" />
      <Property Name="MetadataToken" Type="System.Int32" />
      <Property Name="ScopeName" Type="System.String" />
      <Property Name="Name" Type="System.String" />
      <Property Name="Assembly" Type="System.Reflection.Assembly" />
      <Property Name="ModuleHandle" Type="System.ModuleHandle" />
    </Properties>
    <Methods>
      <Method Name="op_Equality" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="left" Type="System.Reflection.Module" />
          <Parameter Name="right" Type="System.Reflection.Module" />
        </Parameters>
      </Method>
      <Method Name="op_Inequality" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="left" Type="System.Reflection.Module" />
          <Parameter Name="right" Type="System.Reflection.Module" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_CustomAttributes" Return_type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]">
        <Parameters />
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Object[]">
        <Parameters>
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Object[]">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="IsDefined" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributesData" Return_type="System.Collections.Generic.IList`1[System.Reflection.CustomAttributeData]">
        <Parameters />
      </Method>
      <Method Name="ResolveMethod" Return_type="System.Reflection.MethodBase">
        <Parameters>
          <Parameter Name="metadataToken" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ResolveMethod" Return_type="System.Reflection.MethodBase">
        <Parameters>
          <Parameter Name="metadataToken" Type="System.Int32" />
          <Parameter Name="genericTypeArguments" Type="System.Type[]" />
          <Parameter Name="genericMethodArguments" Type="System.Type[]" />
        </Parameters>
      </Method>
      <Method Name="ResolveField" Return_type="System.Reflection.FieldInfo">
        <Parameters>
          <Parameter Name="metadataToken" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ResolveField" Return_type="System.Reflection.FieldInfo">
        <Parameters>
          <Parameter Name="metadataToken" Type="System.Int32" />
          <Parameter Name="genericTypeArguments" Type="System.Type[]" />
          <Parameter Name="genericMethodArguments" Type="System.Type[]" />
        </Parameters>
      </Method>
      <Method Name="ResolveType" Return_type="System.Type">
        <Parameters>
          <Parameter Name="metadataToken" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ResolveType" Return_type="System.Type">
        <Parameters>
          <Parameter Name="metadataToken" Type="System.Int32" />
          <Parameter Name="genericTypeArguments" Type="System.Type[]" />
          <Parameter Name="genericMethodArguments" Type="System.Type[]" />
        </Parameters>
      </Method>
      <Method Name="ResolveMember" Return_type="System.Reflection.MemberInfo">
        <Parameters>
          <Parameter Name="metadataToken" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ResolveMember" Return_type="System.Reflection.MemberInfo">
        <Parameters>
          <Parameter Name="metadataToken" Type="System.Int32" />
          <Parameter Name="genericTypeArguments" Type="System.Type[]" />
          <Parameter Name="genericMethodArguments" Type="System.Type[]" />
        </Parameters>
      </Method>
      <Method Name="ResolveSignature" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="metadataToken" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ResolveString" Return_type="System.String">
        <Parameters>
          <Parameter Name="metadataToken" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetPEKind" Return_type="System.Void">
        <Parameters>
          <Parameter Name="peKind" Type="System.Reflection.PortableExecutableKinds&amp;" />
          <Parameter Name="machine" Type="System.Reflection.ImageFileMachine&amp;" />
        </Parameters>
      </Method>
      <Method Name="get_MDStreamVersion" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetObjectData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
      <Method Name="GetType" Return_type="System.Type">
        <Parameters>
          <Parameter Name="className" Type="System.String" />
          <Parameter Name="ignoreCase" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetType" Return_type="System.Type">
        <Parameters>
          <Parameter Name="className" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetType" Return_type="System.Type">
        <Parameters>
          <Parameter Name="className" Type="System.String" />
          <Parameter Name="throwOnError" Type="System.Boolean" />
          <Parameter Name="ignoreCase" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_FullyQualifiedName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="FindTypes" Return_type="System.Type[]">
        <Parameters>
          <Parameter Name="filter" Type="System.Reflection.TypeFilter" />
          <Parameter Name="filterCriteria" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetTypes" Return_type="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="get_ModuleVersionId" Return_type="System.Guid">
        <Parameters />
      </Method>
      <Method Name="get_MetadataToken" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="IsResource" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetFields" Return_type="System.Reflection.FieldInfo[]">
        <Parameters />
      </Method>
      <Method Name="GetFields" Return_type="System.Reflection.FieldInfo[]">
        <Parameters>
          <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetField" Return_type="System.Reflection.FieldInfo">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetField" Return_type="System.Reflection.FieldInfo">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetMethods" Return_type="System.Reflection.MethodInfo[]">
        <Parameters />
      </Method>
      <Method Name="GetMethods" Return_type="System.Reflection.MethodInfo[]">
        <Parameters>
          <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetMethod" Return_type="System.Reflection.MethodInfo">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="binder" Type="System.Reflection.Binder" />
          <Parameter Name="callConvention" Type="System.Reflection.CallingConventions" />
          <Parameter Name="types" Type="System.Type[]" />
          <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
        </Parameters>
      </Method>
      <Method Name="GetMethod" Return_type="System.Reflection.MethodInfo">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="types" Type="System.Type[]" />
        </Parameters>
      </Method>
      <Method Name="GetMethod" Return_type="System.Reflection.MethodInfo">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_ScopeName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Assembly" Return_type="System.Reflection.Assembly">
        <Parameters />
      </Method>
      <Method Name="get_ModuleHandle" Return_type="System.ModuleHandle">
        <Parameters />
      </Method>
      <Method Name="GetSignerCertificate" Return_type="System.Security.Cryptography.X509Certificates.X509Certificate">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.ObfuscateAssemblyAttribute">
    <Properties>
      <Property Name="AssemblyIsPrivate" Type="System.Boolean" />
      <Property Name="StripAfterObfuscation" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_AssemblyIsPrivate" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_StripAfterObfuscation" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_StripAfterObfuscation" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.ObfuscationAttribute">
    <Properties>
      <Property Name="StripAfterObfuscation" Type="System.Boolean" />
      <Property Name="Exclude" Type="System.Boolean" />
      <Property Name="ApplyToMembers" Type="System.Boolean" />
      <Property Name="Feature" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_StripAfterObfuscation" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_StripAfterObfuscation" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_Exclude" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_Exclude" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_ApplyToMembers" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_ApplyToMembers" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_Feature" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Feature" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.ExceptionHandlingClause">
    <Properties>
      <Property Name="Flags" Type="System.Reflection.ExceptionHandlingClauseOptions" />
      <Property Name="TryOffset" Type="System.Int32" />
      <Property Name="TryLength" Type="System.Int32" />
      <Property Name="HandlerOffset" Type="System.Int32" />
      <Property Name="HandlerLength" Type="System.Int32" />
      <Property Name="FilterOffset" Type="System.Int32" />
      <Property Name="CatchType" Type="System.Type" />
    </Properties>
    <Methods>
      <Method Name="get_Flags" Return_type="System.Reflection.ExceptionHandlingClauseOptions">
        <Parameters />
      </Method>
      <Method Name="get_TryOffset" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_TryLength" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_HandlerOffset" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_HandlerLength" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_FilterOffset" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_CatchType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.MethodBody">
    <Properties>
      <Property Name="LocalSignatureMetadataToken" Type="System.Int32" />
      <Property Name="LocalVariables" Type="System.Collections.Generic.IList`1[System.Reflection.LocalVariableInfo]" />
      <Property Name="MaxStackSize" Type="System.Int32" />
      <Property Name="InitLocals" Type="System.Boolean" />
      <Property Name="ExceptionHandlingClauses" Type="System.Collections.Generic.IList`1[System.Reflection.ExceptionHandlingClause]" />
    </Properties>
    <Methods>
      <Method Name="get_LocalSignatureMetadataToken" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_LocalVariables" Return_type="System.Collections.Generic.IList`1[System.Reflection.LocalVariableInfo]">
        <Parameters />
      </Method>
      <Method Name="get_MaxStackSize" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_InitLocals" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetILAsByteArray" Return_type="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="get_ExceptionHandlingClauses" Return_type="System.Collections.Generic.IList`1[System.Reflection.ExceptionHandlingClause]">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.LocalVariableInfo">
    <Properties>
      <Property Name="LocalType" Type="System.Type" />
      <Property Name="IsPinned" Type="System.Boolean" />
      <Property Name="LocalIndex" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_LocalType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_IsPinned" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_LocalIndex" Return_type="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.ParameterInfo">
    <Properties>
      <Property Name="ParameterType" Type="System.Type" />
      <Property Name="Name" Type="System.String" />
      <Property Name="HasDefaultValue" Type="System.Boolean" />
      <Property Name="DefaultValue" Type="System.Object" />
      <Property Name="RawDefaultValue" Type="System.Object" />
      <Property Name="Position" Type="System.Int32" />
      <Property Name="Attributes" Type="System.Reflection.ParameterAttributes" />
      <Property Name="Member" Type="System.Reflection.MemberInfo" />
      <Property Name="IsIn" Type="System.Boolean" />
      <Property Name="IsOut" Type="System.Boolean" />
      <Property Name="IsLcid" Type="System.Boolean" />
      <Property Name="IsRetval" Type="System.Boolean" />
      <Property Name="IsOptional" Type="System.Boolean" />
      <Property Name="MetadataToken" Type="System.Int32" />
      <Property Name="CustomAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]" />
    </Properties>
    <Methods>
      <Method Name="get_ParameterType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_HasDefaultValue" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_DefaultValue" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_RawDefaultValue" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_Position" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_Attributes" Return_type="System.Reflection.ParameterAttributes">
        <Parameters />
      </Method>
      <Method Name="get_Member" Return_type="System.Reflection.MemberInfo">
        <Parameters />
      </Method>
      <Method Name="get_IsIn" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsOut" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsLcid" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsRetval" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsOptional" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_MetadataToken" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetRequiredCustomModifiers" Return_type="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="GetOptionalCustomModifiers" Return_type="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_CustomAttributes" Return_type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]">
        <Parameters />
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Object[]">
        <Parameters>
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Object[]">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="IsDefined" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributesData" Return_type="System.Collections.Generic.IList`1[System.Reflection.CustomAttributeData]">
        <Parameters />
      </Method>
      <Method Name="GetRealObject" Return_type="System.Object">
        <Parameters>
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.Pointer">
    <Properties />
    <Methods>
      <Method Name="Box" Return_type="System.Object">
        <Parameters>
          <Parameter Name="ptr" Type="System.Void*" />
          <Parameter Name="type" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="Unbox" Return_type="System.Void*">
        <Parameters>
          <Parameter Name="ptr" Type="System.Object" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.PropertyInfo">
    <Properties>
      <Property Name="MemberType" Type="System.Reflection.MemberTypes" />
      <Property Name="PropertyType" Type="System.Type" />
      <Property Name="Attributes" Type="System.Reflection.PropertyAttributes" />
      <Property Name="CanRead" Type="System.Boolean" />
      <Property Name="CanWrite" Type="System.Boolean" />
      <Property Name="GetMethod" Type="System.Reflection.MethodInfo" />
      <Property Name="SetMethod" Type="System.Reflection.MethodInfo" />
      <Property Name="IsSpecialName" Type="System.Boolean" />
      <Property Name="Name" Type="System.String" />
      <Property Name="DeclaringType" Type="System.Type" />
      <Property Name="ReflectedType" Type="System.Type" />
      <Property Name="CustomAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]" />
      <Property Name="MetadataToken" Type="System.Int32" />
      <Property Name="Module" Type="System.Reflection.Module" />
    </Properties>
    <Methods>
      <Method Name="op_Equality" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="left" Type="System.Reflection.PropertyInfo" />
          <Parameter Name="right" Type="System.Reflection.PropertyInfo" />
        </Parameters>
      </Method>
      <Method Name="op_Inequality" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="left" Type="System.Reflection.PropertyInfo" />
          <Parameter Name="right" Type="System.Reflection.PropertyInfo" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_MemberType" Return_type="System.Reflection.MemberTypes">
        <Parameters />
      </Method>
      <Method Name="GetConstantValue" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="GetRawConstantValue" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_PropertyType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="SetValue" Return_type="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="binder" Type="System.Reflection.Binder" />
          <Parameter Name="index" Type="System.Object[]" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        </Parameters>
      </Method>
      <Method Name="GetAccessors" Return_type="System.Reflection.MethodInfo[]">
        <Parameters>
          <Parameter Name="nonPublic" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetGetMethod" Return_type="System.Reflection.MethodInfo">
        <Parameters>
          <Parameter Name="nonPublic" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetSetMethod" Return_type="System.Reflection.MethodInfo">
        <Parameters>
          <Parameter Name="nonPublic" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetIndexParameters" Return_type="System.Reflection.ParameterInfo[]">
        <Parameters />
      </Method>
      <Method Name="get_Attributes" Return_type="System.Reflection.PropertyAttributes">
        <Parameters />
      </Method>
      <Method Name="get_CanRead" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CanWrite" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetValue" Return_type="System.Object">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetValue" Return_type="System.Object">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
          <Parameter Name="index" Type="System.Object[]" />
        </Parameters>
      </Method>
      <Method Name="GetValue" Return_type="System.Object">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
          <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="binder" Type="System.Reflection.Binder" />
          <Parameter Name="index" Type="System.Object[]" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        </Parameters>
      </Method>
      <Method Name="SetValue" Return_type="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="SetValue" Return_type="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="index" Type="System.Object[]" />
        </Parameters>
      </Method>
      <Method Name="GetRequiredCustomModifiers" Return_type="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="GetOptionalCustomModifiers" Return_type="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="GetAccessors" Return_type="System.Reflection.MethodInfo[]">
        <Parameters />
      </Method>
      <Method Name="get_GetMethod" Return_type="System.Reflection.MethodInfo">
        <Parameters />
      </Method>
      <Method Name="get_SetMethod" Return_type="System.Reflection.MethodInfo">
        <Parameters />
      </Method>
      <Method Name="GetGetMethod" Return_type="System.Reflection.MethodInfo">
        <Parameters />
      </Method>
      <Method Name="GetSetMethod" Return_type="System.Reflection.MethodInfo">
        <Parameters />
      </Method>
      <Method Name="get_IsSpecialName" Return_type="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.ReflectionContext">
    <Properties />
    <Methods>
      <Method Name="MapAssembly" Return_type="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        </Parameters>
      </Method>
      <Method Name="MapType" Return_type="System.Reflection.TypeInfo">
        <Parameters>
          <Parameter Name="type" Type="System.Reflection.TypeInfo" />
        </Parameters>
      </Method>
      <Method Name="GetTypeForObject" Return_type="System.Reflection.TypeInfo">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.ReflectionTypeLoadException">
    <Properties>
      <Property Name="Types" Type="System.Type[]" />
      <Property Name="LoaderExceptions" Type="System.Exception[]" />
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Types" Return_type="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="get_LoaderExceptions" Return_type="System.Exception[]">
        <Parameters />
      </Method>
      <Method Name="GetObjectData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.StrongNameKeyPair">
    <Properties>
      <Property Name="PublicKey" Type="System.Byte[]" />
    </Properties>
    <Methods>
      <Method Name="get_PublicKey" Return_type="System.Byte[]">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.TargetException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Reflection.TargetInvocationException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Reflection.TargetParameterCountException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Reflection.TypeDelegator">
    <Properties>
      <Property Name="GUID" Type="System.Guid" />
      <Property Name="MetadataToken" Type="System.Int32" />
      <Property Name="Module" Type="System.Reflection.Module" />
      <Property Name="Assembly" Type="System.Reflection.Assembly" />
      <Property Name="TypeHandle" Type="System.RuntimeTypeHandle" />
      <Property Name="Name" Type="System.String" />
      <Property Name="FullName" Type="System.String" />
      <Property Name="Namespace" Type="System.String" />
      <Property Name="AssemblyQualifiedName" Type="System.String" />
      <Property Name="BaseType" Type="System.Type" />
      <Property Name="IsConstructedGenericType" Type="System.Boolean" />
      <Property Name="UnderlyingSystemType" Type="System.Type" />
      <Property Name="GenericTypeParameters" Type="System.Type[]" />
      <Property Name="DeclaredConstructors" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.ConstructorInfo]" />
      <Property Name="DeclaredEvents" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.EventInfo]" />
      <Property Name="DeclaredFields" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.FieldInfo]" />
      <Property Name="DeclaredMembers" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.MemberInfo]" />
      <Property Name="DeclaredMethods" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.MethodInfo]" />
      <Property Name="DeclaredNestedTypes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.TypeInfo]" />
      <Property Name="DeclaredProperties" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.PropertyInfo]" />
      <Property Name="ImplementedInterfaces" Type="System.Collections.Generic.IEnumerable`1[System.Type]" />
      <Property Name="MemberType" Type="System.Reflection.MemberTypes" />
      <Property Name="DeclaringType" Type="System.Type" />
      <Property Name="DeclaringMethod" Type="System.Reflection.MethodBase" />
      <Property Name="ReflectedType" Type="System.Type" />
      <Property Name="StructLayoutAttribute" Type="System.Runtime.InteropServices.StructLayoutAttribute" />
      <Property Name="TypeInitializer" Type="System.Reflection.ConstructorInfo" />
      <Property Name="IsNested" Type="System.Boolean" />
      <Property Name="Attributes" Type="System.Reflection.TypeAttributes" />
      <Property Name="GenericParameterAttributes" Type="System.Reflection.GenericParameterAttributes" />
      <Property Name="IsVisible" Type="System.Boolean" />
      <Property Name="IsNotPublic" Type="System.Boolean" />
      <Property Name="IsPublic" Type="System.Boolean" />
      <Property Name="IsNestedPublic" Type="System.Boolean" />
      <Property Name="IsNestedPrivate" Type="System.Boolean" />
      <Property Name="IsNestedFamily" Type="System.Boolean" />
      <Property Name="IsNestedAssembly" Type="System.Boolean" />
      <Property Name="IsNestedFamANDAssem" Type="System.Boolean" />
      <Property Name="IsNestedFamORAssem" Type="System.Boolean" />
      <Property Name="IsAutoLayout" Type="System.Boolean" />
      <Property Name="IsLayoutSequential" Type="System.Boolean" />
      <Property Name="IsExplicitLayout" Type="System.Boolean" />
      <Property Name="IsClass" Type="System.Boolean" />
      <Property Name="IsInterface" Type="System.Boolean" />
      <Property Name="IsValueType" Type="System.Boolean" />
      <Property Name="IsAbstract" Type="System.Boolean" />
      <Property Name="IsSealed" Type="System.Boolean" />
      <Property Name="IsEnum" Type="System.Boolean" />
      <Property Name="IsSpecialName" Type="System.Boolean" />
      <Property Name="IsImport" Type="System.Boolean" />
      <Property Name="IsSerializable" Type="System.Boolean" />
      <Property Name="IsAnsiClass" Type="System.Boolean" />
      <Property Name="IsUnicodeClass" Type="System.Boolean" />
      <Property Name="IsAutoClass" Type="System.Boolean" />
      <Property Name="IsArray" Type="System.Boolean" />
      <Property Name="IsGenericType" Type="System.Boolean" />
      <Property Name="IsGenericTypeDefinition" Type="System.Boolean" />
      <Property Name="IsGenericParameter" Type="System.Boolean" />
      <Property Name="GenericParameterPosition" Type="System.Int32" />
      <Property Name="ContainsGenericParameters" Type="System.Boolean" />
      <Property Name="IsByRef" Type="System.Boolean" />
      <Property Name="IsPointer" Type="System.Boolean" />
      <Property Name="IsPrimitive" Type="System.Boolean" />
      <Property Name="IsCOMObject" Type="System.Boolean" />
      <Property Name="HasElementType" Type="System.Boolean" />
      <Property Name="IsContextful" Type="System.Boolean" />
      <Property Name="IsMarshalByRef" Type="System.Boolean" />
      <Property Name="GenericTypeArguments" Type="System.Type[]" />
      <Property Name="IsSecurityCritical" Type="System.Boolean" />
      <Property Name="IsSecuritySafeCritical" Type="System.Boolean" />
      <Property Name="IsSecurityTransparent" Type="System.Boolean" />
      <Property Name="CustomAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]" />
    </Properties>
    <Methods>
      <Method Name="IsAssignableFrom" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="typeInfo" Type="System.Reflection.TypeInfo" />
        </Parameters>
      </Method>
      <Method Name="get_GUID" Return_type="System.Guid">
        <Parameters />
      </Method>
      <Method Name="get_MetadataToken" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="InvokeMember" Return_type="System.Object">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="binder" Type="System.Reflection.Binder" />
          <Parameter Name="target" Type="System.Object" />
          <Parameter Name="args" Type="System.Object[]" />
          <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
          <Parameter Name="namedParameters" Type="System.String[]" />
        </Parameters>
      </Method>
      <Method Name="get_Module" Return_type="System.Reflection.Module">
        <Parameters />
      </Method>
      <Method Name="get_Assembly" Return_type="System.Reflection.Assembly">
        <Parameters />
      </Method>
      <Method Name="get_TypeHandle" Return_type="System.RuntimeTypeHandle">
        <Parameters />
      </Method>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_FullName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Namespace" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_AssemblyQualifiedName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_BaseType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="GetConstructors" Return_type="System.Reflection.ConstructorInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetMethods" Return_type="System.Reflection.MethodInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetField" Return_type="System.Reflection.FieldInfo">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetFields" Return_type="System.Reflection.FieldInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetInterface" Return_type="System.Type">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="ignoreCase" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetInterfaces" Return_type="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="GetEvent" Return_type="System.Reflection.EventInfo">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetEvents" Return_type="System.Reflection.EventInfo[]">
        <Parameters />
      </Method>
      <Method Name="GetProperties" Return_type="System.Reflection.PropertyInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetEvents" Return_type="System.Reflection.EventInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetNestedTypes" Return_type="System.Type[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetNestedType" Return_type="System.Type">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetMember" Return_type="System.Reflection.MemberInfo[]">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="type" Type="System.Reflection.MemberTypes" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetMembers" Return_type="System.Reflection.MemberInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="get_IsConstructedGenericType" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetElementType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_UnderlyingSystemType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Object[]">
        <Parameters>
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Object[]">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="IsDefined" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetInterfaceMap" Return_type="System.Reflection.InterfaceMapping">
        <Parameters>
          <Parameter Name="interfaceType" Type="System.Type" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.TypeFilter">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="m" Type="System.Type" />
          <Parameter Name="filterCriteria" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="m" Type="System.Type" />
          <Parameter Name="filterCriteria" Type="System.Object" />
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="object" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.TypeInfo">
    <Properties>
      <Property Name="GenericTypeParameters" Type="System.Type[]" />
      <Property Name="DeclaredConstructors" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.ConstructorInfo]" />
      <Property Name="DeclaredEvents" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.EventInfo]" />
      <Property Name="DeclaredFields" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.FieldInfo]" />
      <Property Name="DeclaredMembers" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.MemberInfo]" />
      <Property Name="DeclaredMethods" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.MethodInfo]" />
      <Property Name="DeclaredNestedTypes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.TypeInfo]" />
      <Property Name="DeclaredProperties" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.PropertyInfo]" />
      <Property Name="ImplementedInterfaces" Type="System.Collections.Generic.IEnumerable`1[System.Type]" />
      <Property Name="MemberType" Type="System.Reflection.MemberTypes" />
      <Property Name="DeclaringType" Type="System.Type" />
      <Property Name="DeclaringMethod" Type="System.Reflection.MethodBase" />
      <Property Name="ReflectedType" Type="System.Type" />
      <Property Name="StructLayoutAttribute" Type="System.Runtime.InteropServices.StructLayoutAttribute" />
      <Property Name="GUID" Type="System.Guid" />
      <Property Name="Module" Type="System.Reflection.Module" />
      <Property Name="Assembly" Type="System.Reflection.Assembly" />
      <Property Name="TypeHandle" Type="System.RuntimeTypeHandle" />
      <Property Name="FullName" Type="System.String" />
      <Property Name="Namespace" Type="System.String" />
      <Property Name="AssemblyQualifiedName" Type="System.String" />
      <Property Name="BaseType" Type="System.Type" />
      <Property Name="TypeInitializer" Type="System.Reflection.ConstructorInfo" />
      <Property Name="IsNested" Type="System.Boolean" />
      <Property Name="Attributes" Type="System.Reflection.TypeAttributes" />
      <Property Name="GenericParameterAttributes" Type="System.Reflection.GenericParameterAttributes" />
      <Property Name="IsVisible" Type="System.Boolean" />
      <Property Name="IsNotPublic" Type="System.Boolean" />
      <Property Name="IsPublic" Type="System.Boolean" />
      <Property Name="IsNestedPublic" Type="System.Boolean" />
      <Property Name="IsNestedPrivate" Type="System.Boolean" />
      <Property Name="IsNestedFamily" Type="System.Boolean" />
      <Property Name="IsNestedAssembly" Type="System.Boolean" />
      <Property Name="IsNestedFamANDAssem" Type="System.Boolean" />
      <Property Name="IsNestedFamORAssem" Type="System.Boolean" />
      <Property Name="IsAutoLayout" Type="System.Boolean" />
      <Property Name="IsLayoutSequential" Type="System.Boolean" />
      <Property Name="IsExplicitLayout" Type="System.Boolean" />
      <Property Name="IsClass" Type="System.Boolean" />
      <Property Name="IsInterface" Type="System.Boolean" />
      <Property Name="IsValueType" Type="System.Boolean" />
      <Property Name="IsAbstract" Type="System.Boolean" />
      <Property Name="IsSealed" Type="System.Boolean" />
      <Property Name="IsEnum" Type="System.Boolean" />
      <Property Name="IsSpecialName" Type="System.Boolean" />
      <Property Name="IsImport" Type="System.Boolean" />
      <Property Name="IsSerializable" Type="System.Boolean" />
      <Property Name="IsAnsiClass" Type="System.Boolean" />
      <Property Name="IsUnicodeClass" Type="System.Boolean" />
      <Property Name="IsAutoClass" Type="System.Boolean" />
      <Property Name="IsArray" Type="System.Boolean" />
      <Property Name="IsGenericType" Type="System.Boolean" />
      <Property Name="IsGenericTypeDefinition" Type="System.Boolean" />
      <Property Name="IsConstructedGenericType" Type="System.Boolean" />
      <Property Name="IsGenericParameter" Type="System.Boolean" />
      <Property Name="GenericParameterPosition" Type="System.Int32" />
      <Property Name="ContainsGenericParameters" Type="System.Boolean" />
      <Property Name="IsByRef" Type="System.Boolean" />
      <Property Name="IsPointer" Type="System.Boolean" />
      <Property Name="IsPrimitive" Type="System.Boolean" />
      <Property Name="IsCOMObject" Type="System.Boolean" />
      <Property Name="HasElementType" Type="System.Boolean" />
      <Property Name="IsContextful" Type="System.Boolean" />
      <Property Name="IsMarshalByRef" Type="System.Boolean" />
      <Property Name="GenericTypeArguments" Type="System.Type[]" />
      <Property Name="IsSecurityCritical" Type="System.Boolean" />
      <Property Name="IsSecuritySafeCritical" Type="System.Boolean" />
      <Property Name="IsSecurityTransparent" Type="System.Boolean" />
      <Property Name="UnderlyingSystemType" Type="System.Type" />
      <Property Name="Name" Type="System.String" />
      <Property Name="CustomAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]" />
      <Property Name="MetadataToken" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="AsType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_GenericTypeParameters" Return_type="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="IsAssignableFrom" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="typeInfo" Type="System.Reflection.TypeInfo" />
        </Parameters>
      </Method>
      <Method Name="GetDeclaredEvent" Return_type="System.Reflection.EventInfo">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetDeclaredField" Return_type="System.Reflection.FieldInfo">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetDeclaredMethod" Return_type="System.Reflection.MethodInfo">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetDeclaredMethods" Return_type="System.Collections.Generic.IEnumerable`1[System.Reflection.MethodInfo]">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetDeclaredNestedType" Return_type="System.Reflection.TypeInfo">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetDeclaredProperty" Return_type="System.Reflection.PropertyInfo">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_DeclaredConstructors" Return_type="System.Collections.Generic.IEnumerable`1[System.Reflection.ConstructorInfo]">
        <Parameters />
      </Method>
      <Method Name="get_DeclaredEvents" Return_type="System.Collections.Generic.IEnumerable`1[System.Reflection.EventInfo]">
        <Parameters />
      </Method>
      <Method Name="get_DeclaredFields" Return_type="System.Collections.Generic.IEnumerable`1[System.Reflection.FieldInfo]">
        <Parameters />
      </Method>
      <Method Name="get_DeclaredMembers" Return_type="System.Collections.Generic.IEnumerable`1[System.Reflection.MemberInfo]">
        <Parameters />
      </Method>
      <Method Name="get_DeclaredMethods" Return_type="System.Collections.Generic.IEnumerable`1[System.Reflection.MethodInfo]">
        <Parameters />
      </Method>
      <Method Name="get_DeclaredNestedTypes" Return_type="System.Collections.Generic.IEnumerable`1[System.Reflection.TypeInfo]">
        <Parameters />
      </Method>
      <Method Name="get_DeclaredProperties" Return_type="System.Collections.Generic.IEnumerable`1[System.Reflection.PropertyInfo]">
        <Parameters />
      </Method>
      <Method Name="get_ImplementedInterfaces" Return_type="System.Collections.Generic.IEnumerable`1[System.Type]">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.Emit.AssemblyBuilder">
    <Properties>
      <Property Name="Location" Type="System.String" />
      <Property Name="ImageRuntimeVersion" Type="System.String" />
      <Property Name="CodeBase" Type="System.String" />
      <Property Name="EntryPoint" Type="System.Reflection.MethodInfo" />
      <Property Name="FullName" Type="System.String" />
      <Property Name="Evidence" Type="System.Security.Policy.Evidence" />
      <Property Name="PermissionSet" Type="System.Security.PermissionSet" />
      <Property Name="SecurityRuleSet" Type="System.Security.SecurityRuleSet" />
      <Property Name="ManifestModule" Type="System.Reflection.Module" />
      <Property Name="ReflectionOnly" Type="System.Boolean" />
      <Property Name="GlobalAssemblyCache" Type="System.Boolean" />
      <Property Name="HostContext" Type="System.Int64" />
      <Property Name="IsDynamic" Type="System.Boolean" />
      <Property Name="EscapedCodeBase" Type="System.String" />
      <Property Name="ExportedTypes" Type="System.Collections.Generic.IEnumerable`1[System.Type]" />
      <Property Name="DefinedTypes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.TypeInfo]" />
      <Property Name="IsFullyTrusted" Type="System.Boolean" />
      <Property Name="CustomAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]" />
      <Property Name="Modules" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.Module]" />
    </Properties>
    <Methods>
      <Method Name="DefineDynamicAssembly" Return_type="System.Reflection.Emit.AssemblyBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.AssemblyName" />
          <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" />
        </Parameters>
      </Method>
      <Method Name="DefineDynamicAssembly" Return_type="System.Reflection.Emit.AssemblyBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.Reflection.AssemblyName" />
          <Parameter Name="access" Type="System.Reflection.Emit.AssemblyBuilderAccess" />
          <Parameter Name="assemblyAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.Emit.CustomAttributeBuilder]" />
        </Parameters>
      </Method>
      <Method Name="DefineDynamicModule" Return_type="System.Reflection.Emit.ModuleBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="DefineDynamicModule" Return_type="System.Reflection.Emit.ModuleBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="emitSymbolInfo" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="DefineDynamicModule" Return_type="System.Reflection.Emit.ModuleBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="fileName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="DefineDynamicModule" Return_type="System.Reflection.Emit.ModuleBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="fileName" Type="System.String" />
          <Parameter Name="emitSymbolInfo" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="DefineResource" Return_type="System.Resources.IResourceWriter">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="description" Type="System.String" />
          <Parameter Name="fileName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="DefineResource" Return_type="System.Resources.IResourceWriter">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="description" Type="System.String" />
          <Parameter Name="fileName" Type="System.String" />
          <Parameter Name="attribute" Type="System.Reflection.ResourceAttributes" />
        </Parameters>
      </Method>
      <Method Name="AddResourceFile" Return_type="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="fileName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="AddResourceFile" Return_type="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="fileName" Type="System.String" />
          <Parameter Name="attribute" Type="System.Reflection.ResourceAttributes" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Object[]">
        <Parameters>
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Object[]">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="IsDefined" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributesData" Return_type="System.Collections.Generic.IList`1[System.Reflection.CustomAttributeData]">
        <Parameters />
      </Method>
      <Method Name="GetManifestResourceNames" Return_type="System.String[]">
        <Parameters />
      </Method>
      <Method Name="GetFile" Return_type="System.IO.FileStream">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetFiles" Return_type="System.IO.FileStream[]">
        <Parameters>
          <Parameter Name="getResourceModules" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetManifestResourceStream" Return_type="System.IO.Stream">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetManifestResourceStream" Return_type="System.IO.Stream">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetManifestResourceInfo" Return_type="System.Reflection.ManifestResourceInfo">
        <Parameters>
          <Parameter Name="resourceName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_Location" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ImageRuntimeVersion" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_CodeBase" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_EntryPoint" Return_type="System.Reflection.MethodInfo">
        <Parameters />
      </Method>
      <Method Name="GetExportedTypes" Return_type="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="GetName" Return_type="System.Reflection.AssemblyName">
        <Parameters>
          <Parameter Name="copiedName" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_FullName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetType" Return_type="System.Type">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="throwOnError" Type="System.Boolean" />
          <Parameter Name="ignoreCase" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_Evidence" Return_type="System.Security.Policy.Evidence">
        <Parameters />
      </Method>
      <Method Name="get_PermissionSet" Return_type="System.Security.PermissionSet">
        <Parameters />
      </Method>
      <Method Name="get_SecurityRuleSet" Return_type="System.Security.SecurityRuleSet">
        <Parameters />
      </Method>
      <Method Name="get_ManifestModule" Return_type="System.Reflection.Module">
        <Parameters />
      </Method>
      <Method Name="get_ReflectionOnly" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetModule" Return_type="System.Reflection.Module">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetReferencedAssemblies" Return_type="System.Reflection.AssemblyName[]">
        <Parameters />
      </Method>
      <Method Name="get_GlobalAssemblyCache" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_HostContext" Return_type="System.Int64">
        <Parameters />
      </Method>
      <Method Name="GetModules" Return_type="System.Reflection.Module[]">
        <Parameters>
          <Parameter Name="getResourceModules" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetLoadedModules" Return_type="System.Reflection.Module[]">
        <Parameters>
          <Parameter Name="getResourceModules" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetSatelliteAssembly" Return_type="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        </Parameters>
      </Method>
      <Method Name="GetSatelliteAssembly" Return_type="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
          <Parameter Name="version" Type="System.Version" />
        </Parameters>
      </Method>
      <Method Name="get_IsDynamic" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="DefineVersionInfoResource" Return_type="System.Void">
        <Parameters>
          <Parameter Name="product" Type="System.String" />
          <Parameter Name="productVersion" Type="System.String" />
          <Parameter Name="company" Type="System.String" />
          <Parameter Name="copyright" Type="System.String" />
          <Parameter Name="trademark" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="DefineVersionInfoResource" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="DefineUnmanagedResource" Return_type="System.Void">
        <Parameters>
          <Parameter Name="resource" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="DefineUnmanagedResource" Return_type="System.Void">
        <Parameters>
          <Parameter Name="resourceFileName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetDynamicModule" Return_type="System.Reflection.Emit.ModuleBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="SetEntryPoint" Return_type="System.Void">
        <Parameters>
          <Parameter Name="entryMethod" Type="System.Reflection.MethodInfo" />
        </Parameters>
      </Method>
      <Method Name="SetEntryPoint" Return_type="System.Void">
        <Parameters>
          <Parameter Name="entryMethod" Type="System.Reflection.MethodInfo" />
          <Parameter Name="fileKind" Type="System.Reflection.Emit.PEFileKinds" />
        </Parameters>
      </Method>
      <Method Name="SetCustomAttribute" Return_type="System.Void">
        <Parameters>
          <Parameter Name="con" Type="System.Reflection.ConstructorInfo" />
          <Parameter Name="binaryAttribute" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="SetCustomAttribute" Return_type="System.Void">
        <Parameters>
          <Parameter Name="customBuilder" Type="System.Reflection.Emit.CustomAttributeBuilder" />
        </Parameters>
      </Method>
      <Method Name="Save" Return_type="System.Void">
        <Parameters>
          <Parameter Name="assemblyFileName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Save" Return_type="System.Void">
        <Parameters>
          <Parameter Name="assemblyFileName" Type="System.String" />
          <Parameter Name="portableExecutableKind" Type="System.Reflection.PortableExecutableKinds" />
          <Parameter Name="imageFileMachine" Type="System.Reflection.ImageFileMachine" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.Emit.ConstructorBuilder">
    <Properties>
      <Property Name="Module" Type="System.Reflection.Module" />
      <Property Name="ReflectedType" Type="System.Type" />
      <Property Name="DeclaringType" Type="System.Type" />
      <Property Name="Name" Type="System.String" />
      <Property Name="Attributes" Type="System.Reflection.MethodAttributes" />
      <Property Name="MethodHandle" Type="System.RuntimeMethodHandle" />
      <Property Name="CallingConvention" Type="System.Reflection.CallingConventions" />
      <Property Name="ReturnType" Type="System.Type" />
      <Property Name="Signature" Type="System.String" />
      <Property Name="InitLocals" Type="System.Boolean" />
      <Property Name="MemberType" Type="System.Reflection.MemberTypes" />
      <Property Name="MethodImplementationFlags" Type="System.Reflection.MethodImplAttributes" />
      <Property Name="IsGenericMethodDefinition" Type="System.Boolean" />
      <Property Name="ContainsGenericParameters" Type="System.Boolean" />
      <Property Name="IsGenericMethod" Type="System.Boolean" />
      <Property Name="IsSecurityCritical" Type="System.Boolean" />
      <Property Name="IsSecuritySafeCritical" Type="System.Boolean" />
      <Property Name="IsSecurityTransparent" Type="System.Boolean" />
      <Property Name="IsPublic" Type="System.Boolean" />
      <Property Name="IsPrivate" Type="System.Boolean" />
      <Property Name="IsFamily" Type="System.Boolean" />
      <Property Name="IsAssembly" Type="System.Boolean" />
      <Property Name="IsFamilyAndAssembly" Type="System.Boolean" />
      <Property Name="IsFamilyOrAssembly" Type="System.Boolean" />
      <Property Name="IsStatic" Type="System.Boolean" />
      <Property Name="IsFinal" Type="System.Boolean" />
      <Property Name="IsVirtual" Type="System.Boolean" />
      <Property Name="IsHideBySig" Type="System.Boolean" />
      <Property Name="IsAbstract" Type="System.Boolean" />
      <Property Name="IsSpecialName" Type="System.Boolean" />
      <Property Name="IsConstructor" Type="System.Boolean" />
      <Property Name="CustomAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]" />
      <Property Name="MetadataToken" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Module" Return_type="System.Reflection.Module">
        <Parameters />
      </Method>
      <Method Name="get_ReflectedType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_DeclaringType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Invoke" Return_type="System.Object">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
          <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="binder" Type="System.Reflection.Binder" />
          <Parameter Name="parameters" Type="System.Object[]" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        </Parameters>
      </Method>
      <Method Name="GetParameters" Return_type="System.Reflection.ParameterInfo[]">
        <Parameters />
      </Method>
      <Method Name="get_Attributes" Return_type="System.Reflection.MethodAttributes">
        <Parameters />
      </Method>
      <Method Name="GetMethodImplementationFlags" Return_type="System.Reflection.MethodImplAttributes">
        <Parameters />
      </Method>
      <Method Name="get_MethodHandle" Return_type="System.RuntimeMethodHandle">
        <Parameters />
      </Method>
      <Method Name="Invoke" Return_type="System.Object">
        <Parameters>
          <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="binder" Type="System.Reflection.Binder" />
          <Parameter Name="parameters" Type="System.Object[]" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Object[]">
        <Parameters>
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Object[]">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="IsDefined" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetToken" Return_type="System.Reflection.Emit.MethodToken">
        <Parameters />
      </Method>
      <Method Name="DefineParameter" Return_type="System.Reflection.Emit.ParameterBuilder">
        <Parameters>
          <Parameter Name="iSequence" Type="System.Int32" />
          <Parameter Name="attributes" Type="System.Reflection.ParameterAttributes" />
          <Parameter Name="strParamName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="SetSymCustomAttribute" Return_type="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="data" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="GetILGenerator" Return_type="System.Reflection.Emit.ILGenerator">
        <Parameters />
      </Method>
      <Method Name="GetILGenerator" Return_type="System.Reflection.Emit.ILGenerator">
        <Parameters>
          <Parameter Name="streamSize" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="SetMethodBody" Return_type="System.Void">
        <Parameters>
          <Parameter Name="il" Type="System.Byte[]" />
          <Parameter Name="maxStack" Type="System.Int32" />
          <Parameter Name="localSignature" Type="System.Byte[]" />
          <Parameter Name="exceptionHandlers" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.Emit.ExceptionHandler]" />
          <Parameter Name="tokenFixups" Type="System.Collections.Generic.IEnumerable`1[System.Int32]" />
        </Parameters>
      </Method>
      <Method Name="AddDeclarativeSecurity" Return_type="System.Void">
        <Parameters>
          <Parameter Name="action" Type="System.Security.Permissions.SecurityAction" />
          <Parameter Name="pset" Type="System.Security.PermissionSet" />
        </Parameters>
      </Method>
      <Method Name="get_CallingConvention" Return_type="System.Reflection.CallingConventions">
        <Parameters />
      </Method>
      <Method Name="GetModule" Return_type="System.Reflection.Module">
        <Parameters />
      </Method>
      <Method Name="get_ReturnType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_Signature" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="SetCustomAttribute" Return_type="System.Void">
        <Parameters>
          <Parameter Name="con" Type="System.Reflection.ConstructorInfo" />
          <Parameter Name="binaryAttribute" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="SetCustomAttribute" Return_type="System.Void">
        <Parameters>
          <Parameter Name="customBuilder" Type="System.Reflection.Emit.CustomAttributeBuilder" />
        </Parameters>
      </Method>
      <Method Name="SetImplementationFlags" Return_type="System.Void">
        <Parameters>
          <Parameter Name="attributes" Type="System.Reflection.MethodImplAttributes" />
        </Parameters>
      </Method>
      <Method Name="get_InitLocals" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_InitLocals" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.Emit.DynamicILInfo">
    <Properties>
      <Property Name="DynamicMethod" Type="System.Reflection.Emit.DynamicMethod" />
    </Properties>
    <Methods>
      <Method Name="get_DynamicMethod" Return_type="System.Reflection.Emit.DynamicMethod">
        <Parameters />
      </Method>
      <Method Name="SetCode" Return_type="System.Void">
        <Parameters>
          <Parameter Name="code" Type="System.Byte[]" />
          <Parameter Name="maxStackSize" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="SetCode" Return_type="System.Void">
        <Parameters>
          <Parameter Name="code" Type="System.Byte*" />
          <Parameter Name="codeSize" Type="System.Int32" />
          <Parameter Name="maxStackSize" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="SetExceptions" Return_type="System.Void">
        <Parameters>
          <Parameter Name="exceptions" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="SetExceptions" Return_type="System.Void">
        <Parameters>
          <Parameter Name="exceptions" Type="System.Byte*" />
          <Parameter Name="exceptionsSize" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="SetLocalSignature" Return_type="System.Void">
        <Parameters>
          <Parameter Name="localSignature" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="SetLocalSignature" Return_type="System.Void">
        <Parameters>
          <Parameter Name="localSignature" Type="System.Byte*" />
          <Parameter Name="signatureSize" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetTokenFor" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="method" Type="System.RuntimeMethodHandle" />
        </Parameters>
      </Method>
      <Method Name="GetTokenFor" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="method" Type="System.Reflection.Emit.DynamicMethod" />
        </Parameters>
      </Method>
      <Method Name="GetTokenFor" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="method" Type="System.RuntimeMethodHandle" />
          <Parameter Name="contextType" Type="System.RuntimeTypeHandle" />
        </Parameters>
      </Method>
      <Method Name="GetTokenFor" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="field" Type="System.RuntimeFieldHandle" />
        </Parameters>
      </Method>
      <Method Name="GetTokenFor" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="field" Type="System.RuntimeFieldHandle" />
          <Parameter Name="contextType" Type="System.RuntimeTypeHandle" />
        </Parameters>
      </Method>
      <Method Name="GetTokenFor" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="type" Type="System.RuntimeTypeHandle" />
        </Parameters>
      </Method>
      <Method Name="GetTokenFor" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="literal" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetTokenFor" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="signature" Type="System.Byte[]" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.Emit.DynamicMethod">
    <Properties>
      <Property Name="Name" Type="System.String" />
      <Property Name="DeclaringType" Type="System.Type" />
      <Property Name="ReflectedType" Type="System.Type" />
      <Property Name="Module" Type="System.Reflection.Module" />
      <Property Name="MethodHandle" Type="System.RuntimeMethodHandle" />
      <Property Name="Attributes" Type="System.Reflection.MethodAttributes" />
      <Property Name="CallingConvention" Type="System.Reflection.CallingConventions" />
      <Property Name="IsSecurityCritical" Type="System.Boolean" />
      <Property Name="IsSecuritySafeCritical" Type="System.Boolean" />
      <Property Name="IsSecurityTransparent" Type="System.Boolean" />
      <Property Name="ReturnType" Type="System.Type" />
      <Property Name="ReturnParameter" Type="System.Reflection.ParameterInfo" />
      <Property Name="ReturnTypeCustomAttributes" Type="System.Reflection.ICustomAttributeProvider" />
      <Property Name="InitLocals" Type="System.Boolean" />
      <Property Name="MemberType" Type="System.Reflection.MemberTypes" />
      <Property Name="MethodImplementationFlags" Type="System.Reflection.MethodImplAttributes" />
      <Property Name="IsGenericMethodDefinition" Type="System.Boolean" />
      <Property Name="ContainsGenericParameters" Type="System.Boolean" />
      <Property Name="IsGenericMethod" Type="System.Boolean" />
      <Property Name="IsPublic" Type="System.Boolean" />
      <Property Name="IsPrivate" Type="System.Boolean" />
      <Property Name="IsFamily" Type="System.Boolean" />
      <Property Name="IsAssembly" Type="System.Boolean" />
      <Property Name="IsFamilyAndAssembly" Type="System.Boolean" />
      <Property Name="IsFamilyOrAssembly" Type="System.Boolean" />
      <Property Name="IsStatic" Type="System.Boolean" />
      <Property Name="IsFinal" Type="System.Boolean" />
      <Property Name="IsVirtual" Type="System.Boolean" />
      <Property Name="IsHideBySig" Type="System.Boolean" />
      <Property Name="IsAbstract" Type="System.Boolean" />
      <Property Name="IsSpecialName" Type="System.Boolean" />
      <Property Name="IsConstructor" Type="System.Boolean" />
      <Property Name="CustomAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]" />
      <Property Name="MetadataToken" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="CreateDelegate" Return_type="System.Delegate">
        <Parameters>
          <Parameter Name="delegateType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="CreateDelegate" Return_type="System.Delegate">
        <Parameters>
          <Parameter Name="delegateType" Type="System.Type" />
          <Parameter Name="target" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_DeclaringType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_ReflectedType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_Module" Return_type="System.Reflection.Module">
        <Parameters />
      </Method>
      <Method Name="get_MethodHandle" Return_type="System.RuntimeMethodHandle">
        <Parameters />
      </Method>
      <Method Name="get_Attributes" Return_type="System.Reflection.MethodAttributes">
        <Parameters />
      </Method>
      <Method Name="get_CallingConvention" Return_type="System.Reflection.CallingConventions">
        <Parameters />
      </Method>
      <Method Name="GetBaseDefinition" Return_type="System.Reflection.MethodInfo">
        <Parameters />
      </Method>
      <Method Name="GetParameters" Return_type="System.Reflection.ParameterInfo[]">
        <Parameters />
      </Method>
      <Method Name="GetMethodImplementationFlags" Return_type="System.Reflection.MethodImplAttributes">
        <Parameters />
      </Method>
      <Method Name="get_IsSecurityCritical" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSecuritySafeCritical" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSecurityTransparent" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Invoke" Return_type="System.Object">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
          <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="binder" Type="System.Reflection.Binder" />
          <Parameter Name="parameters" Type="System.Object[]" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Object[]">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Object[]">
        <Parameters>
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="IsDefined" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_ReturnType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_ReturnParameter" Return_type="System.Reflection.ParameterInfo">
        <Parameters />
      </Method>
      <Method Name="get_ReturnTypeCustomAttributes" Return_type="System.Reflection.ICustomAttributeProvider">
        <Parameters />
      </Method>
      <Method Name="DefineParameter" Return_type="System.Reflection.Emit.ParameterBuilder">
        <Parameters>
          <Parameter Name="position" Type="System.Int32" />
          <Parameter Name="attributes" Type="System.Reflection.ParameterAttributes" />
          <Parameter Name="parameterName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetDynamicILInfo" Return_type="System.Reflection.Emit.DynamicILInfo">
        <Parameters />
      </Method>
      <Method Name="GetILGenerator" Return_type="System.Reflection.Emit.ILGenerator">
        <Parameters />
      </Method>
      <Method Name="GetILGenerator" Return_type="System.Reflection.Emit.ILGenerator">
        <Parameters>
          <Parameter Name="streamSize" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_InitLocals" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_InitLocals" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.Emit.EventBuilder">
    <Properties />
    <Methods>
      <Method Name="GetEventToken" Return_type="System.Reflection.Emit.EventToken">
        <Parameters />
      </Method>
      <Method Name="SetAddOnMethod" Return_type="System.Void">
        <Parameters>
          <Parameter Name="mdBuilder" Type="System.Reflection.Emit.MethodBuilder" />
        </Parameters>
      </Method>
      <Method Name="SetRemoveOnMethod" Return_type="System.Void">
        <Parameters>
          <Parameter Name="mdBuilder" Type="System.Reflection.Emit.MethodBuilder" />
        </Parameters>
      </Method>
      <Method Name="SetRaiseMethod" Return_type="System.Void">
        <Parameters>
          <Parameter Name="mdBuilder" Type="System.Reflection.Emit.MethodBuilder" />
        </Parameters>
      </Method>
      <Method Name="AddOtherMethod" Return_type="System.Void">
        <Parameters>
          <Parameter Name="mdBuilder" Type="System.Reflection.Emit.MethodBuilder" />
        </Parameters>
      </Method>
      <Method Name="SetCustomAttribute" Return_type="System.Void">
        <Parameters>
          <Parameter Name="con" Type="System.Reflection.ConstructorInfo" />
          <Parameter Name="binaryAttribute" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="SetCustomAttribute" Return_type="System.Void">
        <Parameters>
          <Parameter Name="customBuilder" Type="System.Reflection.Emit.CustomAttributeBuilder" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.Emit.FieldBuilder">
    <Properties>
      <Property Name="Module" Type="System.Reflection.Module" />
      <Property Name="Name" Type="System.String" />
      <Property Name="DeclaringType" Type="System.Type" />
      <Property Name="ReflectedType" Type="System.Type" />
      <Property Name="FieldType" Type="System.Type" />
      <Property Name="FieldHandle" Type="System.RuntimeFieldHandle" />
      <Property Name="Attributes" Type="System.Reflection.FieldAttributes" />
      <Property Name="MemberType" Type="System.Reflection.MemberTypes" />
      <Property Name="IsPublic" Type="System.Boolean" />
      <Property Name="IsPrivate" Type="System.Boolean" />
      <Property Name="IsFamily" Type="System.Boolean" />
      <Property Name="IsAssembly" Type="System.Boolean" />
      <Property Name="IsFamilyAndAssembly" Type="System.Boolean" />
      <Property Name="IsFamilyOrAssembly" Type="System.Boolean" />
      <Property Name="IsStatic" Type="System.Boolean" />
      <Property Name="IsInitOnly" Type="System.Boolean" />
      <Property Name="IsLiteral" Type="System.Boolean" />
      <Property Name="IsNotSerialized" Type="System.Boolean" />
      <Property Name="IsSpecialName" Type="System.Boolean" />
      <Property Name="IsPinvokeImpl" Type="System.Boolean" />
      <Property Name="IsSecurityCritical" Type="System.Boolean" />
      <Property Name="IsSecuritySafeCritical" Type="System.Boolean" />
      <Property Name="IsSecurityTransparent" Type="System.Boolean" />
      <Property Name="CustomAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]" />
      <Property Name="MetadataToken" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_Module" Return_type="System.Reflection.Module">
        <Parameters />
      </Method>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_DeclaringType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_ReflectedType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_FieldType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="GetValue" Return_type="System.Object">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="SetValue" Return_type="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
          <Parameter Name="val" Type="System.Object" />
          <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="binder" Type="System.Reflection.Binder" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        </Parameters>
      </Method>
      <Method Name="get_FieldHandle" Return_type="System.RuntimeFieldHandle">
        <Parameters />
      </Method>
      <Method Name="get_Attributes" Return_type="System.Reflection.FieldAttributes">
        <Parameters />
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Object[]">
        <Parameters>
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Object[]">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="IsDefined" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetToken" Return_type="System.Reflection.Emit.FieldToken">
        <Parameters />
      </Method>
      <Method Name="SetOffset" Return_type="System.Void">
        <Parameters>
          <Parameter Name="iOffset" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="SetMarshal" Return_type="System.Void">
        <Parameters>
          <Parameter Name="unmanagedMarshal" Type="System.Reflection.Emit.UnmanagedMarshal" />
        </Parameters>
      </Method>
      <Method Name="SetConstant" Return_type="System.Void">
        <Parameters>
          <Parameter Name="defaultValue" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="SetCustomAttribute" Return_type="System.Void">
        <Parameters>
          <Parameter Name="con" Type="System.Reflection.ConstructorInfo" />
          <Parameter Name="binaryAttribute" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="SetCustomAttribute" Return_type="System.Void">
        <Parameters>
          <Parameter Name="customBuilder" Type="System.Reflection.Emit.CustomAttributeBuilder" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.Emit.ILGenerator">
    <Properties>
      <Property Name="ILOffset" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="Emit" Return_type="System.Void">
        <Parameters>
          <Parameter Name="opcode" Type="System.Reflection.Emit.OpCode" />
        </Parameters>
      </Method>
      <Method Name="Emit" Return_type="System.Void">
        <Parameters>
          <Parameter Name="opcode" Type="System.Reflection.Emit.OpCode" />
          <Parameter Name="arg" Type="System.Byte" />
        </Parameters>
      </Method>
      <Method Name="Emit" Return_type="System.Void">
        <Parameters>
          <Parameter Name="opcode" Type="System.Reflection.Emit.OpCode" />
          <Parameter Name="arg" Type="System.SByte" />
        </Parameters>
      </Method>
      <Method Name="Emit" Return_type="System.Void">
        <Parameters>
          <Parameter Name="opcode" Type="System.Reflection.Emit.OpCode" />
          <Parameter Name="arg" Type="System.Int16" />
        </Parameters>
      </Method>
      <Method Name="Emit" Return_type="System.Void">
        <Parameters>
          <Parameter Name="opcode" Type="System.Reflection.Emit.OpCode" />
          <Parameter Name="arg" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Emit" Return_type="System.Void">
        <Parameters>
          <Parameter Name="opcode" Type="System.Reflection.Emit.OpCode" />
          <Parameter Name="meth" Type="System.Reflection.MethodInfo" />
        </Parameters>
      </Method>
      <Method Name="EmitCalli" Return_type="System.Void">
        <Parameters>
          <Parameter Name="opcode" Type="System.Reflection.Emit.OpCode" />
          <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
          <Parameter Name="returnType" Type="System.Type" />
          <Parameter Name="parameterTypes" Type="System.Type[]" />
          <Parameter Name="optionalParameterTypes" Type="System.Type[]" />
        </Parameters>
      </Method>
      <Method Name="EmitCalli" Return_type="System.Void">
        <Parameters>
          <Parameter Name="opcode" Type="System.Reflection.Emit.OpCode" />
          <Parameter Name="unmanagedCallConv" Type="System.Runtime.InteropServices.CallingConvention" />
          <Parameter Name="returnType" Type="System.Type" />
          <Parameter Name="parameterTypes" Type="System.Type[]" />
        </Parameters>
      </Method>
      <Method Name="EmitCall" Return_type="System.Void">
        <Parameters>
          <Parameter Name="opcode" Type="System.Reflection.Emit.OpCode" />
          <Parameter Name="methodInfo" Type="System.Reflection.MethodInfo" />
          <Parameter Name="optionalParameterTypes" Type="System.Type[]" />
        </Parameters>
      </Method>
      <Method Name="Emit" Return_type="System.Void">
        <Parameters>
          <Parameter Name="opcode" Type="System.Reflection.Emit.OpCode" />
          <Parameter Name="signature" Type="System.Reflection.Emit.SignatureHelper" />
        </Parameters>
      </Method>
      <Method Name="Emit" Return_type="System.Void">
        <Parameters>
          <Parameter Name="opcode" Type="System.Reflection.Emit.OpCode" />
          <Parameter Name="con" Type="System.Reflection.ConstructorInfo" />
        </Parameters>
      </Method>
      <Method Name="Emit" Return_type="System.Void">
        <Parameters>
          <Parameter Name="opcode" Type="System.Reflection.Emit.OpCode" />
          <Parameter Name="cls" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="Emit" Return_type="System.Void">
        <Parameters>
          <Parameter Name="opcode" Type="System.Reflection.Emit.OpCode" />
          <Parameter Name="arg" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="Emit" Return_type="System.Void">
        <Parameters>
          <Parameter Name="opcode" Type="System.Reflection.Emit.OpCode" />
          <Parameter Name="arg" Type="System.Single" />
        </Parameters>
      </Method>
      <Method Name="Emit" Return_type="System.Void">
        <Parameters>
          <Parameter Name="opcode" Type="System.Reflection.Emit.OpCode" />
          <Parameter Name="arg" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="Emit" Return_type="System.Void">
        <Parameters>
          <Parameter Name="opcode" Type="System.Reflection.Emit.OpCode" />
          <Parameter Name="label" Type="System.Reflection.Emit.Label" />
        </Parameters>
      </Method>
      <Method Name="Emit" Return_type="System.Void">
        <Parameters>
          <Parameter Name="opcode" Type="System.Reflection.Emit.OpCode" />
          <Parameter Name="labels" Type="System.Reflection.Emit.Label[]" />
        </Parameters>
      </Method>
      <Method Name="Emit" Return_type="System.Void">
        <Parameters>
          <Parameter Name="opcode" Type="System.Reflection.Emit.OpCode" />
          <Parameter Name="field" Type="System.Reflection.FieldInfo" />
        </Parameters>
      </Method>
      <Method Name="Emit" Return_type="System.Void">
        <Parameters>
          <Parameter Name="opcode" Type="System.Reflection.Emit.OpCode" />
          <Parameter Name="str" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Emit" Return_type="System.Void">
        <Parameters>
          <Parameter Name="opcode" Type="System.Reflection.Emit.OpCode" />
          <Parameter Name="local" Type="System.Reflection.Emit.LocalBuilder" />
        </Parameters>
      </Method>
      <Method Name="BeginExceptionBlock" Return_type="System.Reflection.Emit.Label">
        <Parameters />
      </Method>
      <Method Name="EndExceptionBlock" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="BeginExceptFilterBlock" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="BeginCatchBlock" Return_type="System.Void">
        <Parameters>
          <Parameter Name="exceptionType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="BeginFaultBlock" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="BeginFinallyBlock" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="DefineLabel" Return_type="System.Reflection.Emit.Label">
        <Parameters />
      </Method>
      <Method Name="MarkLabel" Return_type="System.Void">
        <Parameters>
          <Parameter Name="loc" Type="System.Reflection.Emit.Label" />
        </Parameters>
      </Method>
      <Method Name="ThrowException" Return_type="System.Void">
        <Parameters>
          <Parameter Name="excType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="EmitWriteLine" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="EmitWriteLine" Return_type="System.Void">
        <Parameters>
          <Parameter Name="localBuilder" Type="System.Reflection.Emit.LocalBuilder" />
        </Parameters>
      </Method>
      <Method Name="EmitWriteLine" Return_type="System.Void">
        <Parameters>
          <Parameter Name="fld" Type="System.Reflection.FieldInfo" />
        </Parameters>
      </Method>
      <Method Name="DeclareLocal" Return_type="System.Reflection.Emit.LocalBuilder">
        <Parameters>
          <Parameter Name="localType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="DeclareLocal" Return_type="System.Reflection.Emit.LocalBuilder">
        <Parameters>
          <Parameter Name="localType" Type="System.Type" />
          <Parameter Name="pinned" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="UsingNamespace" Return_type="System.Void">
        <Parameters>
          <Parameter Name="usingNamespace" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="MarkSequencePoint" Return_type="System.Void">
        <Parameters>
          <Parameter Name="document" Type="System.Diagnostics.SymbolStore.ISymbolDocumentWriter" />
          <Parameter Name="startLine" Type="System.Int32" />
          <Parameter Name="startColumn" Type="System.Int32" />
          <Parameter Name="endLine" Type="System.Int32" />
          <Parameter Name="endColumn" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="BeginScope" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="EndScope" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_ILOffset" Return_type="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.Emit.LocalBuilder">
    <Properties>
      <Property Name="IsPinned" Type="System.Boolean" />
      <Property Name="LocalType" Type="System.Type" />
      <Property Name="LocalIndex" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_IsPinned" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_LocalType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_LocalIndex" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="SetLocalSymInfo" Return_type="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="SetLocalSymInfo" Return_type="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="startOffset" Type="System.Int32" />
          <Parameter Name="endOffset" Type="System.Int32" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.Emit.MethodBuilder">
    <Properties>
      <Property Name="Name" Type="System.String" />
      <Property Name="Module" Type="System.Reflection.Module" />
      <Property Name="DeclaringType" Type="System.Type" />
      <Property Name="ReturnTypeCustomAttributes" Type="System.Reflection.ICustomAttributeProvider" />
      <Property Name="ReflectedType" Type="System.Type" />
      <Property Name="Attributes" Type="System.Reflection.MethodAttributes" />
      <Property Name="CallingConvention" Type="System.Reflection.CallingConventions" />
      <Property Name="MethodHandle" Type="System.RuntimeMethodHandle" />
      <Property Name="IsSecurityCritical" Type="System.Boolean" />
      <Property Name="IsSecuritySafeCritical" Type="System.Boolean" />
      <Property Name="IsSecurityTransparent" Type="System.Boolean" />
      <Property Name="ReturnType" Type="System.Type" />
      <Property Name="ReturnParameter" Type="System.Reflection.ParameterInfo" />
      <Property Name="IsGenericMethodDefinition" Type="System.Boolean" />
      <Property Name="ContainsGenericParameters" Type="System.Boolean" />
      <Property Name="IsGenericMethod" Type="System.Boolean" />
      <Property Name="InitLocals" Type="System.Boolean" />
      <Property Name="Signature" Type="System.String" />
      <Property Name="MemberType" Type="System.Reflection.MemberTypes" />
      <Property Name="MethodImplementationFlags" Type="System.Reflection.MethodImplAttributes" />
      <Property Name="IsPublic" Type="System.Boolean" />
      <Property Name="IsPrivate" Type="System.Boolean" />
      <Property Name="IsFamily" Type="System.Boolean" />
      <Property Name="IsAssembly" Type="System.Boolean" />
      <Property Name="IsFamilyAndAssembly" Type="System.Boolean" />
      <Property Name="IsFamilyOrAssembly" Type="System.Boolean" />
      <Property Name="IsStatic" Type="System.Boolean" />
      <Property Name="IsFinal" Type="System.Boolean" />
      <Property Name="IsVirtual" Type="System.Boolean" />
      <Property Name="IsHideBySig" Type="System.Boolean" />
      <Property Name="IsAbstract" Type="System.Boolean" />
      <Property Name="IsSpecialName" Type="System.Boolean" />
      <Property Name="IsConstructor" Type="System.Boolean" />
      <Property Name="CustomAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]" />
      <Property Name="MetadataToken" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Module" Return_type="System.Reflection.Module">
        <Parameters />
      </Method>
      <Method Name="get_DeclaringType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_ReturnTypeCustomAttributes" Return_type="System.Reflection.ICustomAttributeProvider">
        <Parameters />
      </Method>
      <Method Name="get_ReflectedType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="Invoke" Return_type="System.Object">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
          <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="binder" Type="System.Reflection.Binder" />
          <Parameter Name="parameters" Type="System.Object[]" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMethodImplementationFlags" Return_type="System.Reflection.MethodImplAttributes">
        <Parameters />
      </Method>
      <Method Name="get_Attributes" Return_type="System.Reflection.MethodAttributes">
        <Parameters />
      </Method>
      <Method Name="get_CallingConvention" Return_type="System.Reflection.CallingConventions">
        <Parameters />
      </Method>
      <Method Name="get_MethodHandle" Return_type="System.RuntimeMethodHandle">
        <Parameters />
      </Method>
      <Method Name="get_IsSecurityCritical" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSecuritySafeCritical" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSecurityTransparent" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetBaseDefinition" Return_type="System.Reflection.MethodInfo">
        <Parameters />
      </Method>
      <Method Name="get_ReturnType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="GetParameters" Return_type="System.Reflection.ParameterInfo[]">
        <Parameters />
      </Method>
      <Method Name="get_ReturnParameter" Return_type="System.Reflection.ParameterInfo">
        <Parameters />
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Object[]">
        <Parameters>
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Object[]">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="IsDefined" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_IsGenericMethodDefinition" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_ContainsGenericParameters" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetGenericMethodDefinition" Return_type="System.Reflection.MethodInfo">
        <Parameters />
      </Method>
      <Method Name="get_IsGenericMethod" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetGenericArguments" Return_type="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="MakeGenericMethod" Return_type="System.Reflection.MethodInfo">
        <Parameters>
          <Parameter Name="typeArguments" Type="System.Type[]" />
        </Parameters>
      </Method>
      <Method Name="DefineGenericParameters" Return_type="System.Reflection.Emit.GenericTypeParameterBuilder[]">
        <Parameters>
          <Parameter Name="names" Type="System.String[]" />
        </Parameters>
      </Method>
      <Method Name="GetToken" Return_type="System.Reflection.Emit.MethodToken">
        <Parameters />
      </Method>
      <Method Name="SetParameters" Return_type="System.Void">
        <Parameters>
          <Parameter Name="parameterTypes" Type="System.Type[]" />
        </Parameters>
      </Method>
      <Method Name="SetReturnType" Return_type="System.Void">
        <Parameters>
          <Parameter Name="returnType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="SetSignature" Return_type="System.Void">
        <Parameters>
          <Parameter Name="returnType" Type="System.Type" />
          <Parameter Name="returnTypeRequiredCustomModifiers" Type="System.Type[]" />
          <Parameter Name="returnTypeOptionalCustomModifiers" Type="System.Type[]" />
          <Parameter Name="parameterTypes" Type="System.Type[]" />
          <Parameter Name="parameterTypeRequiredCustomModifiers" Type="System.Type[][]" />
          <Parameter Name="parameterTypeOptionalCustomModifiers" Type="System.Type[][]" />
        </Parameters>
      </Method>
      <Method Name="DefineParameter" Return_type="System.Reflection.Emit.ParameterBuilder">
        <Parameters>
          <Parameter Name="position" Type="System.Int32" />
          <Parameter Name="attributes" Type="System.Reflection.ParameterAttributes" />
          <Parameter Name="strParamName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="SetMarshal" Return_type="System.Void">
        <Parameters>
          <Parameter Name="unmanagedMarshal" Type="System.Reflection.Emit.UnmanagedMarshal" />
        </Parameters>
      </Method>
      <Method Name="SetSymCustomAttribute" Return_type="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="data" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="AddDeclarativeSecurity" Return_type="System.Void">
        <Parameters>
          <Parameter Name="action" Type="System.Security.Permissions.SecurityAction" />
          <Parameter Name="pset" Type="System.Security.PermissionSet" />
        </Parameters>
      </Method>
      <Method Name="SetMethodBody" Return_type="System.Void">
        <Parameters>
          <Parameter Name="il" Type="System.Byte[]" />
          <Parameter Name="maxStack" Type="System.Int32" />
          <Parameter Name="localSignature" Type="System.Byte[]" />
          <Parameter Name="exceptionHandlers" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.Emit.ExceptionHandler]" />
          <Parameter Name="tokenFixups" Type="System.Collections.Generic.IEnumerable`1[System.Int32]" />
        </Parameters>
      </Method>
      <Method Name="CreateMethodBody" Return_type="System.Void">
        <Parameters>
          <Parameter Name="il" Type="System.Byte[]" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="SetImplementationFlags" Return_type="System.Void">
        <Parameters>
          <Parameter Name="attributes" Type="System.Reflection.MethodImplAttributes" />
        </Parameters>
      </Method>
      <Method Name="GetILGenerator" Return_type="System.Reflection.Emit.ILGenerator">
        <Parameters />
      </Method>
      <Method Name="GetILGenerator" Return_type="System.Reflection.Emit.ILGenerator">
        <Parameters>
          <Parameter Name="size" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_InitLocals" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_InitLocals" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetModule" Return_type="System.Reflection.Module">
        <Parameters />
      </Method>
      <Method Name="get_Signature" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="SetCustomAttribute" Return_type="System.Void">
        <Parameters>
          <Parameter Name="con" Type="System.Reflection.ConstructorInfo" />
          <Parameter Name="binaryAttribute" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="SetCustomAttribute" Return_type="System.Void">
        <Parameters>
          <Parameter Name="customBuilder" Type="System.Reflection.Emit.CustomAttributeBuilder" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.Emit.CustomAttributeBuilder">
    <Properties />
    <Methods />
  </Type>
  <Type Full_Name="System.Reflection.Emit.MethodRental">
    <Properties />
    <Methods>
      <Method Name="SwapMethodBody" Return_type="System.Void">
        <Parameters>
          <Parameter Name="cls" Type="System.Type" />
          <Parameter Name="methodtoken" Type="System.Int32" />
          <Parameter Name="rgIL" Type="System.IntPtr" />
          <Parameter Name="methodSize" Type="System.Int32" />
          <Parameter Name="flags" Type="System.Int32" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.Emit.ModuleBuilder">
    <Properties>
      <Property Name="FullyQualifiedName" Type="System.String" />
      <Property Name="MDStreamVersion" Type="System.Int32" />
      <Property Name="ModuleVersionId" Type="System.Guid" />
      <Property Name="MetadataToken" Type="System.Int32" />
      <Property Name="ScopeName" Type="System.String" />
      <Property Name="Name" Type="System.String" />
      <Property Name="Assembly" Type="System.Reflection.Assembly" />
      <Property Name="CustomAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]" />
      <Property Name="ModuleHandle" Type="System.ModuleHandle" />
    </Properties>
    <Methods>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Object[]">
        <Parameters>
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Object[]">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="IsDefined" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributesData" Return_type="System.Collections.Generic.IList`1[System.Reflection.CustomAttributeData]">
        <Parameters />
      </Method>
      <Method Name="GetTypes" Return_type="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="GetType" Return_type="System.Type">
        <Parameters>
          <Parameter Name="className" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetType" Return_type="System.Type">
        <Parameters>
          <Parameter Name="className" Type="System.String" />
          <Parameter Name="ignoreCase" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetType" Return_type="System.Type">
        <Parameters>
          <Parameter Name="className" Type="System.String" />
          <Parameter Name="throwOnError" Type="System.Boolean" />
          <Parameter Name="ignoreCase" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_FullyQualifiedName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="ResolveSignature" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="metadataToken" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ResolveMethod" Return_type="System.Reflection.MethodBase">
        <Parameters>
          <Parameter Name="metadataToken" Type="System.Int32" />
          <Parameter Name="genericTypeArguments" Type="System.Type[]" />
          <Parameter Name="genericMethodArguments" Type="System.Type[]" />
        </Parameters>
      </Method>
      <Method Name="ResolveField" Return_type="System.Reflection.FieldInfo">
        <Parameters>
          <Parameter Name="metadataToken" Type="System.Int32" />
          <Parameter Name="genericTypeArguments" Type="System.Type[]" />
          <Parameter Name="genericMethodArguments" Type="System.Type[]" />
        </Parameters>
      </Method>
      <Method Name="ResolveType" Return_type="System.Type">
        <Parameters>
          <Parameter Name="metadataToken" Type="System.Int32" />
          <Parameter Name="genericTypeArguments" Type="System.Type[]" />
          <Parameter Name="genericMethodArguments" Type="System.Type[]" />
        </Parameters>
      </Method>
      <Method Name="ResolveMember" Return_type="System.Reflection.MemberInfo">
        <Parameters>
          <Parameter Name="metadataToken" Type="System.Int32" />
          <Parameter Name="genericTypeArguments" Type="System.Type[]" />
          <Parameter Name="genericMethodArguments" Type="System.Type[]" />
        </Parameters>
      </Method>
      <Method Name="ResolveString" Return_type="System.String">
        <Parameters>
          <Parameter Name="metadataToken" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetPEKind" Return_type="System.Void">
        <Parameters>
          <Parameter Name="peKind" Type="System.Reflection.PortableExecutableKinds&amp;" />
          <Parameter Name="machine" Type="System.Reflection.ImageFileMachine&amp;" />
        </Parameters>
      </Method>
      <Method Name="get_MDStreamVersion" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_ModuleVersionId" Return_type="System.Guid">
        <Parameters />
      </Method>
      <Method Name="get_MetadataToken" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="IsResource" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetFields" Return_type="System.Reflection.FieldInfo[]">
        <Parameters>
          <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetField" Return_type="System.Reflection.FieldInfo">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetMethods" Return_type="System.Reflection.MethodInfo[]">
        <Parameters>
          <Parameter Name="bindingFlags" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="get_ScopeName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Assembly" Return_type="System.Reflection.Assembly">
        <Parameters />
      </Method>
      <Method Name="GetSignerCertificate" Return_type="System.Security.Cryptography.X509Certificates.X509Certificate">
        <Parameters />
      </Method>
      <Method Name="DefineType" Return_type="System.Reflection.Emit.TypeBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="DefineType" Return_type="System.Reflection.Emit.TypeBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="attr" Type="System.Reflection.TypeAttributes" />
        </Parameters>
      </Method>
      <Method Name="DefineType" Return_type="System.Reflection.Emit.TypeBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="attr" Type="System.Reflection.TypeAttributes" />
          <Parameter Name="parent" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="DefineType" Return_type="System.Reflection.Emit.TypeBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="attr" Type="System.Reflection.TypeAttributes" />
          <Parameter Name="parent" Type="System.Type" />
          <Parameter Name="typesize" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="DefineType" Return_type="System.Reflection.Emit.TypeBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="attr" Type="System.Reflection.TypeAttributes" />
          <Parameter Name="parent" Type="System.Type" />
          <Parameter Name="packingSize" Type="System.Reflection.Emit.PackingSize" />
          <Parameter Name="typesize" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="DefineType" Return_type="System.Reflection.Emit.TypeBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="attr" Type="System.Reflection.TypeAttributes" />
          <Parameter Name="parent" Type="System.Type" />
          <Parameter Name="interfaces" Type="System.Type[]" />
        </Parameters>
      </Method>
      <Method Name="DefineType" Return_type="System.Reflection.Emit.TypeBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="attr" Type="System.Reflection.TypeAttributes" />
          <Parameter Name="parent" Type="System.Type" />
          <Parameter Name="packsize" Type="System.Reflection.Emit.PackingSize" />
        </Parameters>
      </Method>
      <Method Name="DefineEnum" Return_type="System.Reflection.Emit.EnumBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="visibility" Type="System.Reflection.TypeAttributes" />
          <Parameter Name="underlyingType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="DefineResource" Return_type="System.Resources.IResourceWriter">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="description" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="DefineResource" Return_type="System.Resources.IResourceWriter">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="description" Type="System.String" />
          <Parameter Name="attribute" Type="System.Reflection.ResourceAttributes" />
        </Parameters>
      </Method>
      <Method Name="DefineManifestResource" Return_type="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="stream" Type="System.IO.Stream" />
          <Parameter Name="attribute" Type="System.Reflection.ResourceAttributes" />
        </Parameters>
      </Method>
      <Method Name="DefineUnmanagedResource" Return_type="System.Void">
        <Parameters>
          <Parameter Name="resource" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="DefineUnmanagedResource" Return_type="System.Void">
        <Parameters>
          <Parameter Name="resourceFileName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="DefineGlobalMethod" Return_type="System.Reflection.Emit.MethodBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" />
          <Parameter Name="returnType" Type="System.Type" />
          <Parameter Name="parameterTypes" Type="System.Type[]" />
        </Parameters>
      </Method>
      <Method Name="DefineGlobalMethod" Return_type="System.Reflection.Emit.MethodBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" />
          <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
          <Parameter Name="returnType" Type="System.Type" />
          <Parameter Name="parameterTypes" Type="System.Type[]" />
        </Parameters>
      </Method>
      <Method Name="DefineGlobalMethod" Return_type="System.Reflection.Emit.MethodBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" />
          <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
          <Parameter Name="returnType" Type="System.Type" />
          <Parameter Name="requiredReturnTypeCustomModifiers" Type="System.Type[]" />
          <Parameter Name="optionalReturnTypeCustomModifiers" Type="System.Type[]" />
          <Parameter Name="parameterTypes" Type="System.Type[]" />
          <Parameter Name="requiredParameterTypeCustomModifiers" Type="System.Type[][]" />
          <Parameter Name="optionalParameterTypeCustomModifiers" Type="System.Type[][]" />
        </Parameters>
      </Method>
      <Method Name="DefinePInvokeMethod" Return_type="System.Reflection.Emit.MethodBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="dllName" Type="System.String" />
          <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" />
          <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
          <Parameter Name="returnType" Type="System.Type" />
          <Parameter Name="parameterTypes" Type="System.Type[]" />
          <Parameter Name="nativeCallConv" Type="System.Runtime.InteropServices.CallingConvention" />
          <Parameter Name="nativeCharSet" Type="System.Runtime.InteropServices.CharSet" />
        </Parameters>
      </Method>
      <Method Name="DefinePInvokeMethod" Return_type="System.Reflection.Emit.MethodBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="dllName" Type="System.String" />
          <Parameter Name="entryName" Type="System.String" />
          <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" />
          <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
          <Parameter Name="returnType" Type="System.Type" />
          <Parameter Name="parameterTypes" Type="System.Type[]" />
          <Parameter Name="nativeCallConv" Type="System.Runtime.InteropServices.CallingConvention" />
          <Parameter Name="nativeCharSet" Type="System.Runtime.InteropServices.CharSet" />
        </Parameters>
      </Method>
      <Method Name="CreateGlobalFunctions" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="DefineInitializedData" Return_type="System.Reflection.Emit.FieldBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="data" Type="System.Byte[]" />
          <Parameter Name="attributes" Type="System.Reflection.FieldAttributes" />
        </Parameters>
      </Method>
      <Method Name="DefineUninitializedData" Return_type="System.Reflection.Emit.FieldBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="size" Type="System.Int32" />
          <Parameter Name="attributes" Type="System.Reflection.FieldAttributes" />
        </Parameters>
      </Method>
      <Method Name="GetTypeToken" Return_type="System.Reflection.Emit.TypeToken">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetTypeToken" Return_type="System.Reflection.Emit.TypeToken">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetMethodToken" Return_type="System.Reflection.Emit.MethodToken">
        <Parameters>
          <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        </Parameters>
      </Method>
      <Method Name="GetConstructorToken" Return_type="System.Reflection.Emit.MethodToken">
        <Parameters>
          <Parameter Name="constructor" Type="System.Reflection.ConstructorInfo" />
          <Parameter Name="optionalParameterTypes" Type="System.Collections.Generic.IEnumerable`1[System.Type]" />
        </Parameters>
      </Method>
      <Method Name="GetMethodToken" Return_type="System.Reflection.Emit.MethodToken">
        <Parameters>
          <Parameter Name="method" Type="System.Reflection.MethodInfo" />
          <Parameter Name="optionalParameterTypes" Type="System.Collections.Generic.IEnumerable`1[System.Type]" />
        </Parameters>
      </Method>
      <Method Name="GetArrayMethodToken" Return_type="System.Reflection.Emit.MethodToken">
        <Parameters>
          <Parameter Name="arrayClass" Type="System.Type" />
          <Parameter Name="methodName" Type="System.String" />
          <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
          <Parameter Name="returnType" Type="System.Type" />
          <Parameter Name="parameterTypes" Type="System.Type[]" />
        </Parameters>
      </Method>
      <Method Name="GetArrayMethod" Return_type="System.Reflection.MethodInfo">
        <Parameters>
          <Parameter Name="arrayClass" Type="System.Type" />
          <Parameter Name="methodName" Type="System.String" />
          <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
          <Parameter Name="returnType" Type="System.Type" />
          <Parameter Name="parameterTypes" Type="System.Type[]" />
        </Parameters>
      </Method>
      <Method Name="GetConstructorToken" Return_type="System.Reflection.Emit.MethodToken">
        <Parameters>
          <Parameter Name="con" Type="System.Reflection.ConstructorInfo" />
        </Parameters>
      </Method>
      <Method Name="GetFieldToken" Return_type="System.Reflection.Emit.FieldToken">
        <Parameters>
          <Parameter Name="field" Type="System.Reflection.FieldInfo" />
        </Parameters>
      </Method>
      <Method Name="GetStringConstant" Return_type="System.Reflection.Emit.StringToken">
        <Parameters>
          <Parameter Name="str" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetSignatureToken" Return_type="System.Reflection.Emit.SignatureToken">
        <Parameters>
          <Parameter Name="sigHelper" Type="System.Reflection.Emit.SignatureHelper" />
        </Parameters>
      </Method>
      <Method Name="GetSignatureToken" Return_type="System.Reflection.Emit.SignatureToken">
        <Parameters>
          <Parameter Name="sigBytes" Type="System.Byte[]" />
          <Parameter Name="sigLength" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="SetCustomAttribute" Return_type="System.Void">
        <Parameters>
          <Parameter Name="con" Type="System.Reflection.ConstructorInfo" />
          <Parameter Name="binaryAttribute" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="SetCustomAttribute" Return_type="System.Void">
        <Parameters>
          <Parameter Name="customBuilder" Type="System.Reflection.Emit.CustomAttributeBuilder" />
        </Parameters>
      </Method>
      <Method Name="GetSymWriter" Return_type="System.Diagnostics.SymbolStore.ISymbolWriter">
        <Parameters />
      </Method>
      <Method Name="DefineDocument" Return_type="System.Diagnostics.SymbolStore.ISymbolDocumentWriter">
        <Parameters>
          <Parameter Name="url" Type="System.String" />
          <Parameter Name="language" Type="System.Guid" />
          <Parameter Name="languageVendor" Type="System.Guid" />
          <Parameter Name="documentType" Type="System.Guid" />
        </Parameters>
      </Method>
      <Method Name="SetUserEntryPoint" Return_type="System.Void">
        <Parameters>
          <Parameter Name="entryPoint" Type="System.Reflection.MethodInfo" />
        </Parameters>
      </Method>
      <Method Name="SetSymCustomAttribute" Return_type="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="data" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="IsTransient" Return_type="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.Emit.OpCodes">
    <Properties />
    <Methods>
      <Method Name="TakesSingleByteArgument" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="inst" Type="System.Reflection.Emit.OpCode" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.Emit.ParameterBuilder">
    <Properties>
      <Property Name="Name" Type="System.String" />
      <Property Name="Position" Type="System.Int32" />
      <Property Name="Attributes" Type="System.Int32" />
      <Property Name="IsIn" Type="System.Boolean" />
      <Property Name="IsOut" Type="System.Boolean" />
      <Property Name="IsOptional" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="SetMarshal" Return_type="System.Void">
        <Parameters>
          <Parameter Name="unmanagedMarshal" Type="System.Reflection.Emit.UnmanagedMarshal" />
        </Parameters>
      </Method>
      <Method Name="SetConstant" Return_type="System.Void">
        <Parameters>
          <Parameter Name="defaultValue" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="SetCustomAttribute" Return_type="System.Void">
        <Parameters>
          <Parameter Name="con" Type="System.Reflection.ConstructorInfo" />
          <Parameter Name="binaryAttribute" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="SetCustomAttribute" Return_type="System.Void">
        <Parameters>
          <Parameter Name="customBuilder" Type="System.Reflection.Emit.CustomAttributeBuilder" />
        </Parameters>
      </Method>
      <Method Name="GetToken" Return_type="System.Reflection.Emit.ParameterToken">
        <Parameters />
      </Method>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Position" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_Attributes" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_IsIn" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsOut" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsOptional" Return_type="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.Emit.PropertyBuilder">
    <Properties>
      <Property Name="PropertyToken" Type="System.Reflection.Emit.PropertyToken" />
      <Property Name="Module" Type="System.Reflection.Module" />
      <Property Name="PropertyType" Type="System.Type" />
      <Property Name="Attributes" Type="System.Reflection.PropertyAttributes" />
      <Property Name="CanRead" Type="System.Boolean" />
      <Property Name="CanWrite" Type="System.Boolean" />
      <Property Name="Name" Type="System.String" />
      <Property Name="DeclaringType" Type="System.Type" />
      <Property Name="ReflectedType" Type="System.Type" />
      <Property Name="MemberType" Type="System.Reflection.MemberTypes" />
      <Property Name="GetMethod" Type="System.Reflection.MethodInfo" />
      <Property Name="SetMethod" Type="System.Reflection.MethodInfo" />
      <Property Name="IsSpecialName" Type="System.Boolean" />
      <Property Name="CustomAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]" />
      <Property Name="MetadataToken" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="SetConstant" Return_type="System.Void">
        <Parameters>
          <Parameter Name="defaultValue" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="get_PropertyToken" Return_type="System.Reflection.Emit.PropertyToken">
        <Parameters />
      </Method>
      <Method Name="get_Module" Return_type="System.Reflection.Module">
        <Parameters />
      </Method>
      <Method Name="SetGetMethod" Return_type="System.Void">
        <Parameters>
          <Parameter Name="mdBuilder" Type="System.Reflection.Emit.MethodBuilder" />
        </Parameters>
      </Method>
      <Method Name="SetSetMethod" Return_type="System.Void">
        <Parameters>
          <Parameter Name="mdBuilder" Type="System.Reflection.Emit.MethodBuilder" />
        </Parameters>
      </Method>
      <Method Name="AddOtherMethod" Return_type="System.Void">
        <Parameters>
          <Parameter Name="mdBuilder" Type="System.Reflection.Emit.MethodBuilder" />
        </Parameters>
      </Method>
      <Method Name="SetCustomAttribute" Return_type="System.Void">
        <Parameters>
          <Parameter Name="con" Type="System.Reflection.ConstructorInfo" />
          <Parameter Name="binaryAttribute" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="SetCustomAttribute" Return_type="System.Void">
        <Parameters>
          <Parameter Name="customBuilder" Type="System.Reflection.Emit.CustomAttributeBuilder" />
        </Parameters>
      </Method>
      <Method Name="GetValue" Return_type="System.Object">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
          <Parameter Name="index" Type="System.Object[]" />
        </Parameters>
      </Method>
      <Method Name="GetValue" Return_type="System.Object">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
          <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="binder" Type="System.Reflection.Binder" />
          <Parameter Name="index" Type="System.Object[]" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        </Parameters>
      </Method>
      <Method Name="SetValue" Return_type="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="index" Type="System.Object[]" />
        </Parameters>
      </Method>
      <Method Name="SetValue" Return_type="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="binder" Type="System.Reflection.Binder" />
          <Parameter Name="index" Type="System.Object[]" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        </Parameters>
      </Method>
      <Method Name="GetAccessors" Return_type="System.Reflection.MethodInfo[]">
        <Parameters>
          <Parameter Name="nonPublic" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetGetMethod" Return_type="System.Reflection.MethodInfo">
        <Parameters>
          <Parameter Name="nonPublic" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetSetMethod" Return_type="System.Reflection.MethodInfo">
        <Parameters>
          <Parameter Name="nonPublic" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetIndexParameters" Return_type="System.Reflection.ParameterInfo[]">
        <Parameters />
      </Method>
      <Method Name="get_PropertyType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_Attributes" Return_type="System.Reflection.PropertyAttributes">
        <Parameters />
      </Method>
      <Method Name="get_CanRead" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_CanWrite" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Object[]">
        <Parameters>
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Object[]">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="IsDefined" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_DeclaringType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_ReflectedType" Return_type="System.Type">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.Emit.SignatureHelper">
    <Properties />
    <Methods>
      <Method Name="GetMethodSigHelper" Return_type="System.Reflection.Emit.SignatureHelper">
        <Parameters>
          <Parameter Name="mod" Type="System.Reflection.Module" />
          <Parameter Name="returnType" Type="System.Type" />
          <Parameter Name="parameterTypes" Type="System.Type[]" />
        </Parameters>
      </Method>
      <Method Name="GetMethodSigHelper" Return_type="System.Reflection.Emit.SignatureHelper">
        <Parameters>
          <Parameter Name="mod" Type="System.Reflection.Module" />
          <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
          <Parameter Name="returnType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetMethodSigHelper" Return_type="System.Reflection.Emit.SignatureHelper">
        <Parameters>
          <Parameter Name="mod" Type="System.Reflection.Module" />
          <Parameter Name="unmanagedCallConv" Type="System.Runtime.InteropServices.CallingConvention" />
          <Parameter Name="returnType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetLocalVarSigHelper" Return_type="System.Reflection.Emit.SignatureHelper">
        <Parameters />
      </Method>
      <Method Name="GetMethodSigHelper" Return_type="System.Reflection.Emit.SignatureHelper">
        <Parameters>
          <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
          <Parameter Name="returnType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetMethodSigHelper" Return_type="System.Reflection.Emit.SignatureHelper">
        <Parameters>
          <Parameter Name="unmanagedCallingConvention" Type="System.Runtime.InteropServices.CallingConvention" />
          <Parameter Name="returnType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetLocalVarSigHelper" Return_type="System.Reflection.Emit.SignatureHelper">
        <Parameters>
          <Parameter Name="mod" Type="System.Reflection.Module" />
        </Parameters>
      </Method>
      <Method Name="GetFieldSigHelper" Return_type="System.Reflection.Emit.SignatureHelper">
        <Parameters>
          <Parameter Name="mod" Type="System.Reflection.Module" />
        </Parameters>
      </Method>
      <Method Name="GetPropertySigHelper" Return_type="System.Reflection.Emit.SignatureHelper">
        <Parameters>
          <Parameter Name="mod" Type="System.Reflection.Module" />
          <Parameter Name="returnType" Type="System.Type" />
          <Parameter Name="parameterTypes" Type="System.Type[]" />
        </Parameters>
      </Method>
      <Method Name="GetPropertySigHelper" Return_type="System.Reflection.Emit.SignatureHelper">
        <Parameters>
          <Parameter Name="mod" Type="System.Reflection.Module" />
          <Parameter Name="returnType" Type="System.Type" />
          <Parameter Name="requiredReturnTypeCustomModifiers" Type="System.Type[]" />
          <Parameter Name="optionalReturnTypeCustomModifiers" Type="System.Type[]" />
          <Parameter Name="parameterTypes" Type="System.Type[]" />
          <Parameter Name="requiredParameterTypeCustomModifiers" Type="System.Type[][]" />
          <Parameter Name="optionalParameterTypeCustomModifiers" Type="System.Type[][]" />
        </Parameters>
      </Method>
      <Method Name="GetPropertySigHelper" Return_type="System.Reflection.Emit.SignatureHelper">
        <Parameters>
          <Parameter Name="mod" Type="System.Reflection.Module" />
          <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
          <Parameter Name="returnType" Type="System.Type" />
          <Parameter Name="requiredReturnTypeCustomModifiers" Type="System.Type[]" />
          <Parameter Name="optionalReturnTypeCustomModifiers" Type="System.Type[]" />
          <Parameter Name="parameterTypes" Type="System.Type[]" />
          <Parameter Name="requiredParameterTypeCustomModifiers" Type="System.Type[][]" />
          <Parameter Name="optionalParameterTypeCustomModifiers" Type="System.Type[][]" />
        </Parameters>
      </Method>
      <Method Name="AddArgument" Return_type="System.Void">
        <Parameters>
          <Parameter Name="clsArgument" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="AddArgument" Return_type="System.Void">
        <Parameters>
          <Parameter Name="argument" Type="System.Type" />
          <Parameter Name="pinned" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="AddArguments" Return_type="System.Void">
        <Parameters>
          <Parameter Name="arguments" Type="System.Type[]" />
          <Parameter Name="requiredCustomModifiers" Type="System.Type[][]" />
          <Parameter Name="optionalCustomModifiers" Type="System.Type[][]" />
        </Parameters>
      </Method>
      <Method Name="AddArgument" Return_type="System.Void">
        <Parameters>
          <Parameter Name="argument" Type="System.Type" />
          <Parameter Name="requiredCustomModifiers" Type="System.Type[]" />
          <Parameter Name="optionalCustomModifiers" Type="System.Type[]" />
        </Parameters>
      </Method>
      <Method Name="AddSentinel" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetSignature" Return_type="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.Emit.TypeBuilder">
    <Properties>
      <Property Name="DeclaringType" Type="System.Type" />
      <Property Name="ReflectedType" Type="System.Type" />
      <Property Name="Name" Type="System.String" />
      <Property Name="Module" Type="System.Reflection.Module" />
      <Property Name="GUID" Type="System.Guid" />
      <Property Name="Assembly" Type="System.Reflection.Assembly" />
      <Property Name="TypeHandle" Type="System.RuntimeTypeHandle" />
      <Property Name="FullName" Type="System.String" />
      <Property Name="Namespace" Type="System.String" />
      <Property Name="AssemblyQualifiedName" Type="System.String" />
      <Property Name="BaseType" Type="System.Type" />
      <Property Name="IsSecurityCritical" Type="System.Boolean" />
      <Property Name="IsSecuritySafeCritical" Type="System.Boolean" />
      <Property Name="IsSecurityTransparent" Type="System.Boolean" />
      <Property Name="UnderlyingSystemType" Type="System.Type" />
      <Property Name="GenericParameterAttributes" Type="System.Reflection.GenericParameterAttributes" />
      <Property Name="IsGenericTypeDefinition" Type="System.Boolean" />
      <Property Name="IsGenericType" Type="System.Boolean" />
      <Property Name="IsGenericParameter" Type="System.Boolean" />
      <Property Name="IsConstructedGenericType" Type="System.Boolean" />
      <Property Name="GenericParameterPosition" Type="System.Int32" />
      <Property Name="DeclaringMethod" Type="System.Reflection.MethodBase" />
      <Property Name="Size" Type="System.Int32" />
      <Property Name="PackingSize" Type="System.Reflection.Emit.PackingSize" />
      <Property Name="TypeToken" Type="System.Reflection.Emit.TypeToken" />
      <Property Name="GenericTypeParameters" Type="System.Type[]" />
      <Property Name="DeclaredConstructors" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.ConstructorInfo]" />
      <Property Name="DeclaredEvents" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.EventInfo]" />
      <Property Name="DeclaredFields" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.FieldInfo]" />
      <Property Name="DeclaredMembers" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.MemberInfo]" />
      <Property Name="DeclaredMethods" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.MethodInfo]" />
      <Property Name="DeclaredNestedTypes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.TypeInfo]" />
      <Property Name="DeclaredProperties" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.PropertyInfo]" />
      <Property Name="ImplementedInterfaces" Type="System.Collections.Generic.IEnumerable`1[System.Type]" />
      <Property Name="MemberType" Type="System.Reflection.MemberTypes" />
      <Property Name="StructLayoutAttribute" Type="System.Runtime.InteropServices.StructLayoutAttribute" />
      <Property Name="TypeInitializer" Type="System.Reflection.ConstructorInfo" />
      <Property Name="IsNested" Type="System.Boolean" />
      <Property Name="Attributes" Type="System.Reflection.TypeAttributes" />
      <Property Name="IsVisible" Type="System.Boolean" />
      <Property Name="IsNotPublic" Type="System.Boolean" />
      <Property Name="IsPublic" Type="System.Boolean" />
      <Property Name="IsNestedPublic" Type="System.Boolean" />
      <Property Name="IsNestedPrivate" Type="System.Boolean" />
      <Property Name="IsNestedFamily" Type="System.Boolean" />
      <Property Name="IsNestedAssembly" Type="System.Boolean" />
      <Property Name="IsNestedFamANDAssem" Type="System.Boolean" />
      <Property Name="IsNestedFamORAssem" Type="System.Boolean" />
      <Property Name="IsAutoLayout" Type="System.Boolean" />
      <Property Name="IsLayoutSequential" Type="System.Boolean" />
      <Property Name="IsExplicitLayout" Type="System.Boolean" />
      <Property Name="IsClass" Type="System.Boolean" />
      <Property Name="IsInterface" Type="System.Boolean" />
      <Property Name="IsValueType" Type="System.Boolean" />
      <Property Name="IsAbstract" Type="System.Boolean" />
      <Property Name="IsSealed" Type="System.Boolean" />
      <Property Name="IsEnum" Type="System.Boolean" />
      <Property Name="IsSpecialName" Type="System.Boolean" />
      <Property Name="IsImport" Type="System.Boolean" />
      <Property Name="IsSerializable" Type="System.Boolean" />
      <Property Name="IsAnsiClass" Type="System.Boolean" />
      <Property Name="IsUnicodeClass" Type="System.Boolean" />
      <Property Name="IsAutoClass" Type="System.Boolean" />
      <Property Name="IsArray" Type="System.Boolean" />
      <Property Name="ContainsGenericParameters" Type="System.Boolean" />
      <Property Name="IsByRef" Type="System.Boolean" />
      <Property Name="IsPointer" Type="System.Boolean" />
      <Property Name="IsPrimitive" Type="System.Boolean" />
      <Property Name="IsCOMObject" Type="System.Boolean" />
      <Property Name="HasElementType" Type="System.Boolean" />
      <Property Name="IsContextful" Type="System.Boolean" />
      <Property Name="IsMarshalByRef" Type="System.Boolean" />
      <Property Name="GenericTypeArguments" Type="System.Type[]" />
      <Property Name="CustomAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]" />
      <Property Name="MetadataToken" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="IsAssignableFrom" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="typeInfo" Type="System.Reflection.TypeInfo" />
        </Parameters>
      </Method>
      <Method Name="GetMethod" Return_type="System.Reflection.MethodInfo">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
          <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        </Parameters>
      </Method>
      <Method Name="GetConstructor" Return_type="System.Reflection.ConstructorInfo">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
          <Parameter Name="constructor" Type="System.Reflection.ConstructorInfo" />
        </Parameters>
      </Method>
      <Method Name="GetField" Return_type="System.Reflection.FieldInfo">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
          <Parameter Name="field" Type="System.Reflection.FieldInfo" />
        </Parameters>
      </Method>
      <Method Name="IsCreated" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_DeclaringType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_ReflectedType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Module" Return_type="System.Reflection.Module">
        <Parameters />
      </Method>
      <Method Name="get_GUID" Return_type="System.Guid">
        <Parameters />
      </Method>
      <Method Name="InvokeMember" Return_type="System.Object">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="binder" Type="System.Reflection.Binder" />
          <Parameter Name="target" Type="System.Object" />
          <Parameter Name="args" Type="System.Object[]" />
          <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
          <Parameter Name="namedParameters" Type="System.String[]" />
        </Parameters>
      </Method>
      <Method Name="get_Assembly" Return_type="System.Reflection.Assembly">
        <Parameters />
      </Method>
      <Method Name="get_TypeHandle" Return_type="System.RuntimeTypeHandle">
        <Parameters />
      </Method>
      <Method Name="get_FullName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Namespace" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_AssemblyQualifiedName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_BaseType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="GetConstructors" Return_type="System.Reflection.ConstructorInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetMethods" Return_type="System.Reflection.MethodInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetField" Return_type="System.Reflection.FieldInfo">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetFields" Return_type="System.Reflection.FieldInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetInterface" Return_type="System.Type">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="ignoreCase" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetInterfaces" Return_type="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="GetEvent" Return_type="System.Reflection.EventInfo">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetEvents" Return_type="System.Reflection.EventInfo[]">
        <Parameters />
      </Method>
      <Method Name="GetProperties" Return_type="System.Reflection.PropertyInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetNestedTypes" Return_type="System.Type[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetNestedType" Return_type="System.Type">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetMember" Return_type="System.Reflection.MemberInfo[]">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="type" Type="System.Reflection.MemberTypes" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetInterfaceMap" Return_type="System.Reflection.InterfaceMapping">
        <Parameters>
          <Parameter Name="interfaceType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetEvents" Return_type="System.Reflection.EventInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetMembers" Return_type="System.Reflection.MemberInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="IsAssignableFrom" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="c" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetElementType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_IsSecurityCritical" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSecuritySafeCritical" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSecurityTransparent" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="IsSubclassOf" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="c" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="get_UnderlyingSystemType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="MakePointerType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="MakeByRefType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="MakeArrayType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="MakeArrayType" Return_type="System.Type">
        <Parameters>
          <Parameter Name="rank" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Object[]">
        <Parameters>
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Object[]">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="IsDefined" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_GenericParameterAttributes" Return_type="System.Reflection.GenericParameterAttributes">
        <Parameters />
      </Method>
      <Method Name="DefineGenericParameters" Return_type="System.Reflection.Emit.GenericTypeParameterBuilder[]">
        <Parameters>
          <Parameter Name="names" Type="System.String[]" />
        </Parameters>
      </Method>
      <Method Name="MakeGenericType" Return_type="System.Type">
        <Parameters>
          <Parameter Name="typeArguments" Type="System.Type[]" />
        </Parameters>
      </Method>
      <Method Name="GetGenericArguments" Return_type="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="get_IsGenericTypeDefinition" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsGenericType" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsGenericParameter" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsConstructedGenericType" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_GenericParameterPosition" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_DeclaringMethod" Return_type="System.Reflection.MethodBase">
        <Parameters />
      </Method>
      <Method Name="GetGenericTypeDefinition" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="DefineMethodOverride" Return_type="System.Void">
        <Parameters>
          <Parameter Name="methodInfoBody" Type="System.Reflection.MethodInfo" />
          <Parameter Name="methodInfoDeclaration" Type="System.Reflection.MethodInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineMethod" Return_type="System.Reflection.Emit.MethodBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" />
          <Parameter Name="returnType" Type="System.Type" />
          <Parameter Name="parameterTypes" Type="System.Type[]" />
        </Parameters>
      </Method>
      <Method Name="DefineMethod" Return_type="System.Reflection.Emit.MethodBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" />
        </Parameters>
      </Method>
      <Method Name="DefineMethod" Return_type="System.Reflection.Emit.MethodBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" />
          <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
        </Parameters>
      </Method>
      <Method Name="DefineMethod" Return_type="System.Reflection.Emit.MethodBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" />
          <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
          <Parameter Name="returnType" Type="System.Type" />
          <Parameter Name="parameterTypes" Type="System.Type[]" />
        </Parameters>
      </Method>
      <Method Name="DefineMethod" Return_type="System.Reflection.Emit.MethodBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" />
          <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
          <Parameter Name="returnType" Type="System.Type" />
          <Parameter Name="returnTypeRequiredCustomModifiers" Type="System.Type[]" />
          <Parameter Name="returnTypeOptionalCustomModifiers" Type="System.Type[]" />
          <Parameter Name="parameterTypes" Type="System.Type[]" />
          <Parameter Name="parameterTypeRequiredCustomModifiers" Type="System.Type[][]" />
          <Parameter Name="parameterTypeOptionalCustomModifiers" Type="System.Type[][]" />
        </Parameters>
      </Method>
      <Method Name="DefineTypeInitializer" Return_type="System.Reflection.Emit.ConstructorBuilder">
        <Parameters />
      </Method>
      <Method Name="DefineDefaultConstructor" Return_type="System.Reflection.Emit.ConstructorBuilder">
        <Parameters>
          <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" />
        </Parameters>
      </Method>
      <Method Name="DefineConstructor" Return_type="System.Reflection.Emit.ConstructorBuilder">
        <Parameters>
          <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" />
          <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
          <Parameter Name="parameterTypes" Type="System.Type[]" />
        </Parameters>
      </Method>
      <Method Name="DefineConstructor" Return_type="System.Reflection.Emit.ConstructorBuilder">
        <Parameters>
          <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" />
          <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
          <Parameter Name="parameterTypes" Type="System.Type[]" />
          <Parameter Name="requiredCustomModifiers" Type="System.Type[][]" />
          <Parameter Name="optionalCustomModifiers" Type="System.Type[][]" />
        </Parameters>
      </Method>
      <Method Name="DefinePInvokeMethod" Return_type="System.Reflection.Emit.MethodBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="dllName" Type="System.String" />
          <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" />
          <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
          <Parameter Name="returnType" Type="System.Type" />
          <Parameter Name="parameterTypes" Type="System.Type[]" />
          <Parameter Name="nativeCallConv" Type="System.Runtime.InteropServices.CallingConvention" />
          <Parameter Name="nativeCharSet" Type="System.Runtime.InteropServices.CharSet" />
        </Parameters>
      </Method>
      <Method Name="DefinePInvokeMethod" Return_type="System.Reflection.Emit.MethodBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="dllName" Type="System.String" />
          <Parameter Name="entryName" Type="System.String" />
          <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" />
          <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
          <Parameter Name="returnType" Type="System.Type" />
          <Parameter Name="parameterTypes" Type="System.Type[]" />
          <Parameter Name="nativeCallConv" Type="System.Runtime.InteropServices.CallingConvention" />
          <Parameter Name="nativeCharSet" Type="System.Runtime.InteropServices.CharSet" />
        </Parameters>
      </Method>
      <Method Name="DefinePInvokeMethod" Return_type="System.Reflection.Emit.MethodBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="dllName" Type="System.String" />
          <Parameter Name="entryName" Type="System.String" />
          <Parameter Name="attributes" Type="System.Reflection.MethodAttributes" />
          <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
          <Parameter Name="returnType" Type="System.Type" />
          <Parameter Name="returnTypeRequiredCustomModifiers" Type="System.Type[]" />
          <Parameter Name="returnTypeOptionalCustomModifiers" Type="System.Type[]" />
          <Parameter Name="parameterTypes" Type="System.Type[]" />
          <Parameter Name="parameterTypeRequiredCustomModifiers" Type="System.Type[][]" />
          <Parameter Name="parameterTypeOptionalCustomModifiers" Type="System.Type[][]" />
          <Parameter Name="nativeCallConv" Type="System.Runtime.InteropServices.CallingConvention" />
          <Parameter Name="nativeCharSet" Type="System.Runtime.InteropServices.CharSet" />
        </Parameters>
      </Method>
      <Method Name="DefineNestedType" Return_type="System.Reflection.Emit.TypeBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="DefineNestedType" Return_type="System.Reflection.Emit.TypeBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="attr" Type="System.Reflection.TypeAttributes" />
          <Parameter Name="parent" Type="System.Type" />
          <Parameter Name="interfaces" Type="System.Type[]" />
        </Parameters>
      </Method>
      <Method Name="DefineNestedType" Return_type="System.Reflection.Emit.TypeBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="attr" Type="System.Reflection.TypeAttributes" />
          <Parameter Name="parent" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="DefineNestedType" Return_type="System.Reflection.Emit.TypeBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="attr" Type="System.Reflection.TypeAttributes" />
        </Parameters>
      </Method>
      <Method Name="DefineNestedType" Return_type="System.Reflection.Emit.TypeBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="attr" Type="System.Reflection.TypeAttributes" />
          <Parameter Name="parent" Type="System.Type" />
          <Parameter Name="typeSize" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="DefineNestedType" Return_type="System.Reflection.Emit.TypeBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="attr" Type="System.Reflection.TypeAttributes" />
          <Parameter Name="parent" Type="System.Type" />
          <Parameter Name="packSize" Type="System.Reflection.Emit.PackingSize" />
        </Parameters>
      </Method>
      <Method Name="DefineNestedType" Return_type="System.Reflection.Emit.TypeBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="attr" Type="System.Reflection.TypeAttributes" />
          <Parameter Name="parent" Type="System.Type" />
          <Parameter Name="packSize" Type="System.Reflection.Emit.PackingSize" />
          <Parameter Name="typeSize" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="DefineField" Return_type="System.Reflection.Emit.FieldBuilder">
        <Parameters>
          <Parameter Name="fieldName" Type="System.String" />
          <Parameter Name="type" Type="System.Type" />
          <Parameter Name="attributes" Type="System.Reflection.FieldAttributes" />
        </Parameters>
      </Method>
      <Method Name="DefineField" Return_type="System.Reflection.Emit.FieldBuilder">
        <Parameters>
          <Parameter Name="fieldName" Type="System.String" />
          <Parameter Name="type" Type="System.Type" />
          <Parameter Name="requiredCustomModifiers" Type="System.Type[]" />
          <Parameter Name="optionalCustomModifiers" Type="System.Type[]" />
          <Parameter Name="attributes" Type="System.Reflection.FieldAttributes" />
        </Parameters>
      </Method>
      <Method Name="DefineInitializedData" Return_type="System.Reflection.Emit.FieldBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="data" Type="System.Byte[]" />
          <Parameter Name="attributes" Type="System.Reflection.FieldAttributes" />
        </Parameters>
      </Method>
      <Method Name="DefineUninitializedData" Return_type="System.Reflection.Emit.FieldBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="size" Type="System.Int32" />
          <Parameter Name="attributes" Type="System.Reflection.FieldAttributes" />
        </Parameters>
      </Method>
      <Method Name="DefineProperty" Return_type="System.Reflection.Emit.PropertyBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="attributes" Type="System.Reflection.PropertyAttributes" />
          <Parameter Name="returnType" Type="System.Type" />
          <Parameter Name="parameterTypes" Type="System.Type[]" />
        </Parameters>
      </Method>
      <Method Name="DefineProperty" Return_type="System.Reflection.Emit.PropertyBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="attributes" Type="System.Reflection.PropertyAttributes" />
          <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
          <Parameter Name="returnType" Type="System.Type" />
          <Parameter Name="parameterTypes" Type="System.Type[]" />
        </Parameters>
      </Method>
      <Method Name="DefineProperty" Return_type="System.Reflection.Emit.PropertyBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="attributes" Type="System.Reflection.PropertyAttributes" />
          <Parameter Name="returnType" Type="System.Type" />
          <Parameter Name="returnTypeRequiredCustomModifiers" Type="System.Type[]" />
          <Parameter Name="returnTypeOptionalCustomModifiers" Type="System.Type[]" />
          <Parameter Name="parameterTypes" Type="System.Type[]" />
          <Parameter Name="parameterTypeRequiredCustomModifiers" Type="System.Type[][]" />
          <Parameter Name="parameterTypeOptionalCustomModifiers" Type="System.Type[][]" />
        </Parameters>
      </Method>
      <Method Name="DefineProperty" Return_type="System.Reflection.Emit.PropertyBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="attributes" Type="System.Reflection.PropertyAttributes" />
          <Parameter Name="callingConvention" Type="System.Reflection.CallingConventions" />
          <Parameter Name="returnType" Type="System.Type" />
          <Parameter Name="returnTypeRequiredCustomModifiers" Type="System.Type[]" />
          <Parameter Name="returnTypeOptionalCustomModifiers" Type="System.Type[]" />
          <Parameter Name="parameterTypes" Type="System.Type[]" />
          <Parameter Name="parameterTypeRequiredCustomModifiers" Type="System.Type[][]" />
          <Parameter Name="parameterTypeOptionalCustomModifiers" Type="System.Type[][]" />
        </Parameters>
      </Method>
      <Method Name="DefineEvent" Return_type="System.Reflection.Emit.EventBuilder">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="attributes" Type="System.Reflection.EventAttributes" />
          <Parameter Name="eventtype" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="CreateTypeInfo" Return_type="System.Reflection.TypeInfo">
        <Parameters />
      </Method>
      <Method Name="CreateType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_Size" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_PackingSize" Return_type="System.Reflection.Emit.PackingSize">
        <Parameters />
      </Method>
      <Method Name="SetParent" Return_type="System.Void">
        <Parameters>
          <Parameter Name="parent" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="AddInterfaceImplementation" Return_type="System.Void">
        <Parameters>
          <Parameter Name="interfaceType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="AddDeclarativeSecurity" Return_type="System.Void">
        <Parameters>
          <Parameter Name="action" Type="System.Security.Permissions.SecurityAction" />
          <Parameter Name="pset" Type="System.Security.PermissionSet" />
        </Parameters>
      </Method>
      <Method Name="get_TypeToken" Return_type="System.Reflection.Emit.TypeToken">
        <Parameters />
      </Method>
      <Method Name="SetCustomAttribute" Return_type="System.Void">
        <Parameters>
          <Parameter Name="con" Type="System.Reflection.ConstructorInfo" />
          <Parameter Name="binaryAttribute" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="SetCustomAttribute" Return_type="System.Void">
        <Parameters>
          <Parameter Name="customBuilder" Type="System.Reflection.Emit.CustomAttributeBuilder" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.Emit.GenericTypeParameterBuilder">
    <Properties>
      <Property Name="DeclaringType" Type="System.Type" />
      <Property Name="ReflectedType" Type="System.Type" />
      <Property Name="Name" Type="System.String" />
      <Property Name="Module" Type="System.Reflection.Module" />
      <Property Name="GUID" Type="System.Guid" />
      <Property Name="Assembly" Type="System.Reflection.Assembly" />
      <Property Name="TypeHandle" Type="System.RuntimeTypeHandle" />
      <Property Name="FullName" Type="System.String" />
      <Property Name="Namespace" Type="System.String" />
      <Property Name="AssemblyQualifiedName" Type="System.String" />
      <Property Name="BaseType" Type="System.Type" />
      <Property Name="UnderlyingSystemType" Type="System.Type" />
      <Property Name="IsGenericTypeDefinition" Type="System.Boolean" />
      <Property Name="IsGenericType" Type="System.Boolean" />
      <Property Name="IsGenericParameter" Type="System.Boolean" />
      <Property Name="IsConstructedGenericType" Type="System.Boolean" />
      <Property Name="GenericParameterPosition" Type="System.Int32" />
      <Property Name="ContainsGenericParameters" Type="System.Boolean" />
      <Property Name="GenericParameterAttributes" Type="System.Reflection.GenericParameterAttributes" />
      <Property Name="DeclaringMethod" Type="System.Reflection.MethodBase" />
      <Property Name="GenericTypeParameters" Type="System.Type[]" />
      <Property Name="DeclaredConstructors" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.ConstructorInfo]" />
      <Property Name="DeclaredEvents" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.EventInfo]" />
      <Property Name="DeclaredFields" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.FieldInfo]" />
      <Property Name="DeclaredMembers" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.MemberInfo]" />
      <Property Name="DeclaredMethods" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.MethodInfo]" />
      <Property Name="DeclaredNestedTypes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.TypeInfo]" />
      <Property Name="DeclaredProperties" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.PropertyInfo]" />
      <Property Name="ImplementedInterfaces" Type="System.Collections.Generic.IEnumerable`1[System.Type]" />
      <Property Name="MemberType" Type="System.Reflection.MemberTypes" />
      <Property Name="StructLayoutAttribute" Type="System.Runtime.InteropServices.StructLayoutAttribute" />
      <Property Name="TypeInitializer" Type="System.Reflection.ConstructorInfo" />
      <Property Name="IsNested" Type="System.Boolean" />
      <Property Name="Attributes" Type="System.Reflection.TypeAttributes" />
      <Property Name="IsVisible" Type="System.Boolean" />
      <Property Name="IsNotPublic" Type="System.Boolean" />
      <Property Name="IsPublic" Type="System.Boolean" />
      <Property Name="IsNestedPublic" Type="System.Boolean" />
      <Property Name="IsNestedPrivate" Type="System.Boolean" />
      <Property Name="IsNestedFamily" Type="System.Boolean" />
      <Property Name="IsNestedAssembly" Type="System.Boolean" />
      <Property Name="IsNestedFamANDAssem" Type="System.Boolean" />
      <Property Name="IsNestedFamORAssem" Type="System.Boolean" />
      <Property Name="IsAutoLayout" Type="System.Boolean" />
      <Property Name="IsLayoutSequential" Type="System.Boolean" />
      <Property Name="IsExplicitLayout" Type="System.Boolean" />
      <Property Name="IsClass" Type="System.Boolean" />
      <Property Name="IsInterface" Type="System.Boolean" />
      <Property Name="IsValueType" Type="System.Boolean" />
      <Property Name="IsAbstract" Type="System.Boolean" />
      <Property Name="IsSealed" Type="System.Boolean" />
      <Property Name="IsEnum" Type="System.Boolean" />
      <Property Name="IsSpecialName" Type="System.Boolean" />
      <Property Name="IsImport" Type="System.Boolean" />
      <Property Name="IsSerializable" Type="System.Boolean" />
      <Property Name="IsAnsiClass" Type="System.Boolean" />
      <Property Name="IsUnicodeClass" Type="System.Boolean" />
      <Property Name="IsAutoClass" Type="System.Boolean" />
      <Property Name="IsArray" Type="System.Boolean" />
      <Property Name="IsByRef" Type="System.Boolean" />
      <Property Name="IsPointer" Type="System.Boolean" />
      <Property Name="IsPrimitive" Type="System.Boolean" />
      <Property Name="IsCOMObject" Type="System.Boolean" />
      <Property Name="HasElementType" Type="System.Boolean" />
      <Property Name="IsContextful" Type="System.Boolean" />
      <Property Name="IsMarshalByRef" Type="System.Boolean" />
      <Property Name="GenericTypeArguments" Type="System.Type[]" />
      <Property Name="IsSecurityCritical" Type="System.Boolean" />
      <Property Name="IsSecuritySafeCritical" Type="System.Boolean" />
      <Property Name="IsSecurityTransparent" Type="System.Boolean" />
      <Property Name="CustomAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]" />
      <Property Name="MetadataToken" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="IsAssignableFrom" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="typeInfo" Type="System.Reflection.TypeInfo" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_DeclaringType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_ReflectedType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Module" Return_type="System.Reflection.Module">
        <Parameters />
      </Method>
      <Method Name="MakePointerType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="MakeByRefType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="MakeArrayType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="MakeArrayType" Return_type="System.Type">
        <Parameters>
          <Parameter Name="rank" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_GUID" Return_type="System.Guid">
        <Parameters />
      </Method>
      <Method Name="InvokeMember" Return_type="System.Object">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="binder" Type="System.Reflection.Binder" />
          <Parameter Name="target" Type="System.Object" />
          <Parameter Name="args" Type="System.Object[]" />
          <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
          <Parameter Name="namedParameters" Type="System.String[]" />
        </Parameters>
      </Method>
      <Method Name="get_Assembly" Return_type="System.Reflection.Assembly">
        <Parameters />
      </Method>
      <Method Name="get_TypeHandle" Return_type="System.RuntimeTypeHandle">
        <Parameters />
      </Method>
      <Method Name="get_FullName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Namespace" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_AssemblyQualifiedName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_BaseType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="GetConstructors" Return_type="System.Reflection.ConstructorInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetMethods" Return_type="System.Reflection.MethodInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetField" Return_type="System.Reflection.FieldInfo">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetFields" Return_type="System.Reflection.FieldInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetInterface" Return_type="System.Type">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="ignoreCase" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetInterfaces" Return_type="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="GetEvent" Return_type="System.Reflection.EventInfo">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetEvents" Return_type="System.Reflection.EventInfo[]">
        <Parameters />
      </Method>
      <Method Name="GetProperties" Return_type="System.Reflection.PropertyInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetNestedTypes" Return_type="System.Type[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetNestedType" Return_type="System.Type">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetMember" Return_type="System.Reflection.MemberInfo[]">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="type" Type="System.Reflection.MemberTypes" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetInterfaceMap" Return_type="System.Reflection.InterfaceMapping">
        <Parameters>
          <Parameter Name="interfaceType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetEvents" Return_type="System.Reflection.EventInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetMembers" Return_type="System.Reflection.MemberInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetElementType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_UnderlyingSystemType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="GetGenericArguments" Return_type="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="get_IsGenericTypeDefinition" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsGenericType" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsGenericParameter" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsConstructedGenericType" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_GenericParameterPosition" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_ContainsGenericParameters" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_GenericParameterAttributes" Return_type="System.Reflection.GenericParameterAttributes">
        <Parameters />
      </Method>
      <Method Name="get_DeclaringMethod" Return_type="System.Reflection.MethodBase">
        <Parameters />
      </Method>
      <Method Name="GetGenericTypeDefinition" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="MakeGenericType" Return_type="System.Type">
        <Parameters>
          <Parameter Name="typeArguments" Type="System.Type[]" />
        </Parameters>
      </Method>
      <Method Name="IsAssignableFrom" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="c" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="IsSubclassOf" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="c" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Object[]">
        <Parameters>
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Object[]">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="IsDefined" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="SetCustomAttribute" Return_type="System.Void">
        <Parameters>
          <Parameter Name="con" Type="System.Reflection.ConstructorInfo" />
          <Parameter Name="binaryAttribute" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="SetCustomAttribute" Return_type="System.Void">
        <Parameters>
          <Parameter Name="customBuilder" Type="System.Reflection.Emit.CustomAttributeBuilder" />
        </Parameters>
      </Method>
      <Method Name="SetBaseTypeConstraint" Return_type="System.Void">
        <Parameters>
          <Parameter Name="baseTypeConstraint" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="SetInterfaceConstraints" Return_type="System.Void">
        <Parameters>
          <Parameter Name="interfaceConstraints" Type="System.Type[]" />
        </Parameters>
      </Method>
      <Method Name="SetGenericParameterAttributes" Return_type="System.Void">
        <Parameters>
          <Parameter Name="genericParameterAttributes" Type="System.Reflection.GenericParameterAttributes" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.Emit.EnumBuilder">
    <Properties>
      <Property Name="TypeToken" Type="System.Reflection.Emit.TypeToken" />
      <Property Name="UnderlyingField" Type="System.Reflection.Emit.FieldBuilder" />
      <Property Name="Name" Type="System.String" />
      <Property Name="GUID" Type="System.Guid" />
      <Property Name="Module" Type="System.Reflection.Module" />
      <Property Name="Assembly" Type="System.Reflection.Assembly" />
      <Property Name="TypeHandle" Type="System.RuntimeTypeHandle" />
      <Property Name="FullName" Type="System.String" />
      <Property Name="AssemblyQualifiedName" Type="System.String" />
      <Property Name="Namespace" Type="System.String" />
      <Property Name="BaseType" Type="System.Type" />
      <Property Name="IsConstructedGenericType" Type="System.Boolean" />
      <Property Name="UnderlyingSystemType" Type="System.Type" />
      <Property Name="DeclaringType" Type="System.Type" />
      <Property Name="ReflectedType" Type="System.Type" />
      <Property Name="GenericTypeParameters" Type="System.Type[]" />
      <Property Name="DeclaredConstructors" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.ConstructorInfo]" />
      <Property Name="DeclaredEvents" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.EventInfo]" />
      <Property Name="DeclaredFields" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.FieldInfo]" />
      <Property Name="DeclaredMembers" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.MemberInfo]" />
      <Property Name="DeclaredMethods" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.MethodInfo]" />
      <Property Name="DeclaredNestedTypes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.TypeInfo]" />
      <Property Name="DeclaredProperties" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.PropertyInfo]" />
      <Property Name="ImplementedInterfaces" Type="System.Collections.Generic.IEnumerable`1[System.Type]" />
      <Property Name="MemberType" Type="System.Reflection.MemberTypes" />
      <Property Name="DeclaringMethod" Type="System.Reflection.MethodBase" />
      <Property Name="StructLayoutAttribute" Type="System.Runtime.InteropServices.StructLayoutAttribute" />
      <Property Name="TypeInitializer" Type="System.Reflection.ConstructorInfo" />
      <Property Name="IsNested" Type="System.Boolean" />
      <Property Name="Attributes" Type="System.Reflection.TypeAttributes" />
      <Property Name="GenericParameterAttributes" Type="System.Reflection.GenericParameterAttributes" />
      <Property Name="IsVisible" Type="System.Boolean" />
      <Property Name="IsNotPublic" Type="System.Boolean" />
      <Property Name="IsPublic" Type="System.Boolean" />
      <Property Name="IsNestedPublic" Type="System.Boolean" />
      <Property Name="IsNestedPrivate" Type="System.Boolean" />
      <Property Name="IsNestedFamily" Type="System.Boolean" />
      <Property Name="IsNestedAssembly" Type="System.Boolean" />
      <Property Name="IsNestedFamANDAssem" Type="System.Boolean" />
      <Property Name="IsNestedFamORAssem" Type="System.Boolean" />
      <Property Name="IsAutoLayout" Type="System.Boolean" />
      <Property Name="IsLayoutSequential" Type="System.Boolean" />
      <Property Name="IsExplicitLayout" Type="System.Boolean" />
      <Property Name="IsClass" Type="System.Boolean" />
      <Property Name="IsInterface" Type="System.Boolean" />
      <Property Name="IsValueType" Type="System.Boolean" />
      <Property Name="IsAbstract" Type="System.Boolean" />
      <Property Name="IsSealed" Type="System.Boolean" />
      <Property Name="IsEnum" Type="System.Boolean" />
      <Property Name="IsSpecialName" Type="System.Boolean" />
      <Property Name="IsImport" Type="System.Boolean" />
      <Property Name="IsSerializable" Type="System.Boolean" />
      <Property Name="IsAnsiClass" Type="System.Boolean" />
      <Property Name="IsUnicodeClass" Type="System.Boolean" />
      <Property Name="IsAutoClass" Type="System.Boolean" />
      <Property Name="IsArray" Type="System.Boolean" />
      <Property Name="IsGenericType" Type="System.Boolean" />
      <Property Name="IsGenericTypeDefinition" Type="System.Boolean" />
      <Property Name="IsGenericParameter" Type="System.Boolean" />
      <Property Name="GenericParameterPosition" Type="System.Int32" />
      <Property Name="ContainsGenericParameters" Type="System.Boolean" />
      <Property Name="IsByRef" Type="System.Boolean" />
      <Property Name="IsPointer" Type="System.Boolean" />
      <Property Name="IsPrimitive" Type="System.Boolean" />
      <Property Name="IsCOMObject" Type="System.Boolean" />
      <Property Name="HasElementType" Type="System.Boolean" />
      <Property Name="IsContextful" Type="System.Boolean" />
      <Property Name="IsMarshalByRef" Type="System.Boolean" />
      <Property Name="GenericTypeArguments" Type="System.Type[]" />
      <Property Name="IsSecurityCritical" Type="System.Boolean" />
      <Property Name="IsSecuritySafeCritical" Type="System.Boolean" />
      <Property Name="IsSecurityTransparent" Type="System.Boolean" />
      <Property Name="CustomAttributes" Type="System.Collections.Generic.IEnumerable`1[System.Reflection.CustomAttributeData]" />
      <Property Name="MetadataToken" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="IsAssignableFrom" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="typeInfo" Type="System.Reflection.TypeInfo" />
        </Parameters>
      </Method>
      <Method Name="DefineLiteral" Return_type="System.Reflection.Emit.FieldBuilder">
        <Parameters>
          <Parameter Name="literalName" Type="System.String" />
          <Parameter Name="literalValue" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="CreateTypeInfo" Return_type="System.Reflection.TypeInfo">
        <Parameters />
      </Method>
      <Method Name="CreateType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_TypeToken" Return_type="System.Reflection.Emit.TypeToken">
        <Parameters />
      </Method>
      <Method Name="get_UnderlyingField" Return_type="System.Reflection.Emit.FieldBuilder">
        <Parameters />
      </Method>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_GUID" Return_type="System.Guid">
        <Parameters />
      </Method>
      <Method Name="InvokeMember" Return_type="System.Object">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="invokeAttr" Type="System.Reflection.BindingFlags" />
          <Parameter Name="binder" Type="System.Reflection.Binder" />
          <Parameter Name="target" Type="System.Object" />
          <Parameter Name="args" Type="System.Object[]" />
          <Parameter Name="modifiers" Type="System.Reflection.ParameterModifier[]" />
          <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
          <Parameter Name="namedParameters" Type="System.String[]" />
        </Parameters>
      </Method>
      <Method Name="get_Module" Return_type="System.Reflection.Module">
        <Parameters />
      </Method>
      <Method Name="get_Assembly" Return_type="System.Reflection.Assembly">
        <Parameters />
      </Method>
      <Method Name="get_TypeHandle" Return_type="System.RuntimeTypeHandle">
        <Parameters />
      </Method>
      <Method Name="get_FullName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_AssemblyQualifiedName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Namespace" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_BaseType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="GetConstructors" Return_type="System.Reflection.ConstructorInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetMethods" Return_type="System.Reflection.MethodInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetField" Return_type="System.Reflection.FieldInfo">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetFields" Return_type="System.Reflection.FieldInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetInterface" Return_type="System.Type">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="ignoreCase" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetInterfaces" Return_type="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="GetEvent" Return_type="System.Reflection.EventInfo">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetEvents" Return_type="System.Reflection.EventInfo[]">
        <Parameters />
      </Method>
      <Method Name="GetProperties" Return_type="System.Reflection.PropertyInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetNestedTypes" Return_type="System.Type[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetNestedType" Return_type="System.Type">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetMember" Return_type="System.Reflection.MemberInfo[]">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="type" Type="System.Reflection.MemberTypes" />
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetMembers" Return_type="System.Reflection.MemberInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="GetInterfaceMap" Return_type="System.Reflection.InterfaceMapping">
        <Parameters>
          <Parameter Name="interfaceType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetEvents" Return_type="System.Reflection.EventInfo[]">
        <Parameters>
          <Parameter Name="bindingAttr" Type="System.Reflection.BindingFlags" />
        </Parameters>
      </Method>
      <Method Name="get_IsConstructedGenericType" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetElementType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="GetEnumUnderlyingType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_UnderlyingSystemType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Object[]">
        <Parameters>
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetCustomAttributes" Return_type="System.Object[]">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="SetCustomAttribute" Return_type="System.Void">
        <Parameters>
          <Parameter Name="con" Type="System.Reflection.ConstructorInfo" />
          <Parameter Name="binaryAttribute" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="SetCustomAttribute" Return_type="System.Void">
        <Parameters>
          <Parameter Name="customBuilder" Type="System.Reflection.Emit.CustomAttributeBuilder" />
        </Parameters>
      </Method>
      <Method Name="get_DeclaringType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_ReflectedType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="IsDefined" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="attributeType" Type="System.Type" />
          <Parameter Name="inherit" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="MakePointerType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="MakeByRefType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="MakeArrayType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="MakeArrayType" Return_type="System.Type">
        <Parameters>
          <Parameter Name="rank" Type="System.Int32" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Reflection.Emit.UnmanagedMarshal">
    <Properties>
      <Property Name="GetUnmanagedType" Type="System.Runtime.InteropServices.UnmanagedType" />
      <Property Name="IIDGuid" Type="System.Guid" />
      <Property Name="ElementCount" Type="System.Int32" />
      <Property Name="BaseType" Type="System.Runtime.InteropServices.UnmanagedType" />
    </Properties>
    <Methods>
      <Method Name="DefineUnmanagedMarshal" Return_type="System.Reflection.Emit.UnmanagedMarshal">
        <Parameters>
          <Parameter Name="unmanagedType" Type="System.Runtime.InteropServices.UnmanagedType" />
        </Parameters>
      </Method>
      <Method Name="DefineByValTStr" Return_type="System.Reflection.Emit.UnmanagedMarshal">
        <Parameters>
          <Parameter Name="elemCount" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="DefineSafeArray" Return_type="System.Reflection.Emit.UnmanagedMarshal">
        <Parameters>
          <Parameter Name="elemType" Type="System.Runtime.InteropServices.UnmanagedType" />
        </Parameters>
      </Method>
      <Method Name="DefineByValArray" Return_type="System.Reflection.Emit.UnmanagedMarshal">
        <Parameters>
          <Parameter Name="elemCount" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="DefineLPArray" Return_type="System.Reflection.Emit.UnmanagedMarshal">
        <Parameters>
          <Parameter Name="elemType" Type="System.Runtime.InteropServices.UnmanagedType" />
        </Parameters>
      </Method>
      <Method Name="get_GetUnmanagedType" Return_type="System.Runtime.InteropServices.UnmanagedType">
        <Parameters />
      </Method>
      <Method Name="get_IIDGuid" Return_type="System.Guid">
        <Parameters />
      </Method>
      <Method Name="get_ElementCount" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_BaseType" Return_type="System.Runtime.InteropServices.UnmanagedType">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Deployment.Internal.InternalApplicationIdentityHelper">
    <Properties />
    <Methods>
      <Method Name="GetInternalAppId" Return_type="System.Object">
        <Parameters>
          <Parameter Name="id" Type="System.ApplicationIdentity" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Deployment.Internal.InternalActivationContextHelper">
    <Properties />
    <Methods>
      <Method Name="GetActivationContextData" Return_type="System.Object">
        <Parameters>
          <Parameter Name="appInfo" Type="System.ActivationContext" />
        </Parameters>
      </Method>
      <Method Name="GetApplicationComponentManifest" Return_type="System.Object">
        <Parameters>
          <Parameter Name="appInfo" Type="System.ActivationContext" />
        </Parameters>
      </Method>
      <Method Name="GetDeploymentComponentManifest" Return_type="System.Object">
        <Parameters>
          <Parameter Name="appInfo" Type="System.ActivationContext" />
        </Parameters>
      </Method>
      <Method Name="PrepareForExecution" Return_type="System.Void">
        <Parameters>
          <Parameter Name="appInfo" Type="System.ActivationContext" />
        </Parameters>
      </Method>
      <Method Name="IsFirstRun" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="appInfo" Type="System.ActivationContext" />
        </Parameters>
      </Method>
      <Method Name="GetApplicationManifestBytes" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="appInfo" Type="System.ActivationContext" />
        </Parameters>
      </Method>
      <Method Name="GetDeploymentManifestBytes" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="appInfo" Type="System.ActivationContext" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.MemoryFailPoint">
    <Properties />
    <Methods>
      <Method Name="Dispose" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.GCSettings">
    <Properties>
      <Property Name="LatencyMode" Type="System.Runtime.GCLatencyMode" />
      <Property Name="LargeObjectHeapCompactionMode" Type="System.Runtime.GCLargeObjectHeapCompactionMode" />
      <Property Name="IsServerGC" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_LatencyMode" Return_type="System.Runtime.GCLatencyMode">
        <Parameters />
      </Method>
      <Method Name="set_LatencyMode" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Runtime.GCLatencyMode" />
        </Parameters>
      </Method>
      <Method Name="get_LargeObjectHeapCompactionMode" Return_type="System.Runtime.GCLargeObjectHeapCompactionMode">
        <Parameters />
      </Method>
      <Method Name="set_LargeObjectHeapCompactionMode" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Runtime.GCLargeObjectHeapCompactionMode" />
        </Parameters>
      </Method>
      <Method Name="get_IsServerGC" Return_type="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.AssemblyTargetedPatchBandAttribute">
    <Properties>
      <Property Name="TargetedPatchBand" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_TargetedPatchBand" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.TargetedPatchingOptOutAttribute">
    <Properties>
      <Property Name="Reason" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Reason" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.ProfileOptimization">
    <Properties />
    <Methods>
      <Method Name="SetProfileRoot" Return_type="System.Void">
        <Parameters>
          <Parameter Name="directoryPath" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="StartProfile" Return_type="System.Void">
        <Parameters>
          <Parameter Name="profile" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.DesignerServices.WindowsRuntimeDesignerContext">
    <Properties>
      <Property Name="Name" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="InitializeSharedContext" Return_type="System.Void">
        <Parameters>
          <Parameter Name="paths" Type="System.Collections.Generic.IEnumerable`1[System.String]" />
        </Parameters>
      </Method>
      <Method Name="SetIterationContext" Return_type="System.Void">
        <Parameters>
          <Parameter Name="context" Type="System.Runtime.DesignerServices.WindowsRuntimeDesignerContext" />
        </Parameters>
      </Method>
      <Method Name="GetAssembly" Return_type="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetType" Return_type="System.Type">
        <Parameters>
          <Parameter Name="typeName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Versioning.ComponentGuaranteesAttribute">
    <Properties>
      <Property Name="Guarantees" Type="System.Runtime.Versioning.ComponentGuaranteesOptions" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Guarantees" Return_type="System.Runtime.Versioning.ComponentGuaranteesOptions">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Versioning.ResourceConsumptionAttribute">
    <Properties>
      <Property Name="ResourceScope" Type="System.Runtime.Versioning.ResourceScope" />
      <Property Name="ConsumptionScope" Type="System.Runtime.Versioning.ResourceScope" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_ResourceScope" Return_type="System.Runtime.Versioning.ResourceScope">
        <Parameters />
      </Method>
      <Method Name="get_ConsumptionScope" Return_type="System.Runtime.Versioning.ResourceScope">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Versioning.ResourceExposureAttribute">
    <Properties>
      <Property Name="ResourceExposureLevel" Type="System.Runtime.Versioning.ResourceScope" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_ResourceExposureLevel" Return_type="System.Runtime.Versioning.ResourceScope">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Versioning.VersioningHelper">
    <Properties />
    <Methods>
      <Method Name="MakeVersionSafeName" Return_type="System.String">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="from" Type="System.Runtime.Versioning.ResourceScope" />
          <Parameter Name="to" Type="System.Runtime.Versioning.ResourceScope" />
          <Parameter Name="type" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="MakeVersionSafeName" Return_type="System.String">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="from" Type="System.Runtime.Versioning.ResourceScope" />
          <Parameter Name="to" Type="System.Runtime.Versioning.ResourceScope" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Versioning.TargetFrameworkAttribute">
    <Properties>
      <Property Name="FrameworkName" Type="System.String" />
      <Property Name="FrameworkDisplayName" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_FrameworkName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_FrameworkDisplayName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_FrameworkDisplayName" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Versioning.CompatibilitySwitch">
    <Properties />
    <Methods>
      <Method Name="IsEnabled" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="compatibilitySwitchName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetValue" Return_type="System.String">
        <Parameters>
          <Parameter Name="compatibilitySwitchName" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.ConstrainedExecution.CriticalFinalizerObject">
    <Properties />
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.ConstrainedExecution.ReliabilityContractAttribute">
    <Properties>
      <Property Name="ConsistencyGuarantee" Type="System.Runtime.ConstrainedExecution.Consistency" />
      <Property Name="Cer" Type="System.Runtime.ConstrainedExecution.Cer" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_ConsistencyGuarantee" Return_type="System.Runtime.ConstrainedExecution.Consistency">
        <Parameters />
      </Method>
      <Method Name="get_Cer" Return_type="System.Runtime.ConstrainedExecution.Cer">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.ConstrainedExecution.PrePrepareMethodAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.Serialization.FormatterConverter">
    <Properties />
    <Methods>
      <Method Name="Convert" Return_type="System.Object">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="type" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="Convert" Return_type="System.Object">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="typeCode" Type="System.TypeCode" />
        </Parameters>
      </Method>
      <Method Name="ToBoolean" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="ToChar" Return_type="System.Char">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="ToSByte" Return_type="System.SByte">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="ToByte" Return_type="System.Byte">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="ToInt16" Return_type="System.Int16">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="ToUInt16" Return_type="System.UInt16">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="ToInt32" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="ToUInt32" Return_type="System.UInt32">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="ToInt64" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="ToUInt64" Return_type="System.UInt64">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="ToSingle" Return_type="System.Single">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="ToDouble" Return_type="System.Double">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="ToDecimal" Return_type="System.Decimal">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="ToDateTime" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Serialization.FormatterServices">
    <Properties />
    <Methods>
      <Method Name="GetSerializableMembers" Return_type="System.Reflection.MemberInfo[]">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetSerializableMembers" Return_type="System.Reflection.MemberInfo[]">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
      <Method Name="CheckTypeSecurity" Return_type="System.Void">
        <Parameters>
          <Parameter Name="t" Type="System.Type" />
          <Parameter Name="securityLevel" Type="System.Runtime.Serialization.Formatters.TypeFilterLevel" />
        </Parameters>
      </Method>
      <Method Name="GetUninitializedObject" Return_type="System.Object">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetSafeUninitializedObject" Return_type="System.Object">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="PopulateObjectMembers" Return_type="System.Object">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
          <Parameter Name="members" Type="System.Reflection.MemberInfo[]" />
          <Parameter Name="data" Type="System.Object[]" />
        </Parameters>
      </Method>
      <Method Name="GetObjectData" Return_type="System.Object[]">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
          <Parameter Name="members" Type="System.Reflection.MemberInfo[]" />
        </Parameters>
      </Method>
      <Method Name="GetSurrogateForCyclicalReference" Return_type="System.Runtime.Serialization.ISerializationSurrogate">
        <Parameters>
          <Parameter Name="innerSurrogate" Type="System.Runtime.Serialization.ISerializationSurrogate" />
        </Parameters>
      </Method>
      <Method Name="GetTypeFromAssembly" Return_type="System.Type">
        <Parameters>
          <Parameter Name="assem" Type="System.Reflection.Assembly" />
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Serialization.OptionalFieldAttribute">
    <Properties>
      <Property Name="VersionAdded" Type="System.Int32" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_VersionAdded" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_VersionAdded" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Serialization.OnSerializingAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.Serialization.OnSerializedAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.Serialization.OnDeserializingAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.Serialization.OnDeserializedAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.Serialization.SerializationBinder">
    <Properties />
    <Methods>
      <Method Name="BindToName" Return_type="System.Void">
        <Parameters>
          <Parameter Name="serializedType" Type="System.Type" />
          <Parameter Name="assemblyName" Type="System.String&amp;" />
          <Parameter Name="typeName" Type="System.String&amp;" />
        </Parameters>
      </Method>
      <Method Name="BindToType" Return_type="System.Type">
        <Parameters>
          <Parameter Name="assemblyName" Type="System.String" />
          <Parameter Name="typeName" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Serialization.SerializationException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.Serialization.SerializationInfo">
    <Properties>
      <Property Name="FullTypeName" Type="System.String" />
      <Property Name="AssemblyName" Type="System.String" />
      <Property Name="MemberCount" Type="System.Int32" />
      <Property Name="ObjectType" Type="System.Type" />
      <Property Name="IsFullTypeNameSetExplicit" Type="System.Boolean" />
      <Property Name="IsAssemblyNameSetExplicit" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_FullTypeName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_FullTypeName" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_AssemblyName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_AssemblyName" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="SetType" Return_type="System.Void">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="get_MemberCount" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_ObjectType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_IsFullTypeNameSetExplicit" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsAssemblyNameSetExplicit" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetEnumerator" Return_type="System.Runtime.Serialization.SerializationInfoEnumerator">
        <Parameters />
      </Method>
      <Method Name="AddValue" Return_type="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="type" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="AddValue" Return_type="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="AddValue" Return_type="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="AddValue" Return_type="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="AddValue" Return_type="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.SByte" />
        </Parameters>
      </Method>
      <Method Name="AddValue" Return_type="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.Byte" />
        </Parameters>
      </Method>
      <Method Name="AddValue" Return_type="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.Int16" />
        </Parameters>
      </Method>
      <Method Name="AddValue" Return_type="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.UInt16" />
        </Parameters>
      </Method>
      <Method Name="AddValue" Return_type="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="AddValue" Return_type="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.UInt32" />
        </Parameters>
      </Method>
      <Method Name="AddValue" Return_type="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="AddValue" Return_type="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.UInt64" />
        </Parameters>
      </Method>
      <Method Name="AddValue" Return_type="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.Single" />
        </Parameters>
      </Method>
      <Method Name="AddValue" Return_type="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="AddValue" Return_type="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.Decimal" />
        </Parameters>
      </Method>
      <Method Name="AddValue" Return_type="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="value" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="GetValue" Return_type="System.Object">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="type" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetBoolean" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetChar" Return_type="System.Char">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetSByte" Return_type="System.SByte">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetByte" Return_type="System.Byte">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetInt16" Return_type="System.Int16">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetUInt16" Return_type="System.UInt16">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetInt32" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetUInt32" Return_type="System.UInt32">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetInt64" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetUInt64" Return_type="System.UInt64">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetSingle" Return_type="System.Single">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetDouble" Return_type="System.Double">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetDecimal" Return_type="System.Decimal">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetDateTime" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetString" Return_type="System.String">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Serialization.SerializationInfoEnumerator">
    <Properties>
      <Property Name="Current" Type="System.Runtime.Serialization.SerializationEntry" />
      <Property Name="Name" Type="System.String" />
      <Property Name="Value" Type="System.Object" />
      <Property Name="ObjectType" Type="System.Type" />
    </Properties>
    <Methods>
      <Method Name="MoveNext" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_Current" Return_type="System.Runtime.Serialization.SerializationEntry">
        <Parameters />
      </Method>
      <Method Name="Reset" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_ObjectType" Return_type="System.Type">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Serialization.Formatter">
    <Properties>
      <Property Name="SurrogateSelector" Type="System.Runtime.Serialization.ISurrogateSelector" />
      <Property Name="Binder" Type="System.Runtime.Serialization.SerializationBinder" />
      <Property Name="Context" Type="System.Runtime.Serialization.StreamingContext" />
    </Properties>
    <Methods>
      <Method Name="Deserialize" Return_type="System.Object">
        <Parameters>
          <Parameter Name="serializationStream" Type="System.IO.Stream" />
        </Parameters>
      </Method>
      <Method Name="Serialize" Return_type="System.Void">
        <Parameters>
          <Parameter Name="serializationStream" Type="System.IO.Stream" />
          <Parameter Name="graph" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="get_SurrogateSelector" Return_type="System.Runtime.Serialization.ISurrogateSelector">
        <Parameters />
      </Method>
      <Method Name="set_SurrogateSelector" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Runtime.Serialization.ISurrogateSelector" />
        </Parameters>
      </Method>
      <Method Name="get_Binder" Return_type="System.Runtime.Serialization.SerializationBinder">
        <Parameters />
      </Method>
      <Method Name="set_Binder" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Runtime.Serialization.SerializationBinder" />
        </Parameters>
      </Method>
      <Method Name="get_Context" Return_type="System.Runtime.Serialization.StreamingContext">
        <Parameters />
      </Method>
      <Method Name="set_Context" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Serialization.ObjectIDGenerator">
    <Properties />
    <Methods>
      <Method Name="GetId" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
          <Parameter Name="firstTime" Type="System.Boolean&amp;" />
        </Parameters>
      </Method>
      <Method Name="HasId" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
          <Parameter Name="firstTime" Type="System.Boolean&amp;" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Serialization.ObjectManager">
    <Properties />
    <Methods>
      <Method Name="RecordFixup" Return_type="System.Void">
        <Parameters>
          <Parameter Name="objectToBeFixed" Type="System.Int64" />
          <Parameter Name="member" Type="System.Reflection.MemberInfo" />
          <Parameter Name="objectRequired" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="RecordDelayedFixup" Return_type="System.Void">
        <Parameters>
          <Parameter Name="objectToBeFixed" Type="System.Int64" />
          <Parameter Name="memberName" Type="System.String" />
          <Parameter Name="objectRequired" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="RecordArrayElementFixup" Return_type="System.Void">
        <Parameters>
          <Parameter Name="arrayToBeFixed" Type="System.Int64" />
          <Parameter Name="indices" Type="System.Int32[]" />
          <Parameter Name="objectRequired" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="GetObject" Return_type="System.Object">
        <Parameters>
          <Parameter Name="objectID" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="RegisterObject" Return_type="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
          <Parameter Name="objectID" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="RegisterObject" Return_type="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
          <Parameter Name="objectID" Type="System.Int64" />
          <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        </Parameters>
      </Method>
      <Method Name="RegisterObject" Return_type="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
          <Parameter Name="objectID" Type="System.Int64" />
          <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
          <Parameter Name="idOfContainingObj" Type="System.Int64" />
          <Parameter Name="member" Type="System.Reflection.MemberInfo" />
        </Parameters>
      </Method>
      <Method Name="RegisterObject" Return_type="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
          <Parameter Name="objectID" Type="System.Int64" />
          <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
          <Parameter Name="idOfContainingObj" Type="System.Int64" />
          <Parameter Name="member" Type="System.Reflection.MemberInfo" />
          <Parameter Name="arrayIndex" Type="System.Int32[]" />
        </Parameters>
      </Method>
      <Method Name="DoFixups" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="RecordArrayElementFixup" Return_type="System.Void">
        <Parameters>
          <Parameter Name="arrayToBeFixed" Type="System.Int64" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="objectRequired" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="RaiseDeserializationEvent" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="RaiseOnDeserializingEvent" Return_type="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Serialization.SafeSerializationEventArgs">
    <Properties>
      <Property Name="StreamingContext" Type="System.Runtime.Serialization.StreamingContext" />
    </Properties>
    <Methods>
      <Method Name="AddSerializedState" Return_type="System.Void">
        <Parameters>
          <Parameter Name="serializedState" Type="System.Runtime.Serialization.ISafeSerializationData" />
        </Parameters>
      </Method>
      <Method Name="get_StreamingContext" Return_type="System.Runtime.Serialization.StreamingContext">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Serialization.SerializationObjectManager">
    <Properties />
    <Methods>
      <Method Name="RegisterObject" Return_type="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="RaiseOnSerializedEvent" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Serialization.SurrogateSelector">
    <Properties />
    <Methods>
      <Method Name="AddSurrogate" Return_type="System.Void">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
          <Parameter Name="surrogate" Type="System.Runtime.Serialization.ISerializationSurrogate" />
        </Parameters>
      </Method>
      <Method Name="ChainSelector" Return_type="System.Void">
        <Parameters>
          <Parameter Name="selector" Type="System.Runtime.Serialization.ISurrogateSelector" />
        </Parameters>
      </Method>
      <Method Name="GetNextSelector" Return_type="System.Runtime.Serialization.ISurrogateSelector">
        <Parameters />
      </Method>
      <Method Name="GetSurrogate" Return_type="System.Runtime.Serialization.ISerializationSurrogate">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
          <Parameter Name="selector" Type="System.Runtime.Serialization.ISurrogateSelector&amp;" />
        </Parameters>
      </Method>
      <Method Name="RemoveSurrogate" Return_type="System.Void">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Serialization.Formatters.InternalRM">
    <Properties />
    <Methods>
      <Method Name="InfoSoap" Return_type="System.Void">
        <Parameters>
          <Parameter Name="messages" Type="System.Object[]" />
        </Parameters>
      </Method>
      <Method Name="SoapCheckEnabled" Return_type="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Serialization.Formatters.InternalST">
    <Properties />
    <Methods>
      <Method Name="InfoSoap" Return_type="System.Void">
        <Parameters>
          <Parameter Name="messages" Type="System.Object[]" />
        </Parameters>
      </Method>
      <Method Name="SoapCheckEnabled" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Soap" Return_type="System.Void">
        <Parameters>
          <Parameter Name="messages" Type="System.Object[]" />
        </Parameters>
      </Method>
      <Method Name="SoapAssert" Return_type="System.Void">
        <Parameters>
          <Parameter Name="condition" Type="System.Boolean" />
          <Parameter Name="message" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="SerializationSetValue" Return_type="System.Void">
        <Parameters>
          <Parameter Name="fi" Type="System.Reflection.FieldInfo" />
          <Parameter Name="target" Type="System.Object" />
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="LoadAssemblyFromString" Return_type="System.Reflection.Assembly">
        <Parameters>
          <Parameter Name="assemblyString" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Serialization.Formatters.SoapMessage">
    <Properties>
      <Property Name="ParamNames" Type="System.String[]" />
      <Property Name="ParamValues" Type="System.Object[]" />
      <Property Name="ParamTypes" Type="System.Type[]" />
      <Property Name="MethodName" Type="System.String" />
      <Property Name="XmlNameSpace" Type="System.String" />
      <Property Name="Headers" Type="System.Runtime.Remoting.Messaging.Header[]" />
    </Properties>
    <Methods>
      <Method Name="get_ParamNames" Return_type="System.String[]">
        <Parameters />
      </Method>
      <Method Name="set_ParamNames" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String[]" />
        </Parameters>
      </Method>
      <Method Name="get_ParamValues" Return_type="System.Object[]">
        <Parameters />
      </Method>
      <Method Name="set_ParamValues" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Object[]" />
        </Parameters>
      </Method>
      <Method Name="get_ParamTypes" Return_type="System.Type[]">
        <Parameters />
      </Method>
      <Method Name="set_ParamTypes" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Type[]" />
        </Parameters>
      </Method>
      <Method Name="get_MethodName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_MethodName" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_XmlNameSpace" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_XmlNameSpace" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_Headers" Return_type="System.Runtime.Remoting.Messaging.Header[]">
        <Parameters />
      </Method>
      <Method Name="set_Headers" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Runtime.Remoting.Messaging.Header[]" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Serialization.Formatters.SoapFault">
    <Properties>
      <Property Name="FaultCode" Type="System.String" />
      <Property Name="FaultString" Type="System.String" />
      <Property Name="FaultActor" Type="System.String" />
      <Property Name="Detail" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="GetObjectData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
      <Method Name="get_FaultCode" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_FaultCode" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_FaultString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_FaultString" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_FaultActor" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_FaultActor" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_Detail" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="set_Detail" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Serialization.Formatters.ServerFault">
    <Properties>
      <Property Name="ExceptionType" Type="System.String" />
      <Property Name="ExceptionMessage" Type="System.String" />
      <Property Name="StackTrace" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_ExceptionType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_ExceptionType" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_ExceptionMessage" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_ExceptionMessage" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_StackTrace" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_StackTrace" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Serialization.Formatters.Binary.BinaryFormatter">
    <Properties>
      <Property Name="TypeFormat" Type="System.Runtime.Serialization.Formatters.FormatterTypeStyle" />
      <Property Name="AssemblyFormat" Type="System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" />
      <Property Name="FilterLevel" Type="System.Runtime.Serialization.Formatters.TypeFilterLevel" />
      <Property Name="SurrogateSelector" Type="System.Runtime.Serialization.ISurrogateSelector" />
      <Property Name="Binder" Type="System.Runtime.Serialization.SerializationBinder" />
      <Property Name="Context" Type="System.Runtime.Serialization.StreamingContext" />
    </Properties>
    <Methods>
      <Method Name="get_TypeFormat" Return_type="System.Runtime.Serialization.Formatters.FormatterTypeStyle">
        <Parameters />
      </Method>
      <Method Name="set_TypeFormat" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Runtime.Serialization.Formatters.FormatterTypeStyle" />
        </Parameters>
      </Method>
      <Method Name="get_AssemblyFormat" Return_type="System.Runtime.Serialization.Formatters.FormatterAssemblyStyle">
        <Parameters />
      </Method>
      <Method Name="set_AssemblyFormat" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Runtime.Serialization.Formatters.FormatterAssemblyStyle" />
        </Parameters>
      </Method>
      <Method Name="get_FilterLevel" Return_type="System.Runtime.Serialization.Formatters.TypeFilterLevel">
        <Parameters />
      </Method>
      <Method Name="set_FilterLevel" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Runtime.Serialization.Formatters.TypeFilterLevel" />
        </Parameters>
      </Method>
      <Method Name="get_SurrogateSelector" Return_type="System.Runtime.Serialization.ISurrogateSelector">
        <Parameters />
      </Method>
      <Method Name="set_SurrogateSelector" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Runtime.Serialization.ISurrogateSelector" />
        </Parameters>
      </Method>
      <Method Name="get_Binder" Return_type="System.Runtime.Serialization.SerializationBinder">
        <Parameters />
      </Method>
      <Method Name="set_Binder" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Runtime.Serialization.SerializationBinder" />
        </Parameters>
      </Method>
      <Method Name="get_Context" Return_type="System.Runtime.Serialization.StreamingContext">
        <Parameters />
      </Method>
      <Method Name="set_Context" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
      <Method Name="Deserialize" Return_type="System.Object">
        <Parameters>
          <Parameter Name="serializationStream" Type="System.IO.Stream" />
        </Parameters>
      </Method>
      <Method Name="Deserialize" Return_type="System.Object">
        <Parameters>
          <Parameter Name="serializationStream" Type="System.IO.Stream" />
          <Parameter Name="handler" Type="System.Runtime.Remoting.Messaging.HeaderHandler" />
        </Parameters>
      </Method>
      <Method Name="DeserializeMethodResponse" Return_type="System.Object">
        <Parameters>
          <Parameter Name="serializationStream" Type="System.IO.Stream" />
          <Parameter Name="handler" Type="System.Runtime.Remoting.Messaging.HeaderHandler" />
          <Parameter Name="methodCallMessage" Type="System.Runtime.Remoting.Messaging.IMethodCallMessage" />
        </Parameters>
      </Method>
      <Method Name="UnsafeDeserialize" Return_type="System.Object">
        <Parameters>
          <Parameter Name="serializationStream" Type="System.IO.Stream" />
          <Parameter Name="handler" Type="System.Runtime.Remoting.Messaging.HeaderHandler" />
        </Parameters>
      </Method>
      <Method Name="UnsafeDeserializeMethodResponse" Return_type="System.Object">
        <Parameters>
          <Parameter Name="serializationStream" Type="System.IO.Stream" />
          <Parameter Name="handler" Type="System.Runtime.Remoting.Messaging.HeaderHandler" />
          <Parameter Name="methodCallMessage" Type="System.Runtime.Remoting.Messaging.IMethodCallMessage" />
        </Parameters>
      </Method>
      <Method Name="Serialize" Return_type="System.Void">
        <Parameters>
          <Parameter Name="serializationStream" Type="System.IO.Stream" />
          <Parameter Name="graph" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Serialize" Return_type="System.Void">
        <Parameters>
          <Parameter Name="serializationStream" Type="System.IO.Stream" />
          <Parameter Name="graph" Type="System.Object" />
          <Parameter Name="headers" Type="System.Runtime.Remoting.Messaging.Header[]" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.ExceptionServices.FirstChanceExceptionEventArgs">
    <Properties>
      <Property Name="Exception" Type="System.Exception" />
    </Properties>
    <Methods>
      <Method Name="get_Exception" Return_type="System.Exception">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.ExceptionServices.ExceptionDispatchInfo">
    <Properties>
      <Property Name="SourceException" Type="System.Exception" />
    </Properties>
    <Methods>
      <Method Name="Capture" Return_type="System.Runtime.ExceptionServices.ExceptionDispatchInfo">
        <Parameters>
          <Parameter Name="source" Type="System.Exception" />
        </Parameters>
      </Method>
      <Method Name="get_SourceException" Return_type="System.Exception">
        <Parameters />
      </Method>
      <Method Name="Throw" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.ObjRef">
    <Properties>
      <Property Name="URI" Type="System.String" />
      <Property Name="TypeInfo" Type="System.Runtime.Remoting.IRemotingTypeInfo" />
      <Property Name="EnvoyInfo" Type="System.Runtime.Remoting.IEnvoyInfo" />
      <Property Name="ChannelInfo" Type="System.Runtime.Remoting.IChannelInfo" />
    </Properties>
    <Methods>
      <Method Name="GetRealObject" Return_type="System.Object">
        <Parameters>
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
      <Method Name="GetObjectData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
      <Method Name="get_URI" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_URI" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_TypeInfo" Return_type="System.Runtime.Remoting.IRemotingTypeInfo">
        <Parameters />
      </Method>
      <Method Name="set_TypeInfo" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Runtime.Remoting.IRemotingTypeInfo" />
        </Parameters>
      </Method>
      <Method Name="get_EnvoyInfo" Return_type="System.Runtime.Remoting.IEnvoyInfo">
        <Parameters />
      </Method>
      <Method Name="set_EnvoyInfo" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Runtime.Remoting.IEnvoyInfo" />
        </Parameters>
      </Method>
      <Method Name="get_ChannelInfo" Return_type="System.Runtime.Remoting.IChannelInfo">
        <Parameters />
      </Method>
      <Method Name="set_ChannelInfo" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Runtime.Remoting.IChannelInfo" />
        </Parameters>
      </Method>
      <Method Name="IsFromThisProcess" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="IsFromThisAppDomain" Return_type="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.RemotingConfiguration">
    <Properties>
      <Property Name="ApplicationName" Type="System.String" />
      <Property Name="ApplicationId" Type="System.String" />
      <Property Name="ProcessId" Type="System.String" />
      <Property Name="CustomErrorsMode" Type="System.Runtime.Remoting.CustomErrorsModes" />
    </Properties>
    <Methods>
      <Method Name="RegisterWellKnownServiceType" Return_type="System.Void">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
          <Parameter Name="objectUri" Type="System.String" />
          <Parameter Name="mode" Type="System.Runtime.Remoting.WellKnownObjectMode" />
        </Parameters>
      </Method>
      <Method Name="RegisterWellKnownServiceType" Return_type="System.Void">
        <Parameters>
          <Parameter Name="entry" Type="System.Runtime.Remoting.WellKnownServiceTypeEntry" />
        </Parameters>
      </Method>
      <Method Name="Configure" Return_type="System.Void">
        <Parameters>
          <Parameter Name="filename" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Configure" Return_type="System.Void">
        <Parameters>
          <Parameter Name="filename" Type="System.String" />
          <Parameter Name="ensureSecurity" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_ApplicationName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_ApplicationName" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_ApplicationId" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ProcessId" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_CustomErrorsMode" Return_type="System.Runtime.Remoting.CustomErrorsModes">
        <Parameters />
      </Method>
      <Method Name="set_CustomErrorsMode" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Runtime.Remoting.CustomErrorsModes" />
        </Parameters>
      </Method>
      <Method Name="CustomErrorsEnabled" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="isLocalRequest" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="RegisterActivatedServiceType" Return_type="System.Void">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="RegisterActivatedServiceType" Return_type="System.Void">
        <Parameters>
          <Parameter Name="entry" Type="System.Runtime.Remoting.ActivatedServiceTypeEntry" />
        </Parameters>
      </Method>
      <Method Name="RegisterActivatedClientType" Return_type="System.Void">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
          <Parameter Name="appUrl" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="RegisterActivatedClientType" Return_type="System.Void">
        <Parameters>
          <Parameter Name="entry" Type="System.Runtime.Remoting.ActivatedClientTypeEntry" />
        </Parameters>
      </Method>
      <Method Name="RegisterWellKnownClientType" Return_type="System.Void">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
          <Parameter Name="objectUrl" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="RegisterWellKnownClientType" Return_type="System.Void">
        <Parameters>
          <Parameter Name="entry" Type="System.Runtime.Remoting.WellKnownClientTypeEntry" />
        </Parameters>
      </Method>
      <Method Name="GetRegisteredActivatedServiceTypes" Return_type="System.Runtime.Remoting.ActivatedServiceTypeEntry[]">
        <Parameters />
      </Method>
      <Method Name="GetRegisteredWellKnownServiceTypes" Return_type="System.Runtime.Remoting.WellKnownServiceTypeEntry[]">
        <Parameters />
      </Method>
      <Method Name="GetRegisteredActivatedClientTypes" Return_type="System.Runtime.Remoting.ActivatedClientTypeEntry[]">
        <Parameters />
      </Method>
      <Method Name="GetRegisteredWellKnownClientTypes" Return_type="System.Runtime.Remoting.WellKnownClientTypeEntry[]">
        <Parameters />
      </Method>
      <Method Name="IsRemotelyActivatedClientType" Return_type="System.Runtime.Remoting.ActivatedClientTypeEntry">
        <Parameters>
          <Parameter Name="svrType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="IsRemotelyActivatedClientType" Return_type="System.Runtime.Remoting.ActivatedClientTypeEntry">
        <Parameters>
          <Parameter Name="typeName" Type="System.String" />
          <Parameter Name="assemblyName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="IsWellKnownClientType" Return_type="System.Runtime.Remoting.WellKnownClientTypeEntry">
        <Parameters>
          <Parameter Name="svrType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="IsWellKnownClientType" Return_type="System.Runtime.Remoting.WellKnownClientTypeEntry">
        <Parameters>
          <Parameter Name="typeName" Type="System.String" />
          <Parameter Name="assemblyName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="IsActivationAllowed" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="svrType" Type="System.Type" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.TypeEntry">
    <Properties>
      <Property Name="TypeName" Type="System.String" />
      <Property Name="AssemblyName" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_TypeName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_TypeName" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_AssemblyName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_AssemblyName" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.ActivatedClientTypeEntry">
    <Properties>
      <Property Name="ApplicationUrl" Type="System.String" />
      <Property Name="ObjectType" Type="System.Type" />
      <Property Name="ContextAttributes" Type="System.Runtime.Remoting.Contexts.IContextAttribute[]" />
      <Property Name="TypeName" Type="System.String" />
      <Property Name="AssemblyName" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_ApplicationUrl" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ObjectType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_ContextAttributes" Return_type="System.Runtime.Remoting.Contexts.IContextAttribute[]">
        <Parameters />
      </Method>
      <Method Name="set_ContextAttributes" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Runtime.Remoting.Contexts.IContextAttribute[]" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.ActivatedServiceTypeEntry">
    <Properties>
      <Property Name="ObjectType" Type="System.Type" />
      <Property Name="ContextAttributes" Type="System.Runtime.Remoting.Contexts.IContextAttribute[]" />
      <Property Name="TypeName" Type="System.String" />
      <Property Name="AssemblyName" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_ObjectType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_ContextAttributes" Return_type="System.Runtime.Remoting.Contexts.IContextAttribute[]">
        <Parameters />
      </Method>
      <Method Name="set_ContextAttributes" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Runtime.Remoting.Contexts.IContextAttribute[]" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.WellKnownClientTypeEntry">
    <Properties>
      <Property Name="ObjectUrl" Type="System.String" />
      <Property Name="ObjectType" Type="System.Type" />
      <Property Name="ApplicationUrl" Type="System.String" />
      <Property Name="TypeName" Type="System.String" />
      <Property Name="AssemblyName" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_ObjectUrl" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ObjectType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_ApplicationUrl" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_ApplicationUrl" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.WellKnownServiceTypeEntry">
    <Properties>
      <Property Name="ObjectUri" Type="System.String" />
      <Property Name="Mode" Type="System.Runtime.Remoting.WellKnownObjectMode" />
      <Property Name="ObjectType" Type="System.Type" />
      <Property Name="ContextAttributes" Type="System.Runtime.Remoting.Contexts.IContextAttribute[]" />
      <Property Name="TypeName" Type="System.String" />
      <Property Name="AssemblyName" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_ObjectUri" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Mode" Return_type="System.Runtime.Remoting.WellKnownObjectMode">
        <Parameters />
      </Method>
      <Method Name="get_ObjectType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_ContextAttributes" Return_type="System.Runtime.Remoting.Contexts.IContextAttribute[]">
        <Parameters />
      </Method>
      <Method Name="set_ContextAttributes" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Runtime.Remoting.Contexts.IContextAttribute[]" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.RemotingException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.Remoting.ServerException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.Remoting.RemotingTimeoutException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.Remoting.RemotingServices">
    <Properties />
    <Methods>
      <Method Name="IsTransparentProxy" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="proxy" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="IsObjectOutOfContext" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="tp" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="IsObjectOutOfAppDomain" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="tp" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetRealProxy" Return_type="System.Runtime.Remoting.Proxies.RealProxy">
        <Parameters>
          <Parameter Name="proxy" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetSessionIdForMethodMessage" Return_type="System.String">
        <Parameters>
          <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMethodMessage" />
        </Parameters>
      </Method>
      <Method Name="GetLifetimeService" Return_type="System.Object">
        <Parameters>
          <Parameter Name="obj" Type="System.MarshalByRefObject" />
        </Parameters>
      </Method>
      <Method Name="GetObjectUri" Return_type="System.String">
        <Parameters>
          <Parameter Name="obj" Type="System.MarshalByRefObject" />
        </Parameters>
      </Method>
      <Method Name="SetObjectUriForMarshal" Return_type="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.MarshalByRefObject" />
          <Parameter Name="uri" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Marshal" Return_type="System.Runtime.Remoting.ObjRef">
        <Parameters>
          <Parameter Name="Obj" Type="System.MarshalByRefObject" />
        </Parameters>
      </Method>
      <Method Name="Marshal" Return_type="System.Runtime.Remoting.ObjRef">
        <Parameters>
          <Parameter Name="Obj" Type="System.MarshalByRefObject" />
          <Parameter Name="URI" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Marshal" Return_type="System.Runtime.Remoting.ObjRef">
        <Parameters>
          <Parameter Name="Obj" Type="System.MarshalByRefObject" />
          <Parameter Name="ObjURI" Type="System.String" />
          <Parameter Name="RequestedType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetObjectData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
          <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
      <Method Name="Unmarshal" Return_type="System.Object">
        <Parameters>
          <Parameter Name="objectRef" Type="System.Runtime.Remoting.ObjRef" />
        </Parameters>
      </Method>
      <Method Name="Unmarshal" Return_type="System.Object">
        <Parameters>
          <Parameter Name="objectRef" Type="System.Runtime.Remoting.ObjRef" />
          <Parameter Name="fRefine" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="Connect" Return_type="System.Object">
        <Parameters>
          <Parameter Name="classToProxy" Type="System.Type" />
          <Parameter Name="url" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Connect" Return_type="System.Object">
        <Parameters>
          <Parameter Name="classToProxy" Type="System.Type" />
          <Parameter Name="url" Type="System.String" />
          <Parameter Name="data" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Disconnect" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.MarshalByRefObject" />
        </Parameters>
      </Method>
      <Method Name="GetEnvoyChainForProxy" Return_type="System.Runtime.Remoting.Messaging.IMessageSink">
        <Parameters>
          <Parameter Name="obj" Type="System.MarshalByRefObject" />
        </Parameters>
      </Method>
      <Method Name="GetObjRefForProxy" Return_type="System.Runtime.Remoting.ObjRef">
        <Parameters>
          <Parameter Name="obj" Type="System.MarshalByRefObject" />
        </Parameters>
      </Method>
      <Method Name="GetMethodBaseFromMethodMessage" Return_type="System.Reflection.MethodBase">
        <Parameters>
          <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMethodMessage" />
        </Parameters>
      </Method>
      <Method Name="IsMethodOverloaded" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMethodMessage" />
        </Parameters>
      </Method>
      <Method Name="IsOneWay" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="method" Type="System.Reflection.MethodBase" />
        </Parameters>
      </Method>
      <Method Name="GetServerTypeForUri" Return_type="System.Type">
        <Parameters>
          <Parameter Name="URI" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ExecuteMessage" Return_type="System.Runtime.Remoting.Messaging.IMethodReturnMessage">
        <Parameters>
          <Parameter Name="target" Type="System.MarshalByRefObject" />
          <Parameter Name="reqMsg" Type="System.Runtime.Remoting.Messaging.IMethodCallMessage" />
        </Parameters>
      </Method>
      <Method Name="LogRemotingStage" Return_type="System.Void">
        <Parameters>
          <Parameter Name="stage" Type="System.Int32" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.InternalRemotingServices">
    <Properties />
    <Methods>
      <Method Name="DebugOutChnl" Return_type="System.Void">
        <Parameters>
          <Parameter Name="s" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="RemotingTrace" Return_type="System.Void">
        <Parameters>
          <Parameter Name="messages" Type="System.Object[]" />
        </Parameters>
      </Method>
      <Method Name="RemotingAssert" Return_type="System.Void">
        <Parameters>
          <Parameter Name="condition" Type="System.Boolean" />
          <Parameter Name="message" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="SetServerIdentity" Return_type="System.Void">
        <Parameters>
          <Parameter Name="m" Type="System.Runtime.Remoting.Messaging.MethodCall" />
          <Parameter Name="srvID" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetCachedSoapAttribute" Return_type="System.Runtime.Remoting.Metadata.SoapAttribute">
        <Parameters>
          <Parameter Name="reflectionObject" Type="System.Object" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.SoapServices">
    <Properties>
      <Property Name="XmlNsForClrType" Type="System.String" />
      <Property Name="XmlNsForClrTypeWithAssembly" Type="System.String" />
      <Property Name="XmlNsForClrTypeWithNs" Type="System.String" />
      <Property Name="XmlNsForClrTypeWithNsAndAssembly" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="RegisterInteropXmlElement" Return_type="System.Void">
        <Parameters>
          <Parameter Name="xmlElement" Type="System.String" />
          <Parameter Name="xmlNamespace" Type="System.String" />
          <Parameter Name="type" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="RegisterInteropXmlType" Return_type="System.Void">
        <Parameters>
          <Parameter Name="xmlType" Type="System.String" />
          <Parameter Name="xmlTypeNamespace" Type="System.String" />
          <Parameter Name="type" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="PreLoad" Return_type="System.Void">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="PreLoad" Return_type="System.Void">
        <Parameters>
          <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        </Parameters>
      </Method>
      <Method Name="GetInteropTypeFromXmlElement" Return_type="System.Type">
        <Parameters>
          <Parameter Name="xmlElement" Type="System.String" />
          <Parameter Name="xmlNamespace" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetInteropTypeFromXmlType" Return_type="System.Type">
        <Parameters>
          <Parameter Name="xmlType" Type="System.String" />
          <Parameter Name="xmlTypeNamespace" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetInteropFieldTypeAndNameFromXmlElement" Return_type="System.Void">
        <Parameters>
          <Parameter Name="containingType" Type="System.Type" />
          <Parameter Name="xmlElement" Type="System.String" />
          <Parameter Name="xmlNamespace" Type="System.String" />
          <Parameter Name="type" Type="System.Type&amp;" />
          <Parameter Name="name" Type="System.String&amp;" />
        </Parameters>
      </Method>
      <Method Name="GetInteropFieldTypeAndNameFromXmlAttribute" Return_type="System.Void">
        <Parameters>
          <Parameter Name="containingType" Type="System.Type" />
          <Parameter Name="xmlAttribute" Type="System.String" />
          <Parameter Name="xmlNamespace" Type="System.String" />
          <Parameter Name="type" Type="System.Type&amp;" />
          <Parameter Name="name" Type="System.String&amp;" />
        </Parameters>
      </Method>
      <Method Name="GetXmlElementForInteropType" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
          <Parameter Name="xmlElement" Type="System.String&amp;" />
          <Parameter Name="xmlNamespace" Type="System.String&amp;" />
        </Parameters>
      </Method>
      <Method Name="GetXmlTypeForInteropType" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
          <Parameter Name="xmlType" Type="System.String&amp;" />
          <Parameter Name="xmlTypeNamespace" Type="System.String&amp;" />
        </Parameters>
      </Method>
      <Method Name="GetXmlNamespaceForMethodCall" Return_type="System.String">
        <Parameters>
          <Parameter Name="mb" Type="System.Reflection.MethodBase" />
        </Parameters>
      </Method>
      <Method Name="GetXmlNamespaceForMethodResponse" Return_type="System.String">
        <Parameters>
          <Parameter Name="mb" Type="System.Reflection.MethodBase" />
        </Parameters>
      </Method>
      <Method Name="RegisterSoapActionForMethodBase" Return_type="System.Void">
        <Parameters>
          <Parameter Name="mb" Type="System.Reflection.MethodBase" />
        </Parameters>
      </Method>
      <Method Name="RegisterSoapActionForMethodBase" Return_type="System.Void">
        <Parameters>
          <Parameter Name="mb" Type="System.Reflection.MethodBase" />
          <Parameter Name="soapAction" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetSoapActionFromMethodBase" Return_type="System.String">
        <Parameters>
          <Parameter Name="mb" Type="System.Reflection.MethodBase" />
        </Parameters>
      </Method>
      <Method Name="IsSoapActionValidForMethodBase" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="soapAction" Type="System.String" />
          <Parameter Name="mb" Type="System.Reflection.MethodBase" />
        </Parameters>
      </Method>
      <Method Name="GetTypeAndMethodNameFromSoapAction" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="soapAction" Type="System.String" />
          <Parameter Name="typeName" Type="System.String&amp;" />
          <Parameter Name="methodName" Type="System.String&amp;" />
        </Parameters>
      </Method>
      <Method Name="get_XmlNsForClrType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_XmlNsForClrTypeWithAssembly" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_XmlNsForClrTypeWithNs" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_XmlNsForClrTypeWithNsAndAssembly" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="IsClrTypeNamespace" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="namespaceString" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="CodeXmlNamespaceForClrTypeNamespace" Return_type="System.String">
        <Parameters>
          <Parameter Name="typeNamespace" Type="System.String" />
          <Parameter Name="assemblyName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="DecodeXmlNamespaceForClrTypeNamespace" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="inNamespace" Type="System.String" />
          <Parameter Name="typeNamespace" Type="System.String&amp;" />
          <Parameter Name="assemblyName" Type="System.String&amp;" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.ObjectHandle">
    <Properties />
    <Methods>
      <Method Name="Unwrap" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="InitializeLifetimeService" Return_type="System.Object">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Metadata.SoapTypeAttribute">
    <Properties>
      <Property Name="SoapOptions" Type="System.Runtime.Remoting.Metadata.SoapOption" />
      <Property Name="XmlElementName" Type="System.String" />
      <Property Name="XmlNamespace" Type="System.String" />
      <Property Name="XmlTypeName" Type="System.String" />
      <Property Name="XmlTypeNamespace" Type="System.String" />
      <Property Name="XmlFieldOrder" Type="System.Runtime.Remoting.Metadata.XmlFieldOrderOption" />
      <Property Name="UseAttribute" Type="System.Boolean" />
      <Property Name="Embedded" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_SoapOptions" Return_type="System.Runtime.Remoting.Metadata.SoapOption">
        <Parameters />
      </Method>
      <Method Name="set_SoapOptions" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Runtime.Remoting.Metadata.SoapOption" />
        </Parameters>
      </Method>
      <Method Name="get_XmlElementName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_XmlElementName" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_XmlNamespace" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_XmlNamespace" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_XmlTypeName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_XmlTypeName" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_XmlTypeNamespace" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_XmlTypeNamespace" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_XmlFieldOrder" Return_type="System.Runtime.Remoting.Metadata.XmlFieldOrderOption">
        <Parameters />
      </Method>
      <Method Name="set_XmlFieldOrder" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Runtime.Remoting.Metadata.XmlFieldOrderOption" />
        </Parameters>
      </Method>
      <Method Name="get_UseAttribute" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_UseAttribute" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Metadata.SoapMethodAttribute">
    <Properties>
      <Property Name="SoapAction" Type="System.String" />
      <Property Name="UseAttribute" Type="System.Boolean" />
      <Property Name="XmlNamespace" Type="System.String" />
      <Property Name="ResponseXmlElementName" Type="System.String" />
      <Property Name="ResponseXmlNamespace" Type="System.String" />
      <Property Name="ReturnXmlElementName" Type="System.String" />
      <Property Name="Embedded" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_SoapAction" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_SoapAction" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_UseAttribute" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_UseAttribute" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_XmlNamespace" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_XmlNamespace" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_ResponseXmlElementName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_ResponseXmlElementName" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_ResponseXmlNamespace" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_ResponseXmlNamespace" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_ReturnXmlElementName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_ReturnXmlElementName" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Metadata.SoapFieldAttribute">
    <Properties>
      <Property Name="XmlElementName" Type="System.String" />
      <Property Name="Order" Type="System.Int32" />
      <Property Name="XmlNamespace" Type="System.String" />
      <Property Name="UseAttribute" Type="System.Boolean" />
      <Property Name="Embedded" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="IsInteropXmlElement" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_XmlElementName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_XmlElementName" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_Order" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_Order" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Metadata.SoapParameterAttribute">
    <Properties>
      <Property Name="XmlNamespace" Type="System.String" />
      <Property Name="UseAttribute" Type="System.Boolean" />
      <Property Name="Embedded" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Metadata.SoapAttribute">
    <Properties>
      <Property Name="XmlNamespace" Type="System.String" />
      <Property Name="UseAttribute" Type="System.Boolean" />
      <Property Name="Embedded" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_XmlNamespace" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_XmlNamespace" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_UseAttribute" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_UseAttribute" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_Embedded" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_Embedded" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapDateTime">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_XsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="value" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="Parse" Return_type="System.DateTime">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapDuration">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_XsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="timeSpan" Type="System.TimeSpan" />
        </Parameters>
      </Method>
      <Method Name="Parse" Return_type="System.TimeSpan">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapTime">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.DateTime" />
    </Properties>
    <Methods>
      <Method Name="get_XsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetXsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" Return_type="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="set_Value" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Parse" Return_type="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapTime">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapDate">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.DateTime" />
      <Property Name="Sign" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_XsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetXsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" Return_type="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="set_Value" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="get_Sign" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_Sign" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Parse" Return_type="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapDate">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapYearMonth">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.DateTime" />
      <Property Name="Sign" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_XsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetXsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" Return_type="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="set_Value" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="get_Sign" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_Sign" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Parse" Return_type="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapYearMonth">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapYear">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.DateTime" />
      <Property Name="Sign" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_XsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetXsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" Return_type="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="set_Value" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="get_Sign" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_Sign" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Parse" Return_type="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapYear">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapMonthDay">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.DateTime" />
    </Properties>
    <Methods>
      <Method Name="get_XsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetXsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" Return_type="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="set_Value" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Parse" Return_type="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapMonthDay">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapDay">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.DateTime" />
    </Properties>
    <Methods>
      <Method Name="get_XsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetXsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" Return_type="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="set_Value" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Parse" Return_type="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapDay">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapMonth">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.DateTime" />
    </Properties>
    <Methods>
      <Method Name="get_XsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetXsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" Return_type="System.DateTime">
        <Parameters />
      </Method>
      <Method Name="set_Value" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.DateTime" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Parse" Return_type="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapMonth">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapHexBinary">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.Byte[]" />
    </Properties>
    <Methods>
      <Method Name="get_XsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetXsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" Return_type="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="set_Value" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Parse" Return_type="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapHexBinary">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapBase64Binary">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.Byte[]" />
    </Properties>
    <Methods>
      <Method Name="get_XsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetXsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" Return_type="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="set_Value" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Parse" Return_type="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapBase64Binary">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapInteger">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.Decimal" />
    </Properties>
    <Methods>
      <Method Name="get_XsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetXsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" Return_type="System.Decimal">
        <Parameters />
      </Method>
      <Method Name="set_Value" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Decimal" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Parse" Return_type="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapInteger">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapPositiveInteger">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.Decimal" />
    </Properties>
    <Methods>
      <Method Name="get_XsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetXsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" Return_type="System.Decimal">
        <Parameters />
      </Method>
      <Method Name="set_Value" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Decimal" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Parse" Return_type="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapPositiveInteger">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNonPositiveInteger">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.Decimal" />
    </Properties>
    <Methods>
      <Method Name="get_XsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetXsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" Return_type="System.Decimal">
        <Parameters />
      </Method>
      <Method Name="set_Value" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Decimal" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Parse" Return_type="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNonPositiveInteger">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNonNegativeInteger">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.Decimal" />
    </Properties>
    <Methods>
      <Method Name="get_XsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetXsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" Return_type="System.Decimal">
        <Parameters />
      </Method>
      <Method Name="set_Value" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Decimal" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Parse" Return_type="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNonNegativeInteger">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNegativeInteger">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.Decimal" />
    </Properties>
    <Methods>
      <Method Name="get_XsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetXsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" Return_type="System.Decimal">
        <Parameters />
      </Method>
      <Method Name="set_Value" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Decimal" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Parse" Return_type="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNegativeInteger">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapAnyUri">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_XsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetXsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Value" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Parse" Return_type="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapAnyUri">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapQName">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Name" Type="System.String" />
      <Property Name="Namespace" Type="System.String" />
      <Property Name="Key" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_XsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetXsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Name" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_Namespace" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Namespace" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_Key" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Key" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Parse" Return_type="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapQName">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNotation">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_XsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetXsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Value" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Parse" Return_type="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNotation">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNormalizedString">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_XsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetXsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Value" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Parse" Return_type="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNormalizedString">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapToken">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_XsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetXsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Value" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Parse" Return_type="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapToken">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapLanguage">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_XsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetXsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Value" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Parse" Return_type="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapLanguage">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapName">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_XsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetXsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Value" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Parse" Return_type="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapName">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapIdrefs">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_XsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetXsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Value" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Parse" Return_type="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapIdrefs">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapEntities">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_XsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetXsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Value" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Parse" Return_type="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapEntities">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNmtoken">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_XsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetXsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Value" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Parse" Return_type="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNmtoken">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNmtokens">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_XsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetXsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Value" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Parse" Return_type="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNmtokens">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNcName">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_XsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetXsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Value" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Parse" Return_type="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapNcName">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapId">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_XsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetXsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Value" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Parse" Return_type="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapId">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapIdref">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_XsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetXsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Value" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Parse" Return_type="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapIdref">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapEntity">
    <Properties>
      <Property Name="XsdType" Type="System.String" />
      <Property Name="Value" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_XsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetXsdType" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Value" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Value" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="Parse" Return_type="System.Runtime.Remoting.Metadata.W3cXsd2001.SoapEntity">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Proxies.ProxyAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="CreateInstance" Return_type="System.MarshalByRefObject">
        <Parameters>
          <Parameter Name="serverType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="CreateProxy" Return_type="System.Runtime.Remoting.Proxies.RealProxy">
        <Parameters>
          <Parameter Name="objRef" Type="System.Runtime.Remoting.ObjRef" />
          <Parameter Name="serverType" Type="System.Type" />
          <Parameter Name="serverObject" Type="System.Object" />
          <Parameter Name="serverContext" Type="System.Runtime.Remoting.Contexts.Context" />
        </Parameters>
      </Method>
      <Method Name="IsContextOK" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="ctx" Type="System.Runtime.Remoting.Contexts.Context" />
          <Parameter Name="msg" Type="System.Runtime.Remoting.Activation.IConstructionCallMessage" />
        </Parameters>
      </Method>
      <Method Name="GetPropertiesForNewContext" Return_type="System.Void">
        <Parameters>
          <Parameter Name="msg" Type="System.Runtime.Remoting.Activation.IConstructionCallMessage" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Proxies.RealProxy">
    <Properties />
    <Methods>
      <Method Name="InitializeServerObject" Return_type="System.Runtime.Remoting.Activation.IConstructionReturnMessage">
        <Parameters>
          <Parameter Name="ctorMsg" Type="System.Runtime.Remoting.Activation.IConstructionCallMessage" />
        </Parameters>
      </Method>
      <Method Name="SetStubData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rp" Type="System.Runtime.Remoting.Proxies.RealProxy" />
          <Parameter Name="stubData" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetStubData" Return_type="System.Object">
        <Parameters>
          <Parameter Name="rp" Type="System.Runtime.Remoting.Proxies.RealProxy" />
        </Parameters>
      </Method>
      <Method Name="GetProxiedType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="Invoke" Return_type="System.Runtime.Remoting.Messaging.IMessage">
        <Parameters>
          <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        </Parameters>
      </Method>
      <Method Name="CreateObjRef" Return_type="System.Runtime.Remoting.ObjRef">
        <Parameters>
          <Parameter Name="requestedType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetObjectData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
      <Method Name="GetCOMIUnknown" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="fIsMarshalled" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="SetCOMIUnknown" Return_type="System.Void">
        <Parameters>
          <Parameter Name="i" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="SupportsInterface" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="iid" Type="System.Guid&amp;" />
        </Parameters>
      </Method>
      <Method Name="GetTransparentProxy" Return_type="System.Object">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Services.EnterpriseServicesHelper">
    <Properties />
    <Methods>
      <Method Name="WrapIUnknownWithComObject" Return_type="System.Object">
        <Parameters>
          <Parameter Name="punk" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="CreateConstructionReturnMessage" Return_type="System.Runtime.Remoting.Activation.IConstructionReturnMessage">
        <Parameters>
          <Parameter Name="ctorMsg" Type="System.Runtime.Remoting.Activation.IConstructionCallMessage" />
          <Parameter Name="retObj" Type="System.MarshalByRefObject" />
        </Parameters>
      </Method>
      <Method Name="SwitchWrappers" Return_type="System.Void">
        <Parameters>
          <Parameter Name="oldcp" Type="System.Runtime.Remoting.Proxies.RealProxy" />
          <Parameter Name="newcp" Type="System.Runtime.Remoting.Proxies.RealProxy" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Services.TrackingServices">
    <Properties>
      <Property Name="RegisteredHandlers" Type="System.Runtime.Remoting.Services.ITrackingHandler[]" />
    </Properties>
    <Methods>
      <Method Name="RegisterTrackingHandler" Return_type="System.Void">
        <Parameters>
          <Parameter Name="handler" Type="System.Runtime.Remoting.Services.ITrackingHandler" />
        </Parameters>
      </Method>
      <Method Name="UnregisterTrackingHandler" Return_type="System.Void">
        <Parameters>
          <Parameter Name="handler" Type="System.Runtime.Remoting.Services.ITrackingHandler" />
        </Parameters>
      </Method>
      <Method Name="get_RegisteredHandlers" Return_type="System.Runtime.Remoting.Services.ITrackingHandler[]">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Contexts.CrossContextDelegate">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="BeginInvoke" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="object" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" Return_type="System.Void">
        <Parameters>
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Contexts.Context">
    <Properties>
      <Property Name="ContextID" Type="System.Int32" />
      <Property Name="DefaultContext" Type="System.Runtime.Remoting.Contexts.Context" />
      <Property Name="ContextProperties" Type="System.Runtime.Remoting.Contexts.IContextProperty[]" />
    </Properties>
    <Methods>
      <Method Name="SetProperty" Return_type="System.Void">
        <Parameters>
          <Parameter Name="prop" Type="System.Runtime.Remoting.Contexts.IContextProperty" />
        </Parameters>
      </Method>
      <Method Name="get_ContextID" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_DefaultContext" Return_type="System.Runtime.Remoting.Contexts.Context">
        <Parameters />
      </Method>
      <Method Name="GetProperty" Return_type="System.Runtime.Remoting.Contexts.IContextProperty">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Freeze" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_ContextProperties" Return_type="System.Runtime.Remoting.Contexts.IContextProperty[]">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="DoCallBack" Return_type="System.Void">
        <Parameters>
          <Parameter Name="deleg" Type="System.Runtime.Remoting.Contexts.CrossContextDelegate" />
        </Parameters>
      </Method>
      <Method Name="AllocateDataSlot" Return_type="System.LocalDataStoreSlot">
        <Parameters />
      </Method>
      <Method Name="AllocateNamedDataSlot" Return_type="System.LocalDataStoreSlot">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetNamedDataSlot" Return_type="System.LocalDataStoreSlot">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="FreeNamedDataSlot" Return_type="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="SetData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="slot" Type="System.LocalDataStoreSlot" />
          <Parameter Name="data" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetData" Return_type="System.Object">
        <Parameters>
          <Parameter Name="slot" Type="System.LocalDataStoreSlot" />
        </Parameters>
      </Method>
      <Method Name="RegisterDynamicProperty" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="prop" Type="System.Runtime.Remoting.Contexts.IDynamicProperty" />
          <Parameter Name="obj" Type="System.ContextBoundObject" />
          <Parameter Name="ctx" Type="System.Runtime.Remoting.Contexts.Context" />
        </Parameters>
      </Method>
      <Method Name="UnregisterDynamicProperty" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="obj" Type="System.ContextBoundObject" />
          <Parameter Name="ctx" Type="System.Runtime.Remoting.Contexts.Context" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Contexts.ContextProperty">
    <Properties>
      <Property Name="Name" Type="System.String" />
      <Property Name="Property" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Property" Return_type="System.Object">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Contexts.ContextAttribute">
    <Properties>
      <Property Name="Name" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="IsNewContextOK" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="newCtx" Type="System.Runtime.Remoting.Contexts.Context" />
        </Parameters>
      </Method>
      <Method Name="Freeze" Return_type="System.Void">
        <Parameters>
          <Parameter Name="newContext" Type="System.Runtime.Remoting.Contexts.Context" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="IsContextOK" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="ctx" Type="System.Runtime.Remoting.Contexts.Context" />
          <Parameter Name="ctorMsg" Type="System.Runtime.Remoting.Activation.IConstructionCallMessage" />
        </Parameters>
      </Method>
      <Method Name="GetPropertiesForNewContext" Return_type="System.Void">
        <Parameters>
          <Parameter Name="ctorMsg" Type="System.Runtime.Remoting.Activation.IConstructionCallMessage" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Contexts.SynchronizationAttribute">
    <Properties>
      <Property Name="Locked" Type="System.Boolean" />
      <Property Name="IsReEntrant" Type="System.Boolean" />
      <Property Name="Name" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Locked" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_Locked" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_IsReEntrant" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="IsContextOK" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="ctx" Type="System.Runtime.Remoting.Contexts.Context" />
          <Parameter Name="msg" Type="System.Runtime.Remoting.Activation.IConstructionCallMessage" />
        </Parameters>
      </Method>
      <Method Name="GetPropertiesForNewContext" Return_type="System.Void">
        <Parameters>
          <Parameter Name="ctorMsg" Type="System.Runtime.Remoting.Activation.IConstructionCallMessage" />
        </Parameters>
      </Method>
      <Method Name="GetServerContextSink" Return_type="System.Runtime.Remoting.Messaging.IMessageSink">
        <Parameters>
          <Parameter Name="nextSink" Type="System.Runtime.Remoting.Messaging.IMessageSink" />
        </Parameters>
      </Method>
      <Method Name="GetClientContextSink" Return_type="System.Runtime.Remoting.Messaging.IMessageSink">
        <Parameters>
          <Parameter Name="nextSink" Type="System.Runtime.Remoting.Messaging.IMessageSink" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Lifetime.ClientSponsor">
    <Properties>
      <Property Name="RenewalTime" Type="System.TimeSpan" />
    </Properties>
    <Methods>
      <Method Name="get_RenewalTime" Return_type="System.TimeSpan">
        <Parameters />
      </Method>
      <Method Name="set_RenewalTime" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.TimeSpan" />
        </Parameters>
      </Method>
      <Method Name="Register" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.MarshalByRefObject" />
        </Parameters>
      </Method>
      <Method Name="Unregister" Return_type="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.MarshalByRefObject" />
        </Parameters>
      </Method>
      <Method Name="Renewal" Return_type="System.TimeSpan">
        <Parameters>
          <Parameter Name="lease" Type="System.Runtime.Remoting.Lifetime.ILease" />
        </Parameters>
      </Method>
      <Method Name="Close" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="InitializeLifetimeService" Return_type="System.Object">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Lifetime.LifetimeServices">
    <Properties>
      <Property Name="LeaseTime" Type="System.TimeSpan" />
      <Property Name="RenewOnCallTime" Type="System.TimeSpan" />
      <Property Name="SponsorshipTimeout" Type="System.TimeSpan" />
      <Property Name="LeaseManagerPollTime" Type="System.TimeSpan" />
    </Properties>
    <Methods>
      <Method Name="get_LeaseTime" Return_type="System.TimeSpan">
        <Parameters />
      </Method>
      <Method Name="set_LeaseTime" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.TimeSpan" />
        </Parameters>
      </Method>
      <Method Name="get_RenewOnCallTime" Return_type="System.TimeSpan">
        <Parameters />
      </Method>
      <Method Name="set_RenewOnCallTime" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.TimeSpan" />
        </Parameters>
      </Method>
      <Method Name="get_SponsorshipTimeout" Return_type="System.TimeSpan">
        <Parameters />
      </Method>
      <Method Name="set_SponsorshipTimeout" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.TimeSpan" />
        </Parameters>
      </Method>
      <Method Name="get_LeaseManagerPollTime" Return_type="System.TimeSpan">
        <Parameters />
      </Method>
      <Method Name="set_LeaseManagerPollTime" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.TimeSpan" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Channels.ChannelServices">
    <Properties>
      <Property Name="RegisteredChannels" Type="System.Runtime.Remoting.Channels.IChannel[]" />
    </Properties>
    <Methods>
      <Method Name="RegisterChannel" Return_type="System.Void">
        <Parameters>
          <Parameter Name="chnl" Type="System.Runtime.Remoting.Channels.IChannel" />
          <Parameter Name="ensureSecurity" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="RegisterChannel" Return_type="System.Void">
        <Parameters>
          <Parameter Name="chnl" Type="System.Runtime.Remoting.Channels.IChannel" />
        </Parameters>
      </Method>
      <Method Name="UnregisterChannel" Return_type="System.Void">
        <Parameters>
          <Parameter Name="chnl" Type="System.Runtime.Remoting.Channels.IChannel" />
        </Parameters>
      </Method>
      <Method Name="get_RegisteredChannels" Return_type="System.Runtime.Remoting.Channels.IChannel[]">
        <Parameters />
      </Method>
      <Method Name="GetChannel" Return_type="System.Runtime.Remoting.Channels.IChannel">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetUrlsForObject" Return_type="System.String[]">
        <Parameters>
          <Parameter Name="obj" Type="System.MarshalByRefObject" />
        </Parameters>
      </Method>
      <Method Name="GetChannelSinkProperties" Return_type="System.Collections.IDictionary">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="DispatchMessage" Return_type="System.Runtime.Remoting.Channels.ServerProcessing">
        <Parameters>
          <Parameter Name="sinkStack" Type="System.Runtime.Remoting.Channels.IServerChannelSinkStack" />
          <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
          <Parameter Name="replyMsg" Type="System.Runtime.Remoting.Messaging.IMessage&amp;" />
        </Parameters>
      </Method>
      <Method Name="SyncDispatchMessage" Return_type="System.Runtime.Remoting.Messaging.IMessage">
        <Parameters>
          <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        </Parameters>
      </Method>
      <Method Name="AsyncDispatchMessage" Return_type="System.Runtime.Remoting.Messaging.IMessageCtrl">
        <Parameters>
          <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
          <Parameter Name="replySink" Type="System.Runtime.Remoting.Messaging.IMessageSink" />
        </Parameters>
      </Method>
      <Method Name="CreateServerChannelSinkChain" Return_type="System.Runtime.Remoting.Channels.IServerChannelSink">
        <Parameters>
          <Parameter Name="provider" Type="System.Runtime.Remoting.Channels.IServerChannelSinkProvider" />
          <Parameter Name="channel" Type="System.Runtime.Remoting.Channels.IChannelReceiver" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Channels.ClientChannelSinkStack">
    <Properties />
    <Methods>
      <Method Name="Push" Return_type="System.Void">
        <Parameters>
          <Parameter Name="sink" Type="System.Runtime.Remoting.Channels.IClientChannelSink" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Pop" Return_type="System.Object">
        <Parameters>
          <Parameter Name="sink" Type="System.Runtime.Remoting.Channels.IClientChannelSink" />
        </Parameters>
      </Method>
      <Method Name="AsyncProcessResponse" Return_type="System.Void">
        <Parameters>
          <Parameter Name="headers" Type="System.Runtime.Remoting.Channels.ITransportHeaders" />
          <Parameter Name="stream" Type="System.IO.Stream" />
        </Parameters>
      </Method>
      <Method Name="DispatchReplyMessage" Return_type="System.Void">
        <Parameters>
          <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        </Parameters>
      </Method>
      <Method Name="DispatchException" Return_type="System.Void">
        <Parameters>
          <Parameter Name="e" Type="System.Exception" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Channels.ServerChannelSinkStack">
    <Properties />
    <Methods>
      <Method Name="Push" Return_type="System.Void">
        <Parameters>
          <Parameter Name="sink" Type="System.Runtime.Remoting.Channels.IServerChannelSink" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Pop" Return_type="System.Object">
        <Parameters>
          <Parameter Name="sink" Type="System.Runtime.Remoting.Channels.IServerChannelSink" />
        </Parameters>
      </Method>
      <Method Name="Store" Return_type="System.Void">
        <Parameters>
          <Parameter Name="sink" Type="System.Runtime.Remoting.Channels.IServerChannelSink" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="StoreAndDispatch" Return_type="System.Void">
        <Parameters>
          <Parameter Name="sink" Type="System.Runtime.Remoting.Channels.IServerChannelSink" />
          <Parameter Name="state" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="AsyncProcessResponse" Return_type="System.Void">
        <Parameters>
          <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
          <Parameter Name="headers" Type="System.Runtime.Remoting.Channels.ITransportHeaders" />
          <Parameter Name="stream" Type="System.IO.Stream" />
        </Parameters>
      </Method>
      <Method Name="GetResponseStream" Return_type="System.IO.Stream">
        <Parameters>
          <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
          <Parameter Name="headers" Type="System.Runtime.Remoting.Channels.ITransportHeaders" />
        </Parameters>
      </Method>
      <Method Name="ServerCallback" Return_type="System.Void">
        <Parameters>
          <Parameter Name="ar" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Channels.ChannelDataStore">
    <Properties>
      <Property Name="ChannelUris" Type="System.String[]" />
      <Property Name="Item" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_ChannelUris" Return_type="System.String[]">
        <Parameters />
      </Method>
      <Method Name="set_ChannelUris" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String[]" />
        </Parameters>
      </Method>
      <Method Name="get_Item" Return_type="System.Object">
        <Parameters>
          <Parameter Name="key" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="set_Item" Return_type="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Object" />
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Channels.TransportHeaders">
    <Properties>
      <Property Name="Item" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Item" Return_type="System.Object">
        <Parameters>
          <Parameter Name="key" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="set_Item" Return_type="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Object" />
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetEnumerator" Return_type="System.Collections.IEnumerator">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Channels.SinkProviderData">
    <Properties>
      <Property Name="Name" Type="System.String" />
      <Property Name="Properties" Type="System.Collections.IDictionary" />
      <Property Name="Children" Type="System.Collections.IList" />
    </Properties>
    <Methods>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Properties" Return_type="System.Collections.IDictionary">
        <Parameters />
      </Method>
      <Method Name="get_Children" Return_type="System.Collections.IList">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Channels.BaseChannelSinkWithProperties">
    <Properties>
      <Property Name="Properties" Type="System.Collections.IDictionary" />
      <Property Name="Item" Type="System.Object" />
      <Property Name="Keys" Type="System.Collections.ICollection" />
      <Property Name="Values" Type="System.Collections.ICollection" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="IsFixedSize" Type="System.Boolean" />
      <Property Name="Count" Type="System.Int32" />
      <Property Name="SyncRoot" Type="System.Object" />
      <Property Name="IsSynchronized" Type="System.Boolean" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Channels.BaseChannelWithProperties">
    <Properties>
      <Property Name="Properties" Type="System.Collections.IDictionary" />
      <Property Name="Item" Type="System.Object" />
      <Property Name="Keys" Type="System.Collections.ICollection" />
      <Property Name="Values" Type="System.Collections.ICollection" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="IsFixedSize" Type="System.Boolean" />
      <Property Name="Count" Type="System.Int32" />
      <Property Name="SyncRoot" Type="System.Object" />
      <Property Name="IsSynchronized" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_Properties" Return_type="System.Collections.IDictionary">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Channels.BaseChannelObjectWithProperties">
    <Properties>
      <Property Name="Properties" Type="System.Collections.IDictionary" />
      <Property Name="Item" Type="System.Object" />
      <Property Name="Keys" Type="System.Collections.ICollection" />
      <Property Name="Values" Type="System.Collections.ICollection" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="IsFixedSize" Type="System.Boolean" />
      <Property Name="Count" Type="System.Int32" />
      <Property Name="SyncRoot" Type="System.Object" />
      <Property Name="IsSynchronized" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_Properties" Return_type="System.Collections.IDictionary">
        <Parameters />
      </Method>
      <Method Name="get_Item" Return_type="System.Object">
        <Parameters>
          <Parameter Name="key" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="set_Item" Return_type="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Object" />
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="get_Keys" Return_type="System.Collections.ICollection">
        <Parameters />
      </Method>
      <Method Name="get_Values" Return_type="System.Collections.ICollection">
        <Parameters />
      </Method>
      <Method Name="Contains" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="key" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="get_IsReadOnly" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsFixedSize" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Add" Return_type="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Object" />
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Clear" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Remove" Return_type="System.Void">
        <Parameters>
          <Parameter Name="key" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetEnumerator" Return_type="System.Collections.IDictionaryEnumerator">
        <Parameters />
      </Method>
      <Method Name="CopyTo" Return_type="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Array" />
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_Count" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_SyncRoot" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_IsSynchronized" Return_type="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Messaging.AsyncResult">
    <Properties>
      <Property Name="IsCompleted" Type="System.Boolean" />
      <Property Name="AsyncDelegate" Type="System.Object" />
      <Property Name="AsyncState" Type="System.Object" />
      <Property Name="CompletedSynchronously" Type="System.Boolean" />
      <Property Name="EndInvokeCalled" Type="System.Boolean" />
      <Property Name="AsyncWaitHandle" Type="System.Threading.WaitHandle" />
      <Property Name="NextSink" Type="System.Runtime.Remoting.Messaging.IMessageSink" />
    </Properties>
    <Methods>
      <Method Name="SyncProcessMessage" Return_type="System.Runtime.Remoting.Messaging.IMessage">
        <Parameters>
          <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
        </Parameters>
      </Method>
      <Method Name="get_IsCompleted" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_AsyncDelegate" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_AsyncState" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_CompletedSynchronously" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_EndInvokeCalled" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_EndInvokeCalled" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="get_AsyncWaitHandle" Return_type="System.Threading.WaitHandle">
        <Parameters />
      </Method>
      <Method Name="SetMessageCtrl" Return_type="System.Void">
        <Parameters>
          <Parameter Name="mc" Type="System.Runtime.Remoting.Messaging.IMessageCtrl" />
        </Parameters>
      </Method>
      <Method Name="AsyncProcessMessage" Return_type="System.Runtime.Remoting.Messaging.IMessageCtrl">
        <Parameters>
          <Parameter Name="msg" Type="System.Runtime.Remoting.Messaging.IMessage" />
          <Parameter Name="replySink" Type="System.Runtime.Remoting.Messaging.IMessageSink" />
        </Parameters>
      </Method>
      <Method Name="get_NextSink" Return_type="System.Runtime.Remoting.Messaging.IMessageSink">
        <Parameters />
      </Method>
      <Method Name="GetReplyMessage" Return_type="System.Runtime.Remoting.Messaging.IMessage">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Messaging.ReturnMessage">
    <Properties>
      <Property Name="Uri" Type="System.String" />
      <Property Name="MethodName" Type="System.String" />
      <Property Name="TypeName" Type="System.String" />
      <Property Name="MethodSignature" Type="System.Object" />
      <Property Name="MethodBase" Type="System.Reflection.MethodBase" />
      <Property Name="HasVarArgs" Type="System.Boolean" />
      <Property Name="ArgCount" Type="System.Int32" />
      <Property Name="Args" Type="System.Object[]" />
      <Property Name="OutArgCount" Type="System.Int32" />
      <Property Name="OutArgs" Type="System.Object[]" />
      <Property Name="Exception" Type="System.Exception" />
      <Property Name="ReturnValue" Type="System.Object" />
      <Property Name="Properties" Type="System.Collections.IDictionary" />
      <Property Name="LogicalCallContext" Type="System.Runtime.Remoting.Messaging.LogicalCallContext" />
    </Properties>
    <Methods>
      <Method Name="get_Uri" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Uri" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_MethodName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_TypeName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_MethodSignature" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_MethodBase" Return_type="System.Reflection.MethodBase">
        <Parameters />
      </Method>
      <Method Name="get_HasVarArgs" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_ArgCount" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetArg" Return_type="System.Object">
        <Parameters>
          <Parameter Name="argNum" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetArgName" Return_type="System.String">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_Args" Return_type="System.Object[]">
        <Parameters />
      </Method>
      <Method Name="get_OutArgCount" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetOutArg" Return_type="System.Object">
        <Parameters>
          <Parameter Name="argNum" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetOutArgName" Return_type="System.String">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_OutArgs" Return_type="System.Object[]">
        <Parameters />
      </Method>
      <Method Name="get_Exception" Return_type="System.Exception">
        <Parameters />
      </Method>
      <Method Name="get_ReturnValue" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_Properties" Return_type="System.Collections.IDictionary">
        <Parameters />
      </Method>
      <Method Name="get_LogicalCallContext" Return_type="System.Runtime.Remoting.Messaging.LogicalCallContext">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Messaging.MethodCall">
    <Properties>
      <Property Name="ArgCount" Type="System.Int32" />
      <Property Name="Args" Type="System.Object[]" />
      <Property Name="InArgCount" Type="System.Int32" />
      <Property Name="InArgs" Type="System.Object[]" />
      <Property Name="MethodName" Type="System.String" />
      <Property Name="TypeName" Type="System.String" />
      <Property Name="MethodSignature" Type="System.Object" />
      <Property Name="MethodBase" Type="System.Reflection.MethodBase" />
      <Property Name="Uri" Type="System.String" />
      <Property Name="HasVarArgs" Type="System.Boolean" />
      <Property Name="Properties" Type="System.Collections.IDictionary" />
      <Property Name="LogicalCallContext" Type="System.Runtime.Remoting.Messaging.LogicalCallContext" />
    </Properties>
    <Methods>
      <Method Name="RootSetObjectData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
          <Parameter Name="ctx" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
      <Method Name="ResolveMethod" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="GetObjectData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
      <Method Name="Init" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="get_ArgCount" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetArg" Return_type="System.Object">
        <Parameters>
          <Parameter Name="argNum" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetArgName" Return_type="System.String">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_Args" Return_type="System.Object[]">
        <Parameters />
      </Method>
      <Method Name="get_InArgCount" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetInArg" Return_type="System.Object">
        <Parameters>
          <Parameter Name="argNum" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetInArgName" Return_type="System.String">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_InArgs" Return_type="System.Object[]">
        <Parameters />
      </Method>
      <Method Name="get_MethodName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_TypeName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_MethodSignature" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_MethodBase" Return_type="System.Reflection.MethodBase">
        <Parameters />
      </Method>
      <Method Name="get_Uri" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Uri" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_HasVarArgs" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Properties" Return_type="System.Collections.IDictionary">
        <Parameters />
      </Method>
      <Method Name="get_LogicalCallContext" Return_type="System.Runtime.Remoting.Messaging.LogicalCallContext">
        <Parameters />
      </Method>
      <Method Name="HeaderHandler" Return_type="System.Object">
        <Parameters>
          <Parameter Name="h" Type="System.Runtime.Remoting.Messaging.Header[]" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Messaging.ConstructionCall">
    <Properties>
      <Property Name="CallSiteActivationAttributes" Type="System.Object[]" />
      <Property Name="ActivationType" Type="System.Type" />
      <Property Name="ActivationTypeName" Type="System.String" />
      <Property Name="ContextProperties" Type="System.Collections.IList" />
      <Property Name="Properties" Type="System.Collections.IDictionary" />
      <Property Name="Activator" Type="System.Runtime.Remoting.Activation.IActivator" />
      <Property Name="ArgCount" Type="System.Int32" />
      <Property Name="Args" Type="System.Object[]" />
      <Property Name="InArgCount" Type="System.Int32" />
      <Property Name="InArgs" Type="System.Object[]" />
      <Property Name="MethodName" Type="System.String" />
      <Property Name="TypeName" Type="System.String" />
      <Property Name="MethodSignature" Type="System.Object" />
      <Property Name="MethodBase" Type="System.Reflection.MethodBase" />
      <Property Name="Uri" Type="System.String" />
      <Property Name="HasVarArgs" Type="System.Boolean" />
      <Property Name="LogicalCallContext" Type="System.Runtime.Remoting.Messaging.LogicalCallContext" />
    </Properties>
    <Methods>
      <Method Name="get_CallSiteActivationAttributes" Return_type="System.Object[]">
        <Parameters />
      </Method>
      <Method Name="get_ActivationType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_ActivationTypeName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ContextProperties" Return_type="System.Collections.IList">
        <Parameters />
      </Method>
      <Method Name="get_Properties" Return_type="System.Collections.IDictionary">
        <Parameters />
      </Method>
      <Method Name="get_Activator" Return_type="System.Runtime.Remoting.Activation.IActivator">
        <Parameters />
      </Method>
      <Method Name="set_Activator" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Runtime.Remoting.Activation.IActivator" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Messaging.MethodResponse">
    <Properties>
      <Property Name="Uri" Type="System.String" />
      <Property Name="MethodName" Type="System.String" />
      <Property Name="TypeName" Type="System.String" />
      <Property Name="MethodSignature" Type="System.Object" />
      <Property Name="MethodBase" Type="System.Reflection.MethodBase" />
      <Property Name="HasVarArgs" Type="System.Boolean" />
      <Property Name="ArgCount" Type="System.Int32" />
      <Property Name="Args" Type="System.Object[]" />
      <Property Name="OutArgCount" Type="System.Int32" />
      <Property Name="OutArgs" Type="System.Object[]" />
      <Property Name="Exception" Type="System.Exception" />
      <Property Name="ReturnValue" Type="System.Object" />
      <Property Name="Properties" Type="System.Collections.IDictionary" />
      <Property Name="LogicalCallContext" Type="System.Runtime.Remoting.Messaging.LogicalCallContext" />
    </Properties>
    <Methods>
      <Method Name="HeaderHandler" Return_type="System.Object">
        <Parameters>
          <Parameter Name="h" Type="System.Runtime.Remoting.Messaging.Header[]" />
        </Parameters>
      </Method>
      <Method Name="RootSetObjectData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
          <Parameter Name="ctx" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
      <Method Name="GetObjectData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
      <Method Name="get_Uri" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Uri" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_MethodName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_TypeName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_MethodSignature" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_MethodBase" Return_type="System.Reflection.MethodBase">
        <Parameters />
      </Method>
      <Method Name="get_HasVarArgs" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_ArgCount" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetArg" Return_type="System.Object">
        <Parameters>
          <Parameter Name="argNum" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetArgName" Return_type="System.String">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_Args" Return_type="System.Object[]">
        <Parameters />
      </Method>
      <Method Name="get_OutArgCount" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetOutArg" Return_type="System.Object">
        <Parameters>
          <Parameter Name="argNum" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetOutArgName" Return_type="System.String">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_OutArgs" Return_type="System.Object[]">
        <Parameters />
      </Method>
      <Method Name="get_Exception" Return_type="System.Exception">
        <Parameters />
      </Method>
      <Method Name="get_ReturnValue" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_Properties" Return_type="System.Collections.IDictionary">
        <Parameters />
      </Method>
      <Method Name="get_LogicalCallContext" Return_type="System.Runtime.Remoting.Messaging.LogicalCallContext">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Messaging.ConstructionResponse">
    <Properties>
      <Property Name="Properties" Type="System.Collections.IDictionary" />
      <Property Name="Uri" Type="System.String" />
      <Property Name="MethodName" Type="System.String" />
      <Property Name="TypeName" Type="System.String" />
      <Property Name="MethodSignature" Type="System.Object" />
      <Property Name="MethodBase" Type="System.Reflection.MethodBase" />
      <Property Name="HasVarArgs" Type="System.Boolean" />
      <Property Name="ArgCount" Type="System.Int32" />
      <Property Name="Args" Type="System.Object[]" />
      <Property Name="OutArgCount" Type="System.Int32" />
      <Property Name="OutArgs" Type="System.Object[]" />
      <Property Name="Exception" Type="System.Exception" />
      <Property Name="ReturnValue" Type="System.Object" />
      <Property Name="LogicalCallContext" Type="System.Runtime.Remoting.Messaging.LogicalCallContext" />
    </Properties>
    <Methods>
      <Method Name="get_Properties" Return_type="System.Collections.IDictionary">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Messaging.InternalMessageWrapper">
    <Properties />
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Messaging.MethodCallMessageWrapper">
    <Properties>
      <Property Name="Uri" Type="System.String" />
      <Property Name="MethodName" Type="System.String" />
      <Property Name="TypeName" Type="System.String" />
      <Property Name="MethodSignature" Type="System.Object" />
      <Property Name="LogicalCallContext" Type="System.Runtime.Remoting.Messaging.LogicalCallContext" />
      <Property Name="MethodBase" Type="System.Reflection.MethodBase" />
      <Property Name="ArgCount" Type="System.Int32" />
      <Property Name="Args" Type="System.Object[]" />
      <Property Name="HasVarArgs" Type="System.Boolean" />
      <Property Name="InArgCount" Type="System.Int32" />
      <Property Name="InArgs" Type="System.Object[]" />
      <Property Name="Properties" Type="System.Collections.IDictionary" />
    </Properties>
    <Methods>
      <Method Name="get_Uri" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Uri" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_MethodName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_TypeName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_MethodSignature" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_LogicalCallContext" Return_type="System.Runtime.Remoting.Messaging.LogicalCallContext">
        <Parameters />
      </Method>
      <Method Name="get_MethodBase" Return_type="System.Reflection.MethodBase">
        <Parameters />
      </Method>
      <Method Name="get_ArgCount" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetArgName" Return_type="System.String">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetArg" Return_type="System.Object">
        <Parameters>
          <Parameter Name="argNum" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_Args" Return_type="System.Object[]">
        <Parameters />
      </Method>
      <Method Name="set_Args" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Object[]" />
        </Parameters>
      </Method>
      <Method Name="get_HasVarArgs" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_InArgCount" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetInArg" Return_type="System.Object">
        <Parameters>
          <Parameter Name="argNum" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetInArgName" Return_type="System.String">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_InArgs" Return_type="System.Object[]">
        <Parameters />
      </Method>
      <Method Name="get_Properties" Return_type="System.Collections.IDictionary">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Messaging.MethodReturnMessageWrapper">
    <Properties>
      <Property Name="Uri" Type="System.String" />
      <Property Name="MethodName" Type="System.String" />
      <Property Name="TypeName" Type="System.String" />
      <Property Name="MethodSignature" Type="System.Object" />
      <Property Name="LogicalCallContext" Type="System.Runtime.Remoting.Messaging.LogicalCallContext" />
      <Property Name="MethodBase" Type="System.Reflection.MethodBase" />
      <Property Name="ArgCount" Type="System.Int32" />
      <Property Name="Args" Type="System.Object[]" />
      <Property Name="HasVarArgs" Type="System.Boolean" />
      <Property Name="OutArgCount" Type="System.Int32" />
      <Property Name="OutArgs" Type="System.Object[]" />
      <Property Name="Exception" Type="System.Exception" />
      <Property Name="ReturnValue" Type="System.Object" />
      <Property Name="Properties" Type="System.Collections.IDictionary" />
    </Properties>
    <Methods>
      <Method Name="get_Uri" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="set_Uri" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_MethodName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_TypeName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_MethodSignature" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_LogicalCallContext" Return_type="System.Runtime.Remoting.Messaging.LogicalCallContext">
        <Parameters />
      </Method>
      <Method Name="get_MethodBase" Return_type="System.Reflection.MethodBase">
        <Parameters />
      </Method>
      <Method Name="get_ArgCount" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetArgName" Return_type="System.String">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetArg" Return_type="System.Object">
        <Parameters>
          <Parameter Name="argNum" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_Args" Return_type="System.Object[]">
        <Parameters />
      </Method>
      <Method Name="set_Args" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Object[]" />
        </Parameters>
      </Method>
      <Method Name="get_HasVarArgs" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_OutArgCount" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetOutArg" Return_type="System.Object">
        <Parameters>
          <Parameter Name="argNum" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetOutArgName" Return_type="System.String">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_OutArgs" Return_type="System.Object[]">
        <Parameters />
      </Method>
      <Method Name="get_Exception" Return_type="System.Exception">
        <Parameters />
      </Method>
      <Method Name="set_Exception" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Exception" />
        </Parameters>
      </Method>
      <Method Name="get_ReturnValue" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="set_ReturnValue" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="get_Properties" Return_type="System.Collections.IDictionary">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Messaging.OneWayAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Messaging.MessageSurrogateFilter">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="key" Type="System.String" />
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="key" Type="System.String" />
          <Parameter Name="value" Type="System.Object" />
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="object" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Messaging.RemotingSurrogateSelector">
    <Properties>
      <Property Name="Filter" Type="System.Runtime.Remoting.Messaging.MessageSurrogateFilter" />
    </Properties>
    <Methods>
      <Method Name="set_Filter" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Runtime.Remoting.Messaging.MessageSurrogateFilter" />
        </Parameters>
      </Method>
      <Method Name="get_Filter" Return_type="System.Runtime.Remoting.Messaging.MessageSurrogateFilter">
        <Parameters />
      </Method>
      <Method Name="SetRootObject" Return_type="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetRootObject" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="ChainSelector" Return_type="System.Void">
        <Parameters>
          <Parameter Name="selector" Type="System.Runtime.Serialization.ISurrogateSelector" />
        </Parameters>
      </Method>
      <Method Name="GetSurrogate" Return_type="System.Runtime.Serialization.ISerializationSurrogate">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
          <Parameter Name="ssout" Type="System.Runtime.Serialization.ISurrogateSelector&amp;" />
        </Parameters>
      </Method>
      <Method Name="GetNextSelector" Return_type="System.Runtime.Serialization.ISurrogateSelector">
        <Parameters />
      </Method>
      <Method Name="UseSoapFormat" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Messaging.Header">
    <Properties />
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Messaging.HeaderHandler">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" Return_type="System.Object">
        <Parameters>
          <Parameter Name="headers" Type="System.Runtime.Remoting.Messaging.Header[]" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="headers" Type="System.Runtime.Remoting.Messaging.Header[]" />
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="object" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" Return_type="System.Object">
        <Parameters>
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Messaging.CallContext">
    <Properties>
      <Property Name="HostContext" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="FreeNamedDataSlot" Return_type="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="LogicalGetData" Return_type="System.Object">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="get_HostContext" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="set_HostContext" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetData" Return_type="System.Object">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="SetData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="data" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="LogicalSetData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="data" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHeaders" Return_type="System.Runtime.Remoting.Messaging.Header[]">
        <Parameters />
      </Method>
      <Method Name="SetHeaders" Return_type="System.Void">
        <Parameters>
          <Parameter Name="headers" Type="System.Runtime.Remoting.Messaging.Header[]" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Messaging.LogicalCallContext">
    <Properties>
      <Property Name="HasInfo" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="GetObjectData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
      <Method Name="Clone" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_HasInfo" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="FreeNamedDataSlot" Return_type="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetData" Return_type="System.Object">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="SetData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="data" Type="System.Object" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Remoting.Activation.UrlAttribute">
    <Properties>
      <Property Name="UrlValue" Type="System.String" />
      <Property Name="Name" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="IsContextOK" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="ctx" Type="System.Runtime.Remoting.Contexts.Context" />
          <Parameter Name="msg" Type="System.Runtime.Remoting.Activation.IConstructionCallMessage" />
        </Parameters>
      </Method>
      <Method Name="GetPropertiesForNewContext" Return_type="System.Void">
        <Parameters>
          <Parameter Name="ctorMsg" Type="System.Runtime.Remoting.Activation.IConstructionCallMessage" />
        </Parameters>
      </Method>
      <Method Name="get_UrlValue" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.StringFreezingAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.ContractHelper">
    <Properties />
    <Methods>
      <Method Name="RaiseContractFailedEvent" Return_type="System.String">
        <Parameters>
          <Parameter Name="failureKind" Type="System.Diagnostics.Contracts.ContractFailureKind" />
          <Parameter Name="userMessage" Type="System.String" />
          <Parameter Name="conditionText" Type="System.String" />
          <Parameter Name="innerException" Type="System.Exception" />
        </Parameters>
      </Method>
      <Method Name="TriggerFailure" Return_type="System.Void">
        <Parameters>
          <Parameter Name="kind" Type="System.Diagnostics.Contracts.ContractFailureKind" />
          <Parameter Name="displayMessage" Type="System.String" />
          <Parameter Name="userMessage" Type="System.String" />
          <Parameter Name="conditionText" Type="System.String" />
          <Parameter Name="innerException" Type="System.Exception" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.AccessedThroughPropertyAttribute">
    <Properties>
      <Property Name="PropertyName" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_PropertyName" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.CallConvCdecl">
    <Properties />
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.CallConvStdcall">
    <Properties />
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.CallConvThiscall">
    <Properties />
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.CallConvFastcall">
    <Properties />
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.RuntimeHelpers">
    <Properties>
      <Property Name="OffsetToStringData" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="InitializeArray" Return_type="System.Void">
        <Parameters>
          <Parameter Name="array" Type="System.Array" />
          <Parameter Name="fldHandle" Type="System.RuntimeFieldHandle" />
        </Parameters>
      </Method>
      <Method Name="GetObjectValue" Return_type="System.Object">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="RunClassConstructor" Return_type="System.Void">
        <Parameters>
          <Parameter Name="type" Type="System.RuntimeTypeHandle" />
        </Parameters>
      </Method>
      <Method Name="RunModuleConstructor" Return_type="System.Void">
        <Parameters>
          <Parameter Name="module" Type="System.ModuleHandle" />
        </Parameters>
      </Method>
      <Method Name="PrepareMethod" Return_type="System.Void">
        <Parameters>
          <Parameter Name="method" Type="System.RuntimeMethodHandle" />
        </Parameters>
      </Method>
      <Method Name="PrepareMethod" Return_type="System.Void">
        <Parameters>
          <Parameter Name="method" Type="System.RuntimeMethodHandle" />
          <Parameter Name="instantiation" Type="System.RuntimeTypeHandle[]" />
        </Parameters>
      </Method>
      <Method Name="PrepareDelegate" Return_type="System.Void">
        <Parameters>
          <Parameter Name="d" Type="System.Delegate" />
        </Parameters>
      </Method>
      <Method Name="PrepareContractedDelegate" Return_type="System.Void">
        <Parameters>
          <Parameter Name="d" Type="System.Delegate" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="o" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="o1" Type="System.Object" />
          <Parameter Name="o2" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="get_OffsetToStringData" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="EnsureSufficientExecutionStack" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="ProbeForSufficientStack" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="PrepareConstrainedRegions" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="PrepareConstrainedRegionsNoOP" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="ExecuteCodeWithGuaranteedCleanup" Return_type="System.Void">
        <Parameters>
          <Parameter Name="code" Type="System.Runtime.CompilerServices.RuntimeHelpers+TryCode" />
          <Parameter Name="backoutCode" Type="System.Runtime.CompilerServices.RuntimeHelpers+CleanupCode" />
          <Parameter Name="userData" Type="System.Object" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.CompilerGeneratedAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.CustomConstantAttribute">
    <Properties>
      <Property Name="Value" Type="System.Object" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" Return_type="System.Object">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.DateTimeConstantAttribute">
    <Properties>
      <Property Name="Value" Type="System.Object" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" Return_type="System.Object">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.DiscardableAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.DecimalConstantAttribute">
    <Properties>
      <Property Name="Value" Type="System.Decimal" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" Return_type="System.Decimal">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.DisablePrivateReflectionAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.CompilationRelaxationsAttribute">
    <Properties>
      <Property Name="CompilationRelaxations" Type="System.Int32" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_CompilationRelaxations" Return_type="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.CompilerGlobalScopeAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.ExtensionAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.FixedBufferAttribute">
    <Properties>
      <Property Name="ElementType" Type="System.Type" />
      <Property Name="Length" Type="System.Int32" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_ElementType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_Length" Return_type="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.IndexerNameAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.InternalsVisibleToAttribute">
    <Properties>
      <Property Name="AssemblyName" Type="System.String" />
      <Property Name="AllInternalsVisible" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_AssemblyName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_AllInternalsVisible" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_AllInternalsVisible" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.IsVolatile">
    <Properties />
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.MethodImplAttribute">
    <Properties>
      <Property Name="Value" Type="System.Runtime.CompilerServices.MethodImplOptions" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" Return_type="System.Runtime.CompilerServices.MethodImplOptions">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.FixedAddressValueTypeAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.UnsafeValueTypeAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.RequiredAttributeAttribute">
    <Properties>
      <Property Name="RequiredContract" Type="System.Type" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_RequiredContract" Return_type="System.Type">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.DefaultDependencyAttribute">
    <Properties>
      <Property Name="LoadHint" Type="System.Runtime.CompilerServices.LoadHint" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_LoadHint" Return_type="System.Runtime.CompilerServices.LoadHint">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.DependencyAttribute">
    <Properties>
      <Property Name="DependentAssembly" Type="System.String" />
      <Property Name="LoadHint" Type="System.Runtime.CompilerServices.LoadHint" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_DependentAssembly" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_LoadHint" Return_type="System.Runtime.CompilerServices.LoadHint">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.CompilerMarshalOverride">
    <Properties />
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.HasCopySemanticsAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.IsBoxed">
    <Properties />
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.IsByValue">
    <Properties />
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.IsConst">
    <Properties />
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.IsExplicitlyDereferenced">
    <Properties />
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.IsImplicitlyDereferenced">
    <Properties />
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.IsJitIntrinsic">
    <Properties />
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.IsLong">
    <Properties />
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.IsPinned">
    <Properties />
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.IsSignUnspecifiedByte">
    <Properties />
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.IsUdtReturn">
    <Properties />
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.ScopelessEnumAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.SpecialNameAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.IsCopyConstructed">
    <Properties />
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.SuppressIldasmAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.NativeCppClassAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.TypeForwardedToAttribute">
    <Properties>
      <Property Name="Destination" Type="System.Type" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Destination" Return_type="System.Type">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.TypeForwardedFromAttribute">
    <Properties>
      <Property Name="AssemblyFullName" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_AssemblyFullName" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.ReferenceAssemblyAttribute">
    <Properties>
      <Property Name="Description" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Description" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.RuntimeCompatibilityAttribute">
    <Properties>
      <Property Name="WrapNonExceptionThrows" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_WrapNonExceptionThrows" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="set_WrapNonExceptionThrows" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.RuntimeWrappedException">
    <Properties>
      <Property Name="WrappedException" Type="System.Object" />
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_WrappedException" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="GetObjectData" Return_type="System.Void">
        <Parameters>
          <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
          <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.ConditionalWeakTable`2">
    <Properties />
    <Methods>
      <Method Name="TryGetValue" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="key" Type="TKey" />
          <Parameter Name="value" Type="TValue&amp;" />
        </Parameters>
      </Method>
      <Method Name="Add" Return_type="System.Void">
        <Parameters>
          <Parameter Name="key" Type="TKey" />
          <Parameter Name="value" Type="TValue" />
        </Parameters>
      </Method>
      <Method Name="Remove" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="key" Type="TKey" />
        </Parameters>
      </Method>
      <Method Name="GetValue" Return_type="TValue">
        <Parameters>
          <Parameter Name="key" Type="TKey" />
          <Parameter Name="createValueCallback" Type="System.Runtime.CompilerServices.ConditionalWeakTable`2+CreateValueCallback[TKey,TValue]" />
        </Parameters>
      </Method>
      <Method Name="GetOrCreateValue" Return_type="TValue">
        <Parameters>
          <Parameter Name="key" Type="TKey" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.CallerFilePathAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.CallerLineNumberAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.CallerMemberNameAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.StateMachineAttribute">
    <Properties>
      <Property Name="StateMachineType" Type="System.Type" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_StateMachineType" Return_type="System.Type">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.IteratorStateMachineAttribute">
    <Properties>
      <Property Name="StateMachineType" Type="System.Type" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.AsyncStateMachineAttribute">
    <Properties>
      <Property Name="StateMachineType" Type="System.Type" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.FormattableStringFactory">
    <Properties />
    <Methods>
      <Method Name="Create" Return_type="System.FormattableString">
        <Parameters>
          <Parameter Name="format" Type="System.String" />
          <Parameter Name="arguments" Type="System.Object[]" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.IDispatchConstantAttribute">
    <Properties>
      <Property Name="Value" Type="System.Object" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" Return_type="System.Object">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.CompilerServices.IUnknownConstantAttribute">
    <Properties>
      <Property Name="Value" Type="System.Object" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" Return_type="System.Object">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.UnmanagedFunctionPointerAttribute">
    <Properties>
      <Property Name="CallingConvention" Type="System.Runtime.InteropServices.CallingConvention" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_CallingConvention" Return_type="System.Runtime.InteropServices.CallingConvention">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.TypeIdentifierAttribute">
    <Properties>
      <Property Name="Scope" Type="System.String" />
      <Property Name="Identifier" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Scope" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_Identifier" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.AllowReversePInvokeCallsAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.DispIdAttribute">
    <Properties>
      <Property Name="Value" Type="System.Int32" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" Return_type="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.InterfaceTypeAttribute">
    <Properties>
      <Property Name="Value" Type="System.Runtime.InteropServices.ComInterfaceType" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" Return_type="System.Runtime.InteropServices.ComInterfaceType">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.ComDefaultInterfaceAttribute">
    <Properties>
      <Property Name="Value" Type="System.Type" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" Return_type="System.Type">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.ClassInterfaceAttribute">
    <Properties>
      <Property Name="Value" Type="System.Runtime.InteropServices.ClassInterfaceType" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" Return_type="System.Runtime.InteropServices.ClassInterfaceType">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.ComVisibleAttribute">
    <Properties>
      <Property Name="Value" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" Return_type="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.TypeLibImportClassAttribute">
    <Properties>
      <Property Name="Value" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.LCIDConversionAttribute">
    <Properties>
      <Property Name="Value" Type="System.Int32" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" Return_type="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.ComRegisterFunctionAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.ComUnregisterFunctionAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.ProgIdAttribute">
    <Properties>
      <Property Name="Value" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.ImportedFromTypeLibAttribute">
    <Properties>
      <Property Name="Value" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.IDispatchImplAttribute">
    <Properties>
      <Property Name="Value" Type="System.Runtime.InteropServices.IDispatchImplType" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" Return_type="System.Runtime.InteropServices.IDispatchImplType">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.ComSourceInterfacesAttribute">
    <Properties>
      <Property Name="Value" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.ComConversionLossAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.TypeLibTypeAttribute">
    <Properties>
      <Property Name="Value" Type="System.Runtime.InteropServices.TypeLibTypeFlags" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" Return_type="System.Runtime.InteropServices.TypeLibTypeFlags">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.TypeLibFuncAttribute">
    <Properties>
      <Property Name="Value" Type="System.Runtime.InteropServices.TypeLibFuncFlags" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" Return_type="System.Runtime.InteropServices.TypeLibFuncFlags">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.TypeLibVarAttribute">
    <Properties>
      <Property Name="Value" Type="System.Runtime.InteropServices.TypeLibVarFlags" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" Return_type="System.Runtime.InteropServices.TypeLibVarFlags">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.MarshalAsAttribute">
    <Properties>
      <Property Name="Value" Type="System.Runtime.InteropServices.UnmanagedType" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" Return_type="System.Runtime.InteropServices.UnmanagedType">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.ComImportAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.GuidAttribute">
    <Properties>
      <Property Name="Value" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.PreserveSigAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.InAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.OutAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.OptionalAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.DefaultDllImportSearchPathsAttribute">
    <Properties>
      <Property Name="Paths" Type="System.Runtime.InteropServices.DllImportSearchPath" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Paths" Return_type="System.Runtime.InteropServices.DllImportSearchPath">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.DllImportAttribute">
    <Properties>
      <Property Name="Value" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.StructLayoutAttribute">
    <Properties>
      <Property Name="Value" Type="System.Runtime.InteropServices.LayoutKind" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" Return_type="System.Runtime.InteropServices.LayoutKind">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.FieldOffsetAttribute">
    <Properties>
      <Property Name="Value" Type="System.Int32" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" Return_type="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.ComAliasNameAttribute">
    <Properties>
      <Property Name="Value" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.AutomationProxyAttribute">
    <Properties>
      <Property Name="Value" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Value" Return_type="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.PrimaryInteropAssemblyAttribute">
    <Properties>
      <Property Name="MajorVersion" Type="System.Int32" />
      <Property Name="MinorVersion" Type="System.Int32" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_MajorVersion" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_MinorVersion" Return_type="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.CoClassAttribute">
    <Properties>
      <Property Name="CoClass" Type="System.Type" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_CoClass" Return_type="System.Type">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.ComEventInterfaceAttribute">
    <Properties>
      <Property Name="SourceInterface" Type="System.Type" />
      <Property Name="EventProvider" Type="System.Type" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_SourceInterface" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_EventProvider" Return_type="System.Type">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.TypeLibVersionAttribute">
    <Properties>
      <Property Name="MajorVersion" Type="System.Int32" />
      <Property Name="MinorVersion" Type="System.Int32" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_MajorVersion" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_MinorVersion" Return_type="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.ComCompatibleVersionAttribute">
    <Properties>
      <Property Name="MajorVersion" Type="System.Int32" />
      <Property Name="MinorVersion" Type="System.Int32" />
      <Property Name="BuildNumber" Type="System.Int32" />
      <Property Name="RevisionNumber" Type="System.Int32" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_MajorVersion" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_MinorVersion" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_BuildNumber" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_RevisionNumber" Return_type="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.BestFitMappingAttribute">
    <Properties>
      <Property Name="BestFitMapping" Type="System.Boolean" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_BestFitMapping" Return_type="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.DefaultCharSetAttribute">
    <Properties>
      <Property Name="CharSet" Type="System.Runtime.InteropServices.CharSet" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_CharSet" Return_type="System.Runtime.InteropServices.CharSet">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.SetWin32ContextInIDispatchAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.ManagedToNativeComInteropStubAttribute">
    <Properties>
      <Property Name="ClassType" Type="System.Type" />
      <Property Name="MethodName" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_ClassType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_MethodName" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.COMException">
    <Properties>
      <Property Name="ErrorCode" Type="System.Int32" />
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.CriticalHandle">
    <Properties>
      <Property Name="IsClosed" Type="System.Boolean" />
      <Property Name="IsInvalid" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="get_IsClosed" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsInvalid" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Close" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Dispose" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="SetHandleAsInvalid" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.ExternalException">
    <Properties>
      <Property Name="ErrorCode" Type="System.Int32" />
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_ErrorCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.InvalidOleVariantTypeException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.Marshal">
    <Properties />
    <Methods>
      <Method Name="PtrToStringAnsi" Return_type="System.String">
        <Parameters>
          <Parameter Name="ptr" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="PtrToStringAnsi" Return_type="System.String">
        <Parameters>
          <Parameter Name="ptr" Type="System.IntPtr" />
          <Parameter Name="len" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="PtrToStringUni" Return_type="System.String">
        <Parameters>
          <Parameter Name="ptr" Type="System.IntPtr" />
          <Parameter Name="len" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="PtrToStringAuto" Return_type="System.String">
        <Parameters>
          <Parameter Name="ptr" Type="System.IntPtr" />
          <Parameter Name="len" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="PtrToStringUni" Return_type="System.String">
        <Parameters>
          <Parameter Name="ptr" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="PtrToStringAuto" Return_type="System.String">
        <Parameters>
          <Parameter Name="ptr" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="SizeOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="structure" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="SizeOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="structure" Type="T" />
        </Parameters>
      </Method>
      <Method Name="SizeOf" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="t" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="SizeOf" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="OffsetOf" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="t" Type="System.Type" />
          <Parameter Name="fieldName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="OffsetOf" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="fieldName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="UnsafeAddrOfPinnedArrayElement" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="arr" Type="System.Array" />
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="UnsafeAddrOfPinnedArrayElement" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="arr" Type="T[]" />
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Void">
        <Parameters>
          <Parameter Name="source" Type="System.Int32[]" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="destination" Type="System.IntPtr" />
          <Parameter Name="length" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Void">
        <Parameters>
          <Parameter Name="source" Type="System.Char[]" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="destination" Type="System.IntPtr" />
          <Parameter Name="length" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Void">
        <Parameters>
          <Parameter Name="source" Type="System.Int16[]" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="destination" Type="System.IntPtr" />
          <Parameter Name="length" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Void">
        <Parameters>
          <Parameter Name="source" Type="System.Int64[]" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="destination" Type="System.IntPtr" />
          <Parameter Name="length" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Void">
        <Parameters>
          <Parameter Name="source" Type="System.Single[]" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="destination" Type="System.IntPtr" />
          <Parameter Name="length" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Void">
        <Parameters>
          <Parameter Name="source" Type="System.Double[]" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="destination" Type="System.IntPtr" />
          <Parameter Name="length" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Void">
        <Parameters>
          <Parameter Name="source" Type="System.Byte[]" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="destination" Type="System.IntPtr" />
          <Parameter Name="length" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Void">
        <Parameters>
          <Parameter Name="source" Type="System.IntPtr[]" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="destination" Type="System.IntPtr" />
          <Parameter Name="length" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Void">
        <Parameters>
          <Parameter Name="source" Type="System.IntPtr" />
          <Parameter Name="destination" Type="System.Int32[]" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="length" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Void">
        <Parameters>
          <Parameter Name="source" Type="System.IntPtr" />
          <Parameter Name="destination" Type="System.Char[]" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="length" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Void">
        <Parameters>
          <Parameter Name="source" Type="System.IntPtr" />
          <Parameter Name="destination" Type="System.Int16[]" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="length" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Void">
        <Parameters>
          <Parameter Name="source" Type="System.IntPtr" />
          <Parameter Name="destination" Type="System.Int64[]" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="length" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Void">
        <Parameters>
          <Parameter Name="source" Type="System.IntPtr" />
          <Parameter Name="destination" Type="System.Single[]" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="length" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Void">
        <Parameters>
          <Parameter Name="source" Type="System.IntPtr" />
          <Parameter Name="destination" Type="System.Double[]" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="length" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Void">
        <Parameters>
          <Parameter Name="source" Type="System.IntPtr" />
          <Parameter Name="destination" Type="System.Byte[]" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="length" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Copy" Return_type="System.Void">
        <Parameters>
          <Parameter Name="source" Type="System.IntPtr" />
          <Parameter Name="destination" Type="System.IntPtr[]" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="length" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ReadByte" Return_type="System.Byte">
        <Parameters>
          <Parameter Name="ptr" Type="System.Object" />
          <Parameter Name="ofs" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ReadByte" Return_type="System.Byte">
        <Parameters>
          <Parameter Name="ptr" Type="System.IntPtr" />
          <Parameter Name="ofs" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ReadByte" Return_type="System.Byte">
        <Parameters>
          <Parameter Name="ptr" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="ReadInt16" Return_type="System.Int16">
        <Parameters>
          <Parameter Name="ptr" Type="System.Object" />
          <Parameter Name="ofs" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ReadInt16" Return_type="System.Int16">
        <Parameters>
          <Parameter Name="ptr" Type="System.IntPtr" />
          <Parameter Name="ofs" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ReadInt16" Return_type="System.Int16">
        <Parameters>
          <Parameter Name="ptr" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="ReadInt32" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="ptr" Type="System.Object" />
          <Parameter Name="ofs" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ReadInt32" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="ptr" Type="System.IntPtr" />
          <Parameter Name="ofs" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ReadInt32" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="ptr" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="ReadIntPtr" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="ptr" Type="System.Object" />
          <Parameter Name="ofs" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ReadIntPtr" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="ptr" Type="System.IntPtr" />
          <Parameter Name="ofs" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ReadIntPtr" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="ptr" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="ReadInt64" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="ptr" Type="System.Object" />
          <Parameter Name="ofs" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ReadInt64" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="ptr" Type="System.IntPtr" />
          <Parameter Name="ofs" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ReadInt64" Return_type="System.Int64">
        <Parameters>
          <Parameter Name="ptr" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="WriteByte" Return_type="System.Void">
        <Parameters>
          <Parameter Name="ptr" Type="System.IntPtr" />
          <Parameter Name="ofs" Type="System.Int32" />
          <Parameter Name="val" Type="System.Byte" />
        </Parameters>
      </Method>
      <Method Name="WriteByte" Return_type="System.Void">
        <Parameters>
          <Parameter Name="ptr" Type="System.Object" />
          <Parameter Name="ofs" Type="System.Int32" />
          <Parameter Name="val" Type="System.Byte" />
        </Parameters>
      </Method>
      <Method Name="WriteByte" Return_type="System.Void">
        <Parameters>
          <Parameter Name="ptr" Type="System.IntPtr" />
          <Parameter Name="val" Type="System.Byte" />
        </Parameters>
      </Method>
      <Method Name="WriteInt16" Return_type="System.Void">
        <Parameters>
          <Parameter Name="ptr" Type="System.IntPtr" />
          <Parameter Name="ofs" Type="System.Int32" />
          <Parameter Name="val" Type="System.Int16" />
        </Parameters>
      </Method>
      <Method Name="WriteInt16" Return_type="System.Void">
        <Parameters>
          <Parameter Name="ptr" Type="System.Object" />
          <Parameter Name="ofs" Type="System.Int32" />
          <Parameter Name="val" Type="System.Int16" />
        </Parameters>
      </Method>
      <Method Name="WriteInt16" Return_type="System.Void">
        <Parameters>
          <Parameter Name="ptr" Type="System.IntPtr" />
          <Parameter Name="val" Type="System.Int16" />
        </Parameters>
      </Method>
      <Method Name="WriteInt16" Return_type="System.Void">
        <Parameters>
          <Parameter Name="ptr" Type="System.IntPtr" />
          <Parameter Name="ofs" Type="System.Int32" />
          <Parameter Name="val" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="WriteInt16" Return_type="System.Void">
        <Parameters>
          <Parameter Name="ptr" Type="System.Object" />
          <Parameter Name="ofs" Type="System.Int32" />
          <Parameter Name="val" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="WriteInt16" Return_type="System.Void">
        <Parameters>
          <Parameter Name="ptr" Type="System.IntPtr" />
          <Parameter Name="val" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="WriteInt32" Return_type="System.Void">
        <Parameters>
          <Parameter Name="ptr" Type="System.IntPtr" />
          <Parameter Name="ofs" Type="System.Int32" />
          <Parameter Name="val" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="WriteInt32" Return_type="System.Void">
        <Parameters>
          <Parameter Name="ptr" Type="System.Object" />
          <Parameter Name="ofs" Type="System.Int32" />
          <Parameter Name="val" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="WriteInt32" Return_type="System.Void">
        <Parameters>
          <Parameter Name="ptr" Type="System.IntPtr" />
          <Parameter Name="val" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="WriteIntPtr" Return_type="System.Void">
        <Parameters>
          <Parameter Name="ptr" Type="System.IntPtr" />
          <Parameter Name="ofs" Type="System.Int32" />
          <Parameter Name="val" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="WriteIntPtr" Return_type="System.Void">
        <Parameters>
          <Parameter Name="ptr" Type="System.Object" />
          <Parameter Name="ofs" Type="System.Int32" />
          <Parameter Name="val" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="WriteIntPtr" Return_type="System.Void">
        <Parameters>
          <Parameter Name="ptr" Type="System.IntPtr" />
          <Parameter Name="val" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="WriteInt64" Return_type="System.Void">
        <Parameters>
          <Parameter Name="ptr" Type="System.IntPtr" />
          <Parameter Name="ofs" Type="System.Int32" />
          <Parameter Name="val" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="WriteInt64" Return_type="System.Void">
        <Parameters>
          <Parameter Name="ptr" Type="System.Object" />
          <Parameter Name="ofs" Type="System.Int32" />
          <Parameter Name="val" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="WriteInt64" Return_type="System.Void">
        <Parameters>
          <Parameter Name="ptr" Type="System.IntPtr" />
          <Parameter Name="val" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="GetLastWin32Error" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetHRForLastWin32Error" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Prelink" Return_type="System.Void">
        <Parameters>
          <Parameter Name="m" Type="System.Reflection.MethodInfo" />
        </Parameters>
      </Method>
      <Method Name="PrelinkAll" Return_type="System.Void">
        <Parameters>
          <Parameter Name="c" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="NumParamBytes" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="m" Type="System.Reflection.MethodInfo" />
        </Parameters>
      </Method>
      <Method Name="GetExceptionPointers" Return_type="System.IntPtr">
        <Parameters />
      </Method>
      <Method Name="GetExceptionCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="StructureToPtr" Return_type="System.Void">
        <Parameters>
          <Parameter Name="structure" Type="System.Object" />
          <Parameter Name="ptr" Type="System.IntPtr" />
          <Parameter Name="fDeleteOld" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="StructureToPtr" Return_type="System.Void">
        <Parameters>
          <Parameter Name="structure" Type="T" />
          <Parameter Name="ptr" Type="System.IntPtr" />
          <Parameter Name="fDeleteOld" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="PtrToStructure" Return_type="System.Void">
        <Parameters>
          <Parameter Name="ptr" Type="System.IntPtr" />
          <Parameter Name="structure" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="PtrToStructure" Return_type="System.Void">
        <Parameters>
          <Parameter Name="ptr" Type="System.IntPtr" />
          <Parameter Name="structure" Type="T" />
        </Parameters>
      </Method>
      <Method Name="PtrToStructure" Return_type="System.Object">
        <Parameters>
          <Parameter Name="ptr" Type="System.IntPtr" />
          <Parameter Name="structureType" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="PtrToStructure" Return_type="T">
        <Parameters>
          <Parameter Name="ptr" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="DestroyStructure" Return_type="System.Void">
        <Parameters>
          <Parameter Name="ptr" Type="System.IntPtr" />
          <Parameter Name="structuretype" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="DestroyStructure" Return_type="System.Void">
        <Parameters>
          <Parameter Name="ptr" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="GetHINSTANCE" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="m" Type="System.Reflection.Module" />
        </Parameters>
      </Method>
      <Method Name="ThrowExceptionForHR" Return_type="System.Void">
        <Parameters>
          <Parameter Name="errorCode" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ThrowExceptionForHR" Return_type="System.Void">
        <Parameters>
          <Parameter Name="errorCode" Type="System.Int32" />
          <Parameter Name="errorInfo" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="GetExceptionForHR" Return_type="System.Exception">
        <Parameters>
          <Parameter Name="errorCode" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetExceptionForHR" Return_type="System.Exception">
        <Parameters>
          <Parameter Name="errorCode" Type="System.Int32" />
          <Parameter Name="errorInfo" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="GetHRForException" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="e" Type="System.Exception" />
        </Parameters>
      </Method>
      <Method Name="GetUnmanagedThunkForManagedMethodPtr" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="pfnMethodToWrap" Type="System.IntPtr" />
          <Parameter Name="pbSignature" Type="System.IntPtr" />
          <Parameter Name="cbSignature" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetManagedThunkForUnmanagedMethodPtr" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="pfnMethodToWrap" Type="System.IntPtr" />
          <Parameter Name="pbSignature" Type="System.IntPtr" />
          <Parameter Name="cbSignature" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetThreadFromFiberCookie" Return_type="System.Threading.Thread">
        <Parameters>
          <Parameter Name="cookie" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="AllocHGlobal" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="cb" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="AllocHGlobal" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="cb" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="FreeHGlobal" Return_type="System.Void">
        <Parameters>
          <Parameter Name="hglobal" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="ReAllocHGlobal" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="pv" Type="System.IntPtr" />
          <Parameter Name="cb" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="StringToHGlobalAnsi" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="s" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="StringToHGlobalUni" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="s" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="StringToHGlobalAuto" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="s" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetTypeLibName" Return_type="System.String">
        <Parameters>
          <Parameter Name="pTLB" Type="System.Runtime.InteropServices.UCOMITypeLib" />
        </Parameters>
      </Method>
      <Method Name="GetTypeLibName" Return_type="System.String">
        <Parameters>
          <Parameter Name="typelib" Type="System.Runtime.InteropServices.ComTypes.ITypeLib" />
        </Parameters>
      </Method>
      <Method Name="GetTypeLibGuid" Return_type="System.Guid">
        <Parameters>
          <Parameter Name="pTLB" Type="System.Runtime.InteropServices.UCOMITypeLib" />
        </Parameters>
      </Method>
      <Method Name="GetTypeLibGuid" Return_type="System.Guid">
        <Parameters>
          <Parameter Name="typelib" Type="System.Runtime.InteropServices.ComTypes.ITypeLib" />
        </Parameters>
      </Method>
      <Method Name="GetTypeLibLcid" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="pTLB" Type="System.Runtime.InteropServices.UCOMITypeLib" />
        </Parameters>
      </Method>
      <Method Name="GetTypeLibLcid" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="typelib" Type="System.Runtime.InteropServices.ComTypes.ITypeLib" />
        </Parameters>
      </Method>
      <Method Name="GetTypeLibGuidForAssembly" Return_type="System.Guid">
        <Parameters>
          <Parameter Name="asm" Type="System.Reflection.Assembly" />
        </Parameters>
      </Method>
      <Method Name="GetTypeLibVersionForAssembly" Return_type="System.Void">
        <Parameters>
          <Parameter Name="inputAssembly" Type="System.Reflection.Assembly" />
          <Parameter Name="majorVersion" Type="System.Int32&amp;" />
          <Parameter Name="minorVersion" Type="System.Int32&amp;" />
        </Parameters>
      </Method>
      <Method Name="GetTypeInfoName" Return_type="System.String">
        <Parameters>
          <Parameter Name="pTI" Type="System.Runtime.InteropServices.UCOMITypeInfo" />
        </Parameters>
      </Method>
      <Method Name="GetTypeInfoName" Return_type="System.String">
        <Parameters>
          <Parameter Name="typeInfo" Type="System.Runtime.InteropServices.ComTypes.ITypeInfo" />
        </Parameters>
      </Method>
      <Method Name="GetTypeForITypeInfo" Return_type="System.Type">
        <Parameters>
          <Parameter Name="piTypeInfo" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="GetTypeFromCLSID" Return_type="System.Type">
        <Parameters>
          <Parameter Name="clsid" Type="System.Guid" />
        </Parameters>
      </Method>
      <Method Name="GetITypeInfoForType" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="t" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetIUnknownForObject" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="o" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetIUnknownForObjectInContext" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="o" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetIDispatchForObject" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="o" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetIDispatchForObjectInContext" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="o" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetComInterfaceForObject" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="o" Type="System.Object" />
          <Parameter Name="T" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetComInterfaceForObject" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="o" Type="T" />
        </Parameters>
      </Method>
      <Method Name="GetComInterfaceForObject" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="o" Type="System.Object" />
          <Parameter Name="T" Type="System.Type" />
          <Parameter Name="mode" Type="System.Runtime.InteropServices.CustomQueryInterfaceMode" />
        </Parameters>
      </Method>
      <Method Name="GetComInterfaceForObjectInContext" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="o" Type="System.Object" />
          <Parameter Name="t" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetObjectForIUnknown" Return_type="System.Object">
        <Parameters>
          <Parameter Name="pUnk" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="GetUniqueObjectForIUnknown" Return_type="System.Object">
        <Parameters>
          <Parameter Name="unknown" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="GetTypedObjectForIUnknown" Return_type="System.Object">
        <Parameters>
          <Parameter Name="pUnk" Type="System.IntPtr" />
          <Parameter Name="t" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="CreateAggregatedObject" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="pOuter" Type="System.IntPtr" />
          <Parameter Name="o" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="CreateAggregatedObject" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="pOuter" Type="System.IntPtr" />
          <Parameter Name="o" Type="T" />
        </Parameters>
      </Method>
      <Method Name="CleanupUnusedObjectsInCurrentContext" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="AreComObjectsAvailableForCleanup" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="IsComObject" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="o" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="AllocCoTaskMem" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="cb" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="StringToCoTaskMemUni" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="s" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="StringToCoTaskMemAuto" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="s" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="StringToCoTaskMemAnsi" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="s" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="FreeCoTaskMem" Return_type="System.Void">
        <Parameters>
          <Parameter Name="ptr" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="ReAllocCoTaskMem" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="pv" Type="System.IntPtr" />
          <Parameter Name="cb" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ReleaseComObject" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="o" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="FinalReleaseComObject" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="o" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetComObjectData" Return_type="System.Object">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
          <Parameter Name="key" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="SetComObjectData" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
          <Parameter Name="key" Type="System.Object" />
          <Parameter Name="data" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="CreateWrapperOfType" Return_type="System.Object">
        <Parameters>
          <Parameter Name="o" Type="System.Object" />
          <Parameter Name="t" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="CreateWrapperOfType" Return_type="TWrapper">
        <Parameters>
          <Parameter Name="o" Type="T" />
        </Parameters>
      </Method>
      <Method Name="ReleaseThreadCache" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="IsTypeVisibleFromCom" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="t" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="QueryInterface" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="pUnk" Type="System.IntPtr" />
          <Parameter Name="iid" Type="System.Guid&amp;" />
          <Parameter Name="ppv" Type="System.IntPtr&amp;" />
        </Parameters>
      </Method>
      <Method Name="AddRef" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="pUnk" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="Release" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="pUnk" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="FreeBSTR" Return_type="System.Void">
        <Parameters>
          <Parameter Name="ptr" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="StringToBSTR" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="s" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="PtrToStringBSTR" Return_type="System.String">
        <Parameters>
          <Parameter Name="ptr" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="GetNativeVariantForObject" Return_type="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="System.Object" />
          <Parameter Name="pDstNativeVariant" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="GetNativeVariantForObject" Return_type="System.Void">
        <Parameters>
          <Parameter Name="obj" Type="T" />
          <Parameter Name="pDstNativeVariant" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="GetObjectForNativeVariant" Return_type="System.Object">
        <Parameters>
          <Parameter Name="pSrcNativeVariant" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="GetObjectForNativeVariant" Return_type="T">
        <Parameters>
          <Parameter Name="pSrcNativeVariant" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="GetObjectsForNativeVariants" Return_type="System.Object[]">
        <Parameters>
          <Parameter Name="aSrcNativeVariant" Type="System.IntPtr" />
          <Parameter Name="cVars" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetObjectsForNativeVariants" Return_type="T[]">
        <Parameters>
          <Parameter Name="aSrcNativeVariant" Type="System.IntPtr" />
          <Parameter Name="cVars" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetStartComSlot" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="t" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetEndComSlot" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="t" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetMethodInfoForComSlot" Return_type="System.Reflection.MemberInfo">
        <Parameters>
          <Parameter Name="t" Type="System.Type" />
          <Parameter Name="slot" Type="System.Int32" />
          <Parameter Name="memberType" Type="System.Runtime.InteropServices.ComMemberType&amp;" />
        </Parameters>
      </Method>
      <Method Name="GetComSlotForMethodInfo" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="m" Type="System.Reflection.MemberInfo" />
        </Parameters>
      </Method>
      <Method Name="GenerateGuidForType" Return_type="System.Guid">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GenerateProgIdForType" Return_type="System.String">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="BindToMoniker" Return_type="System.Object">
        <Parameters>
          <Parameter Name="monikerName" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetActiveObject" Return_type="System.Object">
        <Parameters>
          <Parameter Name="progID" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="ChangeWrapperHandleStrength" Return_type="System.Void">
        <Parameters>
          <Parameter Name="otp" Type="System.Object" />
          <Parameter Name="fIsWeak" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetDelegateForFunctionPointer" Return_type="System.Delegate">
        <Parameters>
          <Parameter Name="ptr" Type="System.IntPtr" />
          <Parameter Name="t" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="GetDelegateForFunctionPointer" Return_type="TDelegate">
        <Parameters>
          <Parameter Name="ptr" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="GetFunctionPointerForDelegate" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="d" Type="System.Delegate" />
        </Parameters>
      </Method>
      <Method Name="GetFunctionPointerForDelegate" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="d" Type="TDelegate" />
        </Parameters>
      </Method>
      <Method Name="SecureStringToBSTR" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="s" Type="System.Security.SecureString" />
        </Parameters>
      </Method>
      <Method Name="SecureStringToCoTaskMemAnsi" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="s" Type="System.Security.SecureString" />
        </Parameters>
      </Method>
      <Method Name="SecureStringToCoTaskMemUnicode" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="s" Type="System.Security.SecureString" />
        </Parameters>
      </Method>
      <Method Name="ZeroFreeBSTR" Return_type="System.Void">
        <Parameters>
          <Parameter Name="s" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="ZeroFreeCoTaskMemAnsi" Return_type="System.Void">
        <Parameters>
          <Parameter Name="s" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="ZeroFreeCoTaskMemUnicode" Return_type="System.Void">
        <Parameters>
          <Parameter Name="s" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="SecureStringToGlobalAllocAnsi" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="s" Type="System.Security.SecureString" />
        </Parameters>
      </Method>
      <Method Name="SecureStringToGlobalAllocUnicode" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="s" Type="System.Security.SecureString" />
        </Parameters>
      </Method>
      <Method Name="ZeroFreeGlobalAllocAnsi" Return_type="System.Void">
        <Parameters>
          <Parameter Name="s" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="ZeroFreeGlobalAllocUnicode" Return_type="System.Void">
        <Parameters>
          <Parameter Name="s" Type="System.IntPtr" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.MarshalDirectiveException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.RuntimeEnvironment">
    <Properties>
      <Property Name="SystemConfigurationFile" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="FromGlobalAccessCache" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="a" Type="System.Reflection.Assembly" />
        </Parameters>
      </Method>
      <Method Name="GetSystemVersion" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetRuntimeDirectory" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_SystemConfigurationFile" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetRuntimeInterfaceAsIntPtr" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="clsid" Type="System.Guid" />
          <Parameter Name="riid" Type="System.Guid" />
        </Parameters>
      </Method>
      <Method Name="GetRuntimeInterfaceAsObject" Return_type="System.Object">
        <Parameters>
          <Parameter Name="clsid" Type="System.Guid" />
          <Parameter Name="riid" Type="System.Guid" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.SEHException">
    <Properties>
      <Property Name="ErrorCode" Type="System.Int32" />
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="CanResume" Return_type="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.SafeBuffer">
    <Properties>
      <Property Name="ByteLength" Type="System.UInt64" />
      <Property Name="IsInvalid" Type="System.Boolean" />
      <Property Name="IsClosed" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="AcquirePointer" Return_type="System.Void">
        <Parameters>
          <Parameter Name="pointer" Type="System.Byte*&amp;" />
        </Parameters>
      </Method>
      <Method Name="Initialize" Return_type="System.Void">
        <Parameters>
          <Parameter Name="numBytes" Type="System.UInt64" />
        </Parameters>
      </Method>
      <Method Name="Initialize" Return_type="System.Void">
        <Parameters>
          <Parameter Name="numElements" Type="System.UInt32" />
          <Parameter Name="sizeOfEachElement" Type="System.UInt32" />
        </Parameters>
      </Method>
      <Method Name="Initialize" Return_type="System.Void">
        <Parameters>
          <Parameter Name="numElements" Type="System.UInt32" />
        </Parameters>
      </Method>
      <Method Name="ReleasePointer" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Read" Return_type="T">
        <Parameters>
          <Parameter Name="byteOffset" Type="System.UInt64" />
        </Parameters>
      </Method>
      <Method Name="ReadArray" Return_type="System.Void">
        <Parameters>
          <Parameter Name="byteOffset" Type="System.UInt64" />
          <Parameter Name="array" Type="T[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Write" Return_type="System.Void">
        <Parameters>
          <Parameter Name="byteOffset" Type="System.UInt64" />
          <Parameter Name="value" Type="T" />
        </Parameters>
      </Method>
      <Method Name="WriteArray" Return_type="System.Void">
        <Parameters>
          <Parameter Name="byteOffset" Type="System.UInt64" />
          <Parameter Name="array" Type="T[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_ByteLength" Return_type="System.UInt64">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.SafeHandle">
    <Properties>
      <Property Name="IsClosed" Type="System.Boolean" />
      <Property Name="IsInvalid" Type="System.Boolean" />
    </Properties>
    <Methods>
      <Method Name="DangerousGetHandle" Return_type="System.IntPtr">
        <Parameters />
      </Method>
      <Method Name="get_IsClosed" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsInvalid" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="Close" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="Dispose" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="SetHandleAsInvalid" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="DangerousAddRef" Return_type="System.Void">
        <Parameters>
          <Parameter Name="success" Type="System.Boolean&amp;" />
        </Parameters>
      </Method>
      <Method Name="DangerousRelease" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.BStrWrapper">
    <Properties>
      <Property Name="WrappedObject" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_WrappedObject" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.CurrencyWrapper">
    <Properties>
      <Property Name="WrappedObject" Type="System.Decimal" />
    </Properties>
    <Methods>
      <Method Name="get_WrappedObject" Return_type="System.Decimal">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.DispatchWrapper">
    <Properties>
      <Property Name="WrappedObject" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_WrappedObject" Return_type="System.Object">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.ErrorWrapper">
    <Properties>
      <Property Name="ErrorCode" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_ErrorCode" Return_type="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.UnknownWrapper">
    <Properties>
      <Property Name="WrappedObject" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_WrappedObject" Return_type="System.Object">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.VariantWrapper">
    <Properties>
      <Property Name="WrappedObject" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_WrappedObject" Return_type="System.Object">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.ExtensibleClassFactory">
    <Properties />
    <Methods>
      <Method Name="RegisterObjectCreationCallback" Return_type="System.Void">
        <Parameters>
          <Parameter Name="callback" Type="System.Runtime.InteropServices.ObjectCreationDelegate" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.InvalidComObjectException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.ObjectCreationDelegate">
    <Properties>
      <Property Name="Method" Type="System.Reflection.MethodInfo" />
      <Property Name="Target" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="Invoke" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="aggregator" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="BeginInvoke" Return_type="System.IAsyncResult">
        <Parameters>
          <Parameter Name="aggregator" Type="System.IntPtr" />
          <Parameter Name="callback" Type="System.AsyncCallback" />
          <Parameter Name="object" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="EndInvoke" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="result" Type="System.IAsyncResult" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.RegistrationServices">
    <Properties />
    <Methods>
      <Method Name="RegisterAssembly" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="assembly" Type="System.Reflection.Assembly" />
          <Parameter Name="flags" Type="System.Runtime.InteropServices.AssemblyRegistrationFlags" />
        </Parameters>
      </Method>
      <Method Name="UnregisterAssembly" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        </Parameters>
      </Method>
      <Method Name="GetRegistrableTypesInAssembly" Return_type="System.Type[]">
        <Parameters>
          <Parameter Name="assembly" Type="System.Reflection.Assembly" />
        </Parameters>
      </Method>
      <Method Name="GetProgIdForType" Return_type="System.String">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="RegisterTypeForComClients" Return_type="System.Void">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
          <Parameter Name="g" Type="System.Guid&amp;" />
        </Parameters>
      </Method>
      <Method Name="GetManagedCategoryGuid" Return_type="System.Guid">
        <Parameters />
      </Method>
      <Method Name="TypeRequiresRegistration" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="TypeRepresentsComType" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="RegisterTypeForComClients" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
          <Parameter Name="classContext" Type="System.Runtime.InteropServices.RegistrationClassContext" />
          <Parameter Name="flags" Type="System.Runtime.InteropServices.RegistrationConnectionType" />
        </Parameters>
      </Method>
      <Method Name="UnregisterTypeForComClients" Return_type="System.Void">
        <Parameters>
          <Parameter Name="cookie" Type="System.Int32" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.SafeArrayRankMismatchException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.SafeArrayTypeMismatchException">
    <Properties>
      <Property Name="Message" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.TypeLibConverter">
    <Properties />
    <Methods>
      <Method Name="ConvertTypeLibToAssembly" Return_type="System.Reflection.Emit.AssemblyBuilder">
        <Parameters>
          <Parameter Name="typeLib" Type="System.Object" />
          <Parameter Name="asmFileName" Type="System.String" />
          <Parameter Name="flags" Type="System.Int32" />
          <Parameter Name="notifySink" Type="System.Runtime.InteropServices.ITypeLibImporterNotifySink" />
          <Parameter Name="publicKey" Type="System.Byte[]" />
          <Parameter Name="keyPair" Type="System.Reflection.StrongNameKeyPair" />
          <Parameter Name="unsafeInterfaces" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="ConvertTypeLibToAssembly" Return_type="System.Reflection.Emit.AssemblyBuilder">
        <Parameters>
          <Parameter Name="typeLib" Type="System.Object" />
          <Parameter Name="asmFileName" Type="System.String" />
          <Parameter Name="flags" Type="System.Runtime.InteropServices.TypeLibImporterFlags" />
          <Parameter Name="notifySink" Type="System.Runtime.InteropServices.ITypeLibImporterNotifySink" />
          <Parameter Name="publicKey" Type="System.Byte[]" />
          <Parameter Name="keyPair" Type="System.Reflection.StrongNameKeyPair" />
          <Parameter Name="asmNamespace" Type="System.String" />
          <Parameter Name="asmVersion" Type="System.Version" />
        </Parameters>
      </Method>
      <Method Name="ConvertAssemblyToTypeLib" Return_type="System.Object">
        <Parameters>
          <Parameter Name="assembly" Type="System.Reflection.Assembly" />
          <Parameter Name="strTypeLibName" Type="System.String" />
          <Parameter Name="flags" Type="System.Runtime.InteropServices.TypeLibExporterFlags" />
          <Parameter Name="notifySink" Type="System.Runtime.InteropServices.ITypeLibExporterNotifySink" />
        </Parameters>
      </Method>
      <Method Name="GetPrimaryInteropAssembly" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="g" Type="System.Guid" />
          <Parameter Name="major" Type="System.Int32" />
          <Parameter Name="minor" Type="System.Int32" />
          <Parameter Name="lcid" Type="System.Int32" />
          <Parameter Name="asmName" Type="System.String&amp;" />
          <Parameter Name="asmCodeBase" Type="System.String&amp;" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.ComEventsHelper">
    <Properties />
    <Methods>
      <Method Name="Combine" Return_type="System.Void">
        <Parameters>
          <Parameter Name="rcw" Type="System.Object" />
          <Parameter Name="iid" Type="System.Guid" />
          <Parameter Name="dispid" Type="System.Int32" />
          <Parameter Name="d" Type="System.Delegate" />
        </Parameters>
      </Method>
      <Method Name="Remove" Return_type="System.Delegate">
        <Parameters>
          <Parameter Name="rcw" Type="System.Object" />
          <Parameter Name="iid" Type="System.Guid" />
          <Parameter Name="dispid" Type="System.Int32" />
          <Parameter Name="d" Type="System.Delegate" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.WindowsRuntime.DefaultInterfaceAttribute">
    <Properties>
      <Property Name="DefaultInterface" Type="System.Type" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_DefaultInterface" Return_type="System.Type">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.WindowsRuntime.InterfaceImplementedInVersionAttribute">
    <Properties>
      <Property Name="InterfaceType" Type="System.Type" />
      <Property Name="MajorVersion" Type="System.Byte" />
      <Property Name="MinorVersion" Type="System.Byte" />
      <Property Name="BuildVersion" Type="System.Byte" />
      <Property Name="RevisionVersion" Type="System.Byte" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_InterfaceType" Return_type="System.Type">
        <Parameters />
      </Method>
      <Method Name="get_MajorVersion" Return_type="System.Byte">
        <Parameters />
      </Method>
      <Method Name="get_MinorVersion" Return_type="System.Byte">
        <Parameters />
      </Method>
      <Method Name="get_BuildVersion" Return_type="System.Byte">
        <Parameters />
      </Method>
      <Method Name="get_RevisionVersion" Return_type="System.Byte">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.WindowsRuntime.ReadOnlyArrayAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.WindowsRuntime.WriteOnlyArrayAttribute">
    <Properties>
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods />
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.WindowsRuntime.ReturnValueNameAttribute">
    <Properties>
      <Property Name="Name" Type="System.String" />
      <Property Name="TypeId" Type="System.Object" />
    </Properties>
    <Methods>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1">
    <Properties>
      <Property Name="InvocationList" Type="T" />
    </Properties>
    <Methods>
      <Method Name="get_InvocationList" Return_type="T">
        <Parameters />
      </Method>
      <Method Name="set_InvocationList" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="T" />
        </Parameters>
      </Method>
      <Method Name="AddEventHandler" Return_type="System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken">
        <Parameters>
          <Parameter Name="handler" Type="T" />
        </Parameters>
      </Method>
      <Method Name="RemoveEventHandler" Return_type="System.Void">
        <Parameters>
          <Parameter Name="token" Type="System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken" />
        </Parameters>
      </Method>
      <Method Name="RemoveEventHandler" Return_type="System.Void">
        <Parameters>
          <Parameter Name="handler" Type="T" />
        </Parameters>
      </Method>
      <Method Name="GetOrCreateEventRegistrationTokenTable" Return_type="System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1[T]">
        <Parameters>
          <Parameter Name="refEventTable" Type="System.Runtime.InteropServices.WindowsRuntime.EventRegistrationTokenTable`1[T]&amp;" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMarshal">
    <Properties />
    <Methods>
      <Method Name="AddEventHandler" Return_type="System.Void">
        <Parameters>
          <Parameter Name="addMethod" Type="System.Func`2[T,System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken]" />
          <Parameter Name="removeMethod" Type="System.Action`1[System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken]" />
          <Parameter Name="handler" Type="T" />
        </Parameters>
      </Method>
      <Method Name="RemoveEventHandler" Return_type="System.Void">
        <Parameters>
          <Parameter Name="removeMethod" Type="System.Action`1[System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken]" />
          <Parameter Name="handler" Type="T" />
        </Parameters>
      </Method>
      <Method Name="RemoveAllEventHandlers" Return_type="System.Void">
        <Parameters>
          <Parameter Name="removeMethod" Type="System.Action`1[System.Runtime.InteropServices.WindowsRuntime.EventRegistrationToken]" />
        </Parameters>
      </Method>
      <Method Name="GetActivationFactory" Return_type="System.Runtime.InteropServices.WindowsRuntime.IActivationFactory">
        <Parameters>
          <Parameter Name="type" Type="System.Type" />
        </Parameters>
      </Method>
      <Method Name="StringToHString" Return_type="System.IntPtr">
        <Parameters>
          <Parameter Name="s" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="PtrToStringHString" Return_type="System.String">
        <Parameters>
          <Parameter Name="ptr" Type="System.IntPtr" />
        </Parameters>
      </Method>
      <Method Name="FreeHString" Return_type="System.Void">
        <Parameters>
          <Parameter Name="ptr" Type="System.IntPtr" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.WindowsRuntime.WindowsRuntimeMetadata">
    <Properties />
    <Methods>
      <Method Name="ResolveNamespace" Return_type="System.Collections.Generic.IEnumerable`1[System.String]">
        <Parameters>
          <Parameter Name="namespaceName" Type="System.String" />
          <Parameter Name="packageGraphFilePaths" Type="System.Collections.Generic.IEnumerable`1[System.String]" />
        </Parameters>
      </Method>
      <Method Name="ResolveNamespace" Return_type="System.Collections.Generic.IEnumerable`1[System.String]">
        <Parameters>
          <Parameter Name="namespaceName" Type="System.String" />
          <Parameter Name="windowsSdkFilePath" Type="System.String" />
          <Parameter Name="packageGraphFilePaths" Type="System.Collections.Generic.IEnumerable`1[System.String]" />
        </Parameters>
      </Method>
      <Method Name="add_ReflectionOnlyNamespaceResolve" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.EventHandler`1[System.Runtime.InteropServices.WindowsRuntime.NamespaceResolveEventArgs]" />
        </Parameters>
      </Method>
      <Method Name="remove_ReflectionOnlyNamespaceResolve" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.EventHandler`1[System.Runtime.InteropServices.WindowsRuntime.NamespaceResolveEventArgs]" />
        </Parameters>
      </Method>
      <Method Name="add_DesignerNamespaceResolve" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.EventHandler`1[System.Runtime.InteropServices.WindowsRuntime.DesignerNamespaceResolveEventArgs]" />
        </Parameters>
      </Method>
      <Method Name="remove_DesignerNamespaceResolve" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.EventHandler`1[System.Runtime.InteropServices.WindowsRuntime.DesignerNamespaceResolveEventArgs]" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.WindowsRuntime.NamespaceResolveEventArgs">
    <Properties>
      <Property Name="NamespaceName" Type="System.String" />
      <Property Name="RequestingAssembly" Type="System.Reflection.Assembly" />
      <Property Name="ResolvedAssemblies" Type="System.Collections.ObjectModel.Collection`1[System.Reflection.Assembly]" />
    </Properties>
    <Methods>
      <Method Name="get_NamespaceName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_RequestingAssembly" Return_type="System.Reflection.Assembly">
        <Parameters />
      </Method>
      <Method Name="get_ResolvedAssemblies" Return_type="System.Collections.ObjectModel.Collection`1[System.Reflection.Assembly]">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.InteropServices.WindowsRuntime.DesignerNamespaceResolveEventArgs">
    <Properties>
      <Property Name="NamespaceName" Type="System.String" />
      <Property Name="ResolvedAssemblyFiles" Type="System.Collections.ObjectModel.Collection`1[System.String]" />
    </Properties>
    <Methods>
      <Method Name="get_NamespaceName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_ResolvedAssemblyFiles" Return_type="System.Collections.ObjectModel.Collection`1[System.String]">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Hosting.ApplicationActivator">
    <Properties />
    <Methods>
      <Method Name="CreateInstance" Return_type="System.Runtime.Remoting.ObjectHandle">
        <Parameters>
          <Parameter Name="activationContext" Type="System.ActivationContext" />
        </Parameters>
      </Method>
      <Method Name="CreateInstance" Return_type="System.Runtime.Remoting.ObjectHandle">
        <Parameters>
          <Parameter Name="activationContext" Type="System.ActivationContext" />
          <Parameter Name="activationCustomData" Type="System.String[]" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Runtime.Hosting.ActivationArguments">
    <Properties>
      <Property Name="ApplicationIdentity" Type="System.ApplicationIdentity" />
      <Property Name="ActivationContext" Type="System.ActivationContext" />
      <Property Name="ActivationData" Type="System.String[]" />
    </Properties>
    <Methods>
      <Method Name="get_ApplicationIdentity" Return_type="System.ApplicationIdentity">
        <Parameters />
      </Method>
      <Method Name="get_ActivationContext" Return_type="System.ActivationContext">
        <Parameters />
      </Method>
      <Method Name="get_ActivationData" Return_type="System.String[]">
        <Parameters />
      </Method>
      <Method Name="Clone" Return_type="System.Security.Policy.EvidenceBase">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Text.StringBuilder">
    <Properties>
      <Property Name="Capacity" Type="System.Int32" />
      <Property Name="MaxCapacity" Type="System.Int32" />
      <Property Name="Length" Type="System.Int32" />
      <Property Name="Chars" Type="System.Char" />
    </Properties>
    <Methods>
      <Method Name="get_Capacity" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_Capacity" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_MaxCapacity" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="EnsureCapacity" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="capacity" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="ToString" Return_type="System.String">
        <Parameters>
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="length" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Clear" Return_type="System.Text.StringBuilder">
        <Parameters />
      </Method>
      <Method Name="get_Length" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="set_Length" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_Chars" Return_type="System.Char">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="set_Chars" Return_type="System.Void">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="value" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="Append" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="value" Type="System.Char" />
          <Parameter Name="repeatCount" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Append" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="value" Type="System.Char[]" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="charCount" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Append" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Append" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="AppendLine" Return_type="System.Text.StringBuilder">
        <Parameters />
      </Method>
      <Method Name="AppendLine" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="CopyTo" Return_type="System.Void">
        <Parameters>
          <Parameter Name="sourceIndex" Type="System.Int32" />
          <Parameter Name="destination" Type="System.Char[]" />
          <Parameter Name="destinationIndex" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Insert" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="value" Type="System.String" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Remove" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="length" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Append" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="Append" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="value" Type="System.SByte" />
        </Parameters>
      </Method>
      <Method Name="Append" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="value" Type="System.Byte" />
        </Parameters>
      </Method>
      <Method Name="Append" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="value" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="Append" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="value" Type="System.Int16" />
        </Parameters>
      </Method>
      <Method Name="Append" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Append" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="Append" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="value" Type="System.Single" />
        </Parameters>
      </Method>
      <Method Name="Append" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="value" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="Append" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="value" Type="System.Decimal" />
        </Parameters>
      </Method>
      <Method Name="Append" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="value" Type="System.UInt16" />
        </Parameters>
      </Method>
      <Method Name="Append" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="value" Type="System.UInt32" />
        </Parameters>
      </Method>
      <Method Name="Append" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="value" Type="System.UInt64" />
        </Parameters>
      </Method>
      <Method Name="Append" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="Append" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="value" Type="System.Char[]" />
        </Parameters>
      </Method>
      <Method Name="Insert" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="value" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Insert" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="value" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="Insert" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="value" Type="System.SByte" />
        </Parameters>
      </Method>
      <Method Name="Insert" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="value" Type="System.Byte" />
        </Parameters>
      </Method>
      <Method Name="Insert" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="value" Type="System.Int16" />
        </Parameters>
      </Method>
      <Method Name="Insert" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="value" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="Insert" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="value" Type="System.Char[]" />
        </Parameters>
      </Method>
      <Method Name="Insert" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="value" Type="System.Char[]" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="charCount" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Insert" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="value" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Insert" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="value" Type="System.Int64" />
        </Parameters>
      </Method>
      <Method Name="Insert" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="value" Type="System.Single" />
        </Parameters>
      </Method>
      <Method Name="Insert" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="value" Type="System.Double" />
        </Parameters>
      </Method>
      <Method Name="Insert" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="value" Type="System.Decimal" />
        </Parameters>
      </Method>
      <Method Name="Insert" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="value" Type="System.UInt16" />
        </Parameters>
      </Method>
      <Method Name="Insert" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="value" Type="System.UInt32" />
        </Parameters>
      </Method>
      <Method Name="Insert" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="value" Type="System.UInt64" />
        </Parameters>
      </Method>
      <Method Name="Insert" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="AppendFormat" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="format" Type="System.String" />
          <Parameter Name="arg0" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="AppendFormat" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="format" Type="System.String" />
          <Parameter Name="arg0" Type="System.Object" />
          <Parameter Name="arg1" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="AppendFormat" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="format" Type="System.String" />
          <Parameter Name="arg0" Type="System.Object" />
          <Parameter Name="arg1" Type="System.Object" />
          <Parameter Name="arg2" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="AppendFormat" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="format" Type="System.String" />
          <Parameter Name="args" Type="System.Object[]" />
        </Parameters>
      </Method>
      <Method Name="AppendFormat" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="provider" Type="System.IFormatProvider" />
          <Parameter Name="format" Type="System.String" />
          <Parameter Name="arg0" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="AppendFormat" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="provider" Type="System.IFormatProvider" />
          <Parameter Name="format" Type="System.String" />
          <Parameter Name="arg0" Type="System.Object" />
          <Parameter Name="arg1" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="AppendFormat" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="provider" Type="System.IFormatProvider" />
          <Parameter Name="format" Type="System.String" />
          <Parameter Name="arg0" Type="System.Object" />
          <Parameter Name="arg1" Type="System.Object" />
          <Parameter Name="arg2" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="AppendFormat" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="provider" Type="System.IFormatProvider" />
          <Parameter Name="format" Type="System.String" />
          <Parameter Name="args" Type="System.Object[]" />
        </Parameters>
      </Method>
      <Method Name="Replace" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="oldValue" Type="System.String" />
          <Parameter Name="newValue" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="sb" Type="System.Text.StringBuilder" />
        </Parameters>
      </Method>
      <Method Name="Replace" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="oldValue" Type="System.String" />
          <Parameter Name="newValue" Type="System.String" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Replace" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="oldChar" Type="System.Char" />
          <Parameter Name="newChar" Type="System.Char" />
        </Parameters>
      </Method>
      <Method Name="Replace" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="oldChar" Type="System.Char" />
          <Parameter Name="newChar" Type="System.Char" />
          <Parameter Name="startIndex" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Append" Return_type="System.Text.StringBuilder">
        <Parameters>
          <Parameter Name="value" Type="System.Char*" />
          <Parameter Name="valueCount" Type="System.Int32" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Text.ASCIIEncoding">
    <Properties>
      <Property Name="IsSingleByte" Type="System.Boolean" />
      <Property Name="BodyName" Type="System.String" />
      <Property Name="EncodingName" Type="System.String" />
      <Property Name="HeaderName" Type="System.String" />
      <Property Name="WebName" Type="System.String" />
      <Property Name="WindowsCodePage" Type="System.Int32" />
      <Property Name="IsBrowserDisplay" Type="System.Boolean" />
      <Property Name="IsBrowserSave" Type="System.Boolean" />
      <Property Name="IsMailNewsDisplay" Type="System.Boolean" />
      <Property Name="IsMailNewsSave" Type="System.Boolean" />
      <Property Name="EncoderFallback" Type="System.Text.EncoderFallback" />
      <Property Name="DecoderFallback" Type="System.Text.DecoderFallback" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="CodePage" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="GetBytes" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.String" />
          <Parameter Name="charIndex" Type="System.Int32" />
          <Parameter Name="charCount" Type="System.Int32" />
          <Parameter Name="bytes" Type="System.Byte[]" />
          <Parameter Name="byteIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetString" Return_type="System.String">
        <Parameters>
          <Parameter Name="bytes" Type="System.Byte[]" />
          <Parameter Name="byteIndex" Type="System.Int32" />
          <Parameter Name="byteCount" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetByteCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Char[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetByteCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetByteCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Char*" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Char[]" />
          <Parameter Name="charIndex" Type="System.Int32" />
          <Parameter Name="charCount" Type="System.Int32" />
          <Parameter Name="bytes" Type="System.Byte[]" />
          <Parameter Name="byteIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Char*" />
          <Parameter Name="charCount" Type="System.Int32" />
          <Parameter Name="bytes" Type="System.Byte*" />
          <Parameter Name="byteCount" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetCharCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Byte[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetCharCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Byte*" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetChars" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Byte[]" />
          <Parameter Name="byteIndex" Type="System.Int32" />
          <Parameter Name="byteCount" Type="System.Int32" />
          <Parameter Name="chars" Type="System.Char[]" />
          <Parameter Name="charIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetChars" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Byte*" />
          <Parameter Name="byteCount" Type="System.Int32" />
          <Parameter Name="chars" Type="System.Char*" />
          <Parameter Name="charCount" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetMaxByteCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="charCount" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetMaxCharCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="byteCount" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_IsSingleByte" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="GetDecoder" Return_type="System.Text.Decoder">
        <Parameters />
      </Method>
      <Method Name="GetEncoder" Return_type="System.Text.Encoder">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Text.Decoder">
    <Properties>
      <Property Name="Fallback" Type="System.Text.DecoderFallback" />
      <Property Name="FallbackBuffer" Type="System.Text.DecoderFallbackBuffer" />
    </Properties>
    <Methods>
      <Method Name="get_Fallback" Return_type="System.Text.DecoderFallback">
        <Parameters />
      </Method>
      <Method Name="set_Fallback" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Text.DecoderFallback" />
        </Parameters>
      </Method>
      <Method Name="get_FallbackBuffer" Return_type="System.Text.DecoderFallbackBuffer">
        <Parameters />
      </Method>
      <Method Name="Reset" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="GetCharCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Byte[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetCharCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Byte[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
          <Parameter Name="flush" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetCharCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Byte*" />
          <Parameter Name="count" Type="System.Int32" />
          <Parameter Name="flush" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetChars" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Byte[]" />
          <Parameter Name="byteIndex" Type="System.Int32" />
          <Parameter Name="byteCount" Type="System.Int32" />
          <Parameter Name="chars" Type="System.Char[]" />
          <Parameter Name="charIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetChars" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Byte[]" />
          <Parameter Name="byteIndex" Type="System.Int32" />
          <Parameter Name="byteCount" Type="System.Int32" />
          <Parameter Name="chars" Type="System.Char[]" />
          <Parameter Name="charIndex" Type="System.Int32" />
          <Parameter Name="flush" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetChars" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Byte*" />
          <Parameter Name="byteCount" Type="System.Int32" />
          <Parameter Name="chars" Type="System.Char*" />
          <Parameter Name="charCount" Type="System.Int32" />
          <Parameter Name="flush" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="Convert" Return_type="System.Void">
        <Parameters>
          <Parameter Name="bytes" Type="System.Byte[]" />
          <Parameter Name="byteIndex" Type="System.Int32" />
          <Parameter Name="byteCount" Type="System.Int32" />
          <Parameter Name="chars" Type="System.Char[]" />
          <Parameter Name="charIndex" Type="System.Int32" />
          <Parameter Name="charCount" Type="System.Int32" />
          <Parameter Name="flush" Type="System.Boolean" />
          <Parameter Name="bytesUsed" Type="System.Int32&amp;" />
          <Parameter Name="charsUsed" Type="System.Int32&amp;" />
          <Parameter Name="completed" Type="System.Boolean&amp;" />
        </Parameters>
      </Method>
      <Method Name="Convert" Return_type="System.Void">
        <Parameters>
          <Parameter Name="bytes" Type="System.Byte*" />
          <Parameter Name="byteCount" Type="System.Int32" />
          <Parameter Name="chars" Type="System.Char*" />
          <Parameter Name="charCount" Type="System.Int32" />
          <Parameter Name="flush" Type="System.Boolean" />
          <Parameter Name="bytesUsed" Type="System.Int32&amp;" />
          <Parameter Name="charsUsed" Type="System.Int32&amp;" />
          <Parameter Name="completed" Type="System.Boolean&amp;" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Text.DecoderExceptionFallback">
    <Properties>
      <Property Name="MaxCharCount" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="CreateFallbackBuffer" Return_type="System.Text.DecoderFallbackBuffer">
        <Parameters />
      </Method>
      <Method Name="get_MaxCharCount" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Text.DecoderExceptionFallbackBuffer">
    <Properties>
      <Property Name="Remaining" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="Fallback" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="bytesUnknown" Type="System.Byte[]" />
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetNextChar" Return_type="System.Char">
        <Parameters />
      </Method>
      <Method Name="MovePrevious" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Remaining" Return_type="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Text.DecoderFallbackException">
    <Properties>
      <Property Name="BytesUnknown" Type="System.Byte[]" />
      <Property Name="Index" Type="System.Int32" />
      <Property Name="Message" Type="System.String" />
      <Property Name="ParamName" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_BytesUnknown" Return_type="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="get_Index" Return_type="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Text.DecoderFallback">
    <Properties>
      <Property Name="ReplacementFallback" Type="System.Text.DecoderFallback" />
      <Property Name="ExceptionFallback" Type="System.Text.DecoderFallback" />
      <Property Name="MaxCharCount" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_ReplacementFallback" Return_type="System.Text.DecoderFallback">
        <Parameters />
      </Method>
      <Method Name="get_ExceptionFallback" Return_type="System.Text.DecoderFallback">
        <Parameters />
      </Method>
      <Method Name="CreateFallbackBuffer" Return_type="System.Text.DecoderFallbackBuffer">
        <Parameters />
      </Method>
      <Method Name="get_MaxCharCount" Return_type="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Text.DecoderFallbackBuffer">
    <Properties>
      <Property Name="Remaining" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="Fallback" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="bytesUnknown" Type="System.Byte[]" />
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetNextChar" Return_type="System.Char">
        <Parameters />
      </Method>
      <Method Name="MovePrevious" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Remaining" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Reset" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Text.DecoderReplacementFallback">
    <Properties>
      <Property Name="DefaultString" Type="System.String" />
      <Property Name="MaxCharCount" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_DefaultString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="CreateFallbackBuffer" Return_type="System.Text.DecoderFallbackBuffer">
        <Parameters />
      </Method>
      <Method Name="get_MaxCharCount" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Text.DecoderReplacementFallbackBuffer">
    <Properties>
      <Property Name="Remaining" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="Fallback" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="bytesUnknown" Type="System.Byte[]" />
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetNextChar" Return_type="System.Char">
        <Parameters />
      </Method>
      <Method Name="MovePrevious" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Remaining" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Reset" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Text.Encoder">
    <Properties>
      <Property Name="Fallback" Type="System.Text.EncoderFallback" />
      <Property Name="FallbackBuffer" Type="System.Text.EncoderFallbackBuffer" />
    </Properties>
    <Methods>
      <Method Name="get_Fallback" Return_type="System.Text.EncoderFallback">
        <Parameters />
      </Method>
      <Method Name="set_Fallback" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Text.EncoderFallback" />
        </Parameters>
      </Method>
      <Method Name="get_FallbackBuffer" Return_type="System.Text.EncoderFallbackBuffer">
        <Parameters />
      </Method>
      <Method Name="Reset" Return_type="System.Void">
        <Parameters />
      </Method>
      <Method Name="GetByteCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Char[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
          <Parameter Name="flush" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetByteCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Char*" />
          <Parameter Name="count" Type="System.Int32" />
          <Parameter Name="flush" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Char[]" />
          <Parameter Name="charIndex" Type="System.Int32" />
          <Parameter Name="charCount" Type="System.Int32" />
          <Parameter Name="bytes" Type="System.Byte[]" />
          <Parameter Name="byteIndex" Type="System.Int32" />
          <Parameter Name="flush" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Char*" />
          <Parameter Name="charCount" Type="System.Int32" />
          <Parameter Name="bytes" Type="System.Byte*" />
          <Parameter Name="byteCount" Type="System.Int32" />
          <Parameter Name="flush" Type="System.Boolean" />
        </Parameters>
      </Method>
      <Method Name="Convert" Return_type="System.Void">
        <Parameters>
          <Parameter Name="chars" Type="System.Char[]" />
          <Parameter Name="charIndex" Type="System.Int32" />
          <Parameter Name="charCount" Type="System.Int32" />
          <Parameter Name="bytes" Type="System.Byte[]" />
          <Parameter Name="byteIndex" Type="System.Int32" />
          <Parameter Name="byteCount" Type="System.Int32" />
          <Parameter Name="flush" Type="System.Boolean" />
          <Parameter Name="charsUsed" Type="System.Int32&amp;" />
          <Parameter Name="bytesUsed" Type="System.Int32&amp;" />
          <Parameter Name="completed" Type="System.Boolean&amp;" />
        </Parameters>
      </Method>
      <Method Name="Convert" Return_type="System.Void">
        <Parameters>
          <Parameter Name="chars" Type="System.Char*" />
          <Parameter Name="charCount" Type="System.Int32" />
          <Parameter Name="bytes" Type="System.Byte*" />
          <Parameter Name="byteCount" Type="System.Int32" />
          <Parameter Name="flush" Type="System.Boolean" />
          <Parameter Name="charsUsed" Type="System.Int32&amp;" />
          <Parameter Name="bytesUsed" Type="System.Int32&amp;" />
          <Parameter Name="completed" Type="System.Boolean&amp;" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Text.EncoderExceptionFallback">
    <Properties>
      <Property Name="MaxCharCount" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="CreateFallbackBuffer" Return_type="System.Text.EncoderFallbackBuffer">
        <Parameters />
      </Method>
      <Method Name="get_MaxCharCount" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Text.EncoderExceptionFallbackBuffer">
    <Properties>
      <Property Name="Remaining" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="Fallback" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="charUnknown" Type="System.Char" />
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Fallback" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="charUnknownHigh" Type="System.Char" />
          <Parameter Name="charUnknownLow" Type="System.Char" />
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetNextChar" Return_type="System.Char">
        <Parameters />
      </Method>
      <Method Name="MovePrevious" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Remaining" Return_type="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Text.EncoderFallbackException">
    <Properties>
      <Property Name="CharUnknown" Type="System.Char" />
      <Property Name="CharUnknownHigh" Type="System.Char" />
      <Property Name="CharUnknownLow" Type="System.Char" />
      <Property Name="Index" Type="System.Int32" />
      <Property Name="Message" Type="System.String" />
      <Property Name="ParamName" Type="System.String" />
      <Property Name="Data" Type="System.Collections.IDictionary" />
      <Property Name="InnerException" Type="System.Exception" />
      <Property Name="TargetSite" Type="System.Reflection.MethodBase" />
      <Property Name="StackTrace" Type="System.String" />
      <Property Name="HelpLink" Type="System.String" />
      <Property Name="Source" Type="System.String" />
      <Property Name="HResult" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_CharUnknown" Return_type="System.Char">
        <Parameters />
      </Method>
      <Method Name="get_CharUnknownHigh" Return_type="System.Char">
        <Parameters />
      </Method>
      <Method Name="get_CharUnknownLow" Return_type="System.Char">
        <Parameters />
      </Method>
      <Method Name="get_Index" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="IsUnknownSurrogate" Return_type="System.Boolean">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Text.EncoderFallback">
    <Properties>
      <Property Name="ReplacementFallback" Type="System.Text.EncoderFallback" />
      <Property Name="ExceptionFallback" Type="System.Text.EncoderFallback" />
      <Property Name="MaxCharCount" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_ReplacementFallback" Return_type="System.Text.EncoderFallback">
        <Parameters />
      </Method>
      <Method Name="get_ExceptionFallback" Return_type="System.Text.EncoderFallback">
        <Parameters />
      </Method>
      <Method Name="CreateFallbackBuffer" Return_type="System.Text.EncoderFallbackBuffer">
        <Parameters />
      </Method>
      <Method Name="get_MaxCharCount" Return_type="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Text.EncoderFallbackBuffer">
    <Properties>
      <Property Name="Remaining" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="Fallback" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="charUnknown" Type="System.Char" />
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Fallback" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="charUnknownHigh" Type="System.Char" />
          <Parameter Name="charUnknownLow" Type="System.Char" />
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetNextChar" Return_type="System.Char">
        <Parameters />
      </Method>
      <Method Name="MovePrevious" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Remaining" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Reset" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Text.EncoderReplacementFallback">
    <Properties>
      <Property Name="DefaultString" Type="System.String" />
      <Property Name="MaxCharCount" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="get_DefaultString" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="CreateFallbackBuffer" Return_type="System.Text.EncoderFallbackBuffer">
        <Parameters />
      </Method>
      <Method Name="get_MaxCharCount" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Text.EncoderReplacementFallbackBuffer">
    <Properties>
      <Property Name="Remaining" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="Fallback" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="charUnknown" Type="System.Char" />
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Fallback" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="charUnknownHigh" Type="System.Char" />
          <Parameter Name="charUnknownLow" Type="System.Char" />
          <Parameter Name="index" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetNextChar" Return_type="System.Char">
        <Parameters />
      </Method>
      <Method Name="MovePrevious" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_Remaining" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="Reset" Return_type="System.Void">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Text.Encoding">
    <Properties>
      <Property Name="BodyName" Type="System.String" />
      <Property Name="EncodingName" Type="System.String" />
      <Property Name="HeaderName" Type="System.String" />
      <Property Name="WebName" Type="System.String" />
      <Property Name="WindowsCodePage" Type="System.Int32" />
      <Property Name="IsBrowserDisplay" Type="System.Boolean" />
      <Property Name="IsBrowserSave" Type="System.Boolean" />
      <Property Name="IsMailNewsDisplay" Type="System.Boolean" />
      <Property Name="IsMailNewsSave" Type="System.Boolean" />
      <Property Name="IsSingleByte" Type="System.Boolean" />
      <Property Name="EncoderFallback" Type="System.Text.EncoderFallback" />
      <Property Name="DecoderFallback" Type="System.Text.DecoderFallback" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="ASCII" Type="System.Text.Encoding" />
      <Property Name="CodePage" Type="System.Int32" />
      <Property Name="Default" Type="System.Text.Encoding" />
      <Property Name="Unicode" Type="System.Text.Encoding" />
      <Property Name="BigEndianUnicode" Type="System.Text.Encoding" />
      <Property Name="UTF7" Type="System.Text.Encoding" />
      <Property Name="UTF8" Type="System.Text.Encoding" />
      <Property Name="UTF32" Type="System.Text.Encoding" />
    </Properties>
    <Methods>
      <Method Name="Convert" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="srcEncoding" Type="System.Text.Encoding" />
          <Parameter Name="dstEncoding" Type="System.Text.Encoding" />
          <Parameter Name="bytes" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="Convert" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="srcEncoding" Type="System.Text.Encoding" />
          <Parameter Name="dstEncoding" Type="System.Text.Encoding" />
          <Parameter Name="bytes" Type="System.Byte[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="RegisterProvider" Return_type="System.Void">
        <Parameters>
          <Parameter Name="provider" Type="System.Text.EncodingProvider" />
        </Parameters>
      </Method>
      <Method Name="GetEncoding" Return_type="System.Text.Encoding">
        <Parameters>
          <Parameter Name="codepage" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetEncoding" Return_type="System.Text.Encoding">
        <Parameters>
          <Parameter Name="codepage" Type="System.Int32" />
          <Parameter Name="encoderFallback" Type="System.Text.EncoderFallback" />
          <Parameter Name="decoderFallback" Type="System.Text.DecoderFallback" />
        </Parameters>
      </Method>
      <Method Name="GetEncoding" Return_type="System.Text.Encoding">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetEncoding" Return_type="System.Text.Encoding">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="encoderFallback" Type="System.Text.EncoderFallback" />
          <Parameter Name="decoderFallback" Type="System.Text.DecoderFallback" />
        </Parameters>
      </Method>
      <Method Name="GetEncodings" Return_type="System.Text.EncodingInfo[]">
        <Parameters />
      </Method>
      <Method Name="GetPreamble" Return_type="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="get_BodyName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_EncodingName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_HeaderName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_WebName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_WindowsCodePage" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_IsBrowserDisplay" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsBrowserSave" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsMailNewsDisplay" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsMailNewsSave" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_IsSingleByte" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_EncoderFallback" Return_type="System.Text.EncoderFallback">
        <Parameters />
      </Method>
      <Method Name="set_EncoderFallback" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Text.EncoderFallback" />
        </Parameters>
      </Method>
      <Method Name="get_DecoderFallback" Return_type="System.Text.DecoderFallback">
        <Parameters />
      </Method>
      <Method Name="set_DecoderFallback" Return_type="System.Void">
        <Parameters>
          <Parameter Name="value" Type="System.Text.DecoderFallback" />
        </Parameters>
      </Method>
      <Method Name="Clone" Return_type="System.Object">
        <Parameters />
      </Method>
      <Method Name="get_IsReadOnly" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="get_ASCII" Return_type="System.Text.Encoding">
        <Parameters />
      </Method>
      <Method Name="GetByteCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Char[]" />
        </Parameters>
      </Method>
      <Method Name="GetByteCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="s" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetByteCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Char[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetByteCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Char*" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="chars" Type="System.Char[]" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="chars" Type="System.Char[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Char[]" />
          <Parameter Name="charIndex" Type="System.Int32" />
          <Parameter Name="charCount" Type="System.Int32" />
          <Parameter Name="bytes" Type="System.Byte[]" />
          <Parameter Name="byteIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" Return_type="System.Byte[]">
        <Parameters>
          <Parameter Name="s" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="s" Type="System.String" />
          <Parameter Name="charIndex" Type="System.Int32" />
          <Parameter Name="charCount" Type="System.Int32" />
          <Parameter Name="bytes" Type="System.Byte[]" />
          <Parameter Name="byteIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Char*" />
          <Parameter Name="charCount" Type="System.Int32" />
          <Parameter Name="bytes" Type="System.Byte*" />
          <Parameter Name="byteCount" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetCharCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="GetCharCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Byte[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetCharCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Byte*" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetChars" Return_type="System.Char[]">
        <Parameters>
          <Parameter Name="bytes" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="GetChars" Return_type="System.Char[]">
        <Parameters>
          <Parameter Name="bytes" Type="System.Byte[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetChars" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Byte[]" />
          <Parameter Name="byteIndex" Type="System.Int32" />
          <Parameter Name="byteCount" Type="System.Int32" />
          <Parameter Name="chars" Type="System.Char[]" />
          <Parameter Name="charIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetChars" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Byte*" />
          <Parameter Name="byteCount" Type="System.Int32" />
          <Parameter Name="chars" Type="System.Char*" />
          <Parameter Name="charCount" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetString" Return_type="System.String">
        <Parameters>
          <Parameter Name="bytes" Type="System.Byte*" />
          <Parameter Name="byteCount" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_CodePage" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="IsAlwaysNormalized" Return_type="System.Boolean">
        <Parameters />
      </Method>
      <Method Name="IsAlwaysNormalized" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="form" Type="System.Text.NormalizationForm" />
        </Parameters>
      </Method>
      <Method Name="GetDecoder" Return_type="System.Text.Decoder">
        <Parameters />
      </Method>
      <Method Name="get_Default" Return_type="System.Text.Encoding">
        <Parameters />
      </Method>
      <Method Name="GetEncoder" Return_type="System.Text.Encoder">
        <Parameters />
      </Method>
      <Method Name="GetMaxByteCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="charCount" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetMaxCharCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="byteCount" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetString" Return_type="System.String">
        <Parameters>
          <Parameter Name="bytes" Type="System.Byte[]" />
        </Parameters>
      </Method>
      <Method Name="GetString" Return_type="System.String">
        <Parameters>
          <Parameter Name="bytes" Type="System.Byte[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="get_Unicode" Return_type="System.Text.Encoding">
        <Parameters />
      </Method>
      <Method Name="get_BigEndianUnicode" Return_type="System.Text.Encoding">
        <Parameters />
      </Method>
      <Method Name="get_UTF7" Return_type="System.Text.Encoding">
        <Parameters />
      </Method>
      <Method Name="get_UTF8" Return_type="System.Text.Encoding">
        <Parameters />
      </Method>
      <Method Name="get_UTF32" Return_type="System.Text.Encoding">
        <Parameters />
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Text.EncodingInfo">
    <Properties>
      <Property Name="CodePage" Type="System.Int32" />
      <Property Name="Name" Type="System.String" />
      <Property Name="DisplayName" Type="System.String" />
    </Properties>
    <Methods>
      <Method Name="get_CodePage" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="get_Name" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="get_DisplayName" Return_type="System.String">
        <Parameters />
      </Method>
      <Method Name="GetEncoding" Return_type="System.Text.Encoding">
        <Parameters />
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Text.EncodingProvider">
    <Properties />
    <Methods>
      <Method Name="GetEncoding" Return_type="System.Text.Encoding">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetEncoding" Return_type="System.Text.Encoding">
        <Parameters>
          <Parameter Name="codepage" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetEncoding" Return_type="System.Text.Encoding">
        <Parameters>
          <Parameter Name="name" Type="System.String" />
          <Parameter Name="encoderFallback" Type="System.Text.EncoderFallback" />
          <Parameter Name="decoderFallback" Type="System.Text.DecoderFallback" />
        </Parameters>
      </Method>
      <Method Name="GetEncoding" Return_type="System.Text.Encoding">
        <Parameters>
          <Parameter Name="codepage" Type="System.Int32" />
          <Parameter Name="encoderFallback" Type="System.Text.EncoderFallback" />
          <Parameter Name="decoderFallback" Type="System.Text.DecoderFallback" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Text.UnicodeEncoding">
    <Properties>
      <Property Name="BodyName" Type="System.String" />
      <Property Name="EncodingName" Type="System.String" />
      <Property Name="HeaderName" Type="System.String" />
      <Property Name="WebName" Type="System.String" />
      <Property Name="WindowsCodePage" Type="System.Int32" />
      <Property Name="IsBrowserDisplay" Type="System.Boolean" />
      <Property Name="IsBrowserSave" Type="System.Boolean" />
      <Property Name="IsMailNewsDisplay" Type="System.Boolean" />
      <Property Name="IsMailNewsSave" Type="System.Boolean" />
      <Property Name="IsSingleByte" Type="System.Boolean" />
      <Property Name="EncoderFallback" Type="System.Text.EncoderFallback" />
      <Property Name="DecoderFallback" Type="System.Text.DecoderFallback" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="CodePage" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="GetByteCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Char[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetByteCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="s" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetByteCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Char*" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="s" Type="System.String" />
          <Parameter Name="charIndex" Type="System.Int32" />
          <Parameter Name="charCount" Type="System.Int32" />
          <Parameter Name="bytes" Type="System.Byte[]" />
          <Parameter Name="byteIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Char[]" />
          <Parameter Name="charIndex" Type="System.Int32" />
          <Parameter Name="charCount" Type="System.Int32" />
          <Parameter Name="bytes" Type="System.Byte[]" />
          <Parameter Name="byteIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Char*" />
          <Parameter Name="charCount" Type="System.Int32" />
          <Parameter Name="bytes" Type="System.Byte*" />
          <Parameter Name="byteCount" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetCharCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Byte[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetCharCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Byte*" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetChars" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Byte[]" />
          <Parameter Name="byteIndex" Type="System.Int32" />
          <Parameter Name="byteCount" Type="System.Int32" />
          <Parameter Name="chars" Type="System.Char[]" />
          <Parameter Name="charIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetChars" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Byte*" />
          <Parameter Name="byteCount" Type="System.Int32" />
          <Parameter Name="chars" Type="System.Char*" />
          <Parameter Name="charCount" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetString" Return_type="System.String">
        <Parameters>
          <Parameter Name="bytes" Type="System.Byte[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetEncoder" Return_type="System.Text.Encoder">
        <Parameters />
      </Method>
      <Method Name="GetDecoder" Return_type="System.Text.Decoder">
        <Parameters />
      </Method>
      <Method Name="GetPreamble" Return_type="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="GetMaxByteCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="charCount" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetMaxCharCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="byteCount" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Text.UTF7Encoding">
    <Properties>
      <Property Name="BodyName" Type="System.String" />
      <Property Name="EncodingName" Type="System.String" />
      <Property Name="HeaderName" Type="System.String" />
      <Property Name="WebName" Type="System.String" />
      <Property Name="WindowsCodePage" Type="System.Int32" />
      <Property Name="IsBrowserDisplay" Type="System.Boolean" />
      <Property Name="IsBrowserSave" Type="System.Boolean" />
      <Property Name="IsMailNewsDisplay" Type="System.Boolean" />
      <Property Name="IsMailNewsSave" Type="System.Boolean" />
      <Property Name="IsSingleByte" Type="System.Boolean" />
      <Property Name="EncoderFallback" Type="System.Text.EncoderFallback" />
      <Property Name="DecoderFallback" Type="System.Text.DecoderFallback" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="CodePage" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
      <Method Name="GetByteCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Char[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetByteCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="s" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetByteCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Char*" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="s" Type="System.String" />
          <Parameter Name="charIndex" Type="System.Int32" />
          <Parameter Name="charCount" Type="System.Int32" />
          <Parameter Name="bytes" Type="System.Byte[]" />
          <Parameter Name="byteIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Char[]" />
          <Parameter Name="charIndex" Type="System.Int32" />
          <Parameter Name="charCount" Type="System.Int32" />
          <Parameter Name="bytes" Type="System.Byte[]" />
          <Parameter Name="byteIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Char*" />
          <Parameter Name="charCount" Type="System.Int32" />
          <Parameter Name="bytes" Type="System.Byte*" />
          <Parameter Name="byteCount" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetCharCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Byte[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetCharCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Byte*" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetChars" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Byte[]" />
          <Parameter Name="byteIndex" Type="System.Int32" />
          <Parameter Name="byteCount" Type="System.Int32" />
          <Parameter Name="chars" Type="System.Char[]" />
          <Parameter Name="charIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetChars" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Byte*" />
          <Parameter Name="byteCount" Type="System.Int32" />
          <Parameter Name="chars" Type="System.Char*" />
          <Parameter Name="charCount" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetString" Return_type="System.String">
        <Parameters>
          <Parameter Name="bytes" Type="System.Byte[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetDecoder" Return_type="System.Text.Decoder">
        <Parameters />
      </Method>
      <Method Name="GetEncoder" Return_type="System.Text.Encoder">
        <Parameters />
      </Method>
      <Method Name="GetMaxByteCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="charCount" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetMaxCharCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="byteCount" Type="System.Int32" />
        </Parameters>
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Text.UTF8Encoding">
    <Properties>
      <Property Name="BodyName" Type="System.String" />
      <Property Name="EncodingName" Type="System.String" />
      <Property Name="HeaderName" Type="System.String" />
      <Property Name="WebName" Type="System.String" />
      <Property Name="WindowsCodePage" Type="System.Int32" />
      <Property Name="IsBrowserDisplay" Type="System.Boolean" />
      <Property Name="IsBrowserSave" Type="System.Boolean" />
      <Property Name="IsMailNewsDisplay" Type="System.Boolean" />
      <Property Name="IsMailNewsSave" Type="System.Boolean" />
      <Property Name="IsSingleByte" Type="System.Boolean" />
      <Property Name="EncoderFallback" Type="System.Text.EncoderFallback" />
      <Property Name="DecoderFallback" Type="System.Text.DecoderFallback" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="CodePage" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="GetByteCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Char[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetByteCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetByteCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Char*" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="s" Type="System.String" />
          <Parameter Name="charIndex" Type="System.Int32" />
          <Parameter Name="charCount" Type="System.Int32" />
          <Parameter Name="bytes" Type="System.Byte[]" />
          <Parameter Name="byteIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Char[]" />
          <Parameter Name="charIndex" Type="System.Int32" />
          <Parameter Name="charCount" Type="System.Int32" />
          <Parameter Name="bytes" Type="System.Byte[]" />
          <Parameter Name="byteIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Char*" />
          <Parameter Name="charCount" Type="System.Int32" />
          <Parameter Name="bytes" Type="System.Byte*" />
          <Parameter Name="byteCount" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetCharCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Byte[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetCharCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Byte*" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetChars" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Byte[]" />
          <Parameter Name="byteIndex" Type="System.Int32" />
          <Parameter Name="byteCount" Type="System.Int32" />
          <Parameter Name="chars" Type="System.Char[]" />
          <Parameter Name="charIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetChars" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Byte*" />
          <Parameter Name="byteCount" Type="System.Int32" />
          <Parameter Name="chars" Type="System.Char*" />
          <Parameter Name="charCount" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetString" Return_type="System.String">
        <Parameters>
          <Parameter Name="bytes" Type="System.Byte[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetDecoder" Return_type="System.Text.Decoder">
        <Parameters />
      </Method>
      <Method Name="GetEncoder" Return_type="System.Text.Encoder">
        <Parameters />
      </Method>
      <Method Name="GetMaxByteCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="charCount" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetMaxCharCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="byteCount" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetPreamble" Return_type="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
  <Type Full_Name="System.Text.UTF32Encoding">
    <Properties>
      <Property Name="BodyName" Type="System.String" />
      <Property Name="EncodingName" Type="System.String" />
      <Property Name="HeaderName" Type="System.String" />
      <Property Name="WebName" Type="System.String" />
      <Property Name="WindowsCodePage" Type="System.Int32" />
      <Property Name="IsBrowserDisplay" Type="System.Boolean" />
      <Property Name="IsBrowserSave" Type="System.Boolean" />
      <Property Name="IsMailNewsDisplay" Type="System.Boolean" />
      <Property Name="IsMailNewsSave" Type="System.Boolean" />
      <Property Name="IsSingleByte" Type="System.Boolean" />
      <Property Name="EncoderFallback" Type="System.Text.EncoderFallback" />
      <Property Name="DecoderFallback" Type="System.Text.DecoderFallback" />
      <Property Name="IsReadOnly" Type="System.Boolean" />
      <Property Name="CodePage" Type="System.Int32" />
    </Properties>
    <Methods>
      <Method Name="GetByteCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Char[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetByteCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="s" Type="System.String" />
        </Parameters>
      </Method>
      <Method Name="GetByteCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Char*" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="s" Type="System.String" />
          <Parameter Name="charIndex" Type="System.Int32" />
          <Parameter Name="charCount" Type="System.Int32" />
          <Parameter Name="bytes" Type="System.Byte[]" />
          <Parameter Name="byteIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Char[]" />
          <Parameter Name="charIndex" Type="System.Int32" />
          <Parameter Name="charCount" Type="System.Int32" />
          <Parameter Name="bytes" Type="System.Byte[]" />
          <Parameter Name="byteIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetBytes" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="chars" Type="System.Char*" />
          <Parameter Name="charCount" Type="System.Int32" />
          <Parameter Name="bytes" Type="System.Byte*" />
          <Parameter Name="byteCount" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetCharCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Byte[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetCharCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Byte*" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetChars" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Byte[]" />
          <Parameter Name="byteIndex" Type="System.Int32" />
          <Parameter Name="byteCount" Type="System.Int32" />
          <Parameter Name="chars" Type="System.Char[]" />
          <Parameter Name="charIndex" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetChars" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="bytes" Type="System.Byte*" />
          <Parameter Name="byteCount" Type="System.Int32" />
          <Parameter Name="chars" Type="System.Char*" />
          <Parameter Name="charCount" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetString" Return_type="System.String">
        <Parameters>
          <Parameter Name="bytes" Type="System.Byte[]" />
          <Parameter Name="index" Type="System.Int32" />
          <Parameter Name="count" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetDecoder" Return_type="System.Text.Decoder">
        <Parameters />
      </Method>
      <Method Name="GetEncoder" Return_type="System.Text.Encoder">
        <Parameters />
      </Method>
      <Method Name="GetMaxByteCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="charCount" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetMaxCharCount" Return_type="System.Int32">
        <Parameters>
          <Parameter Name="byteCount" Type="System.Int32" />
        </Parameters>
      </Method>
      <Method Name="GetPreamble" Return_type="System.Byte[]">
        <Parameters />
      </Method>
      <Method Name="Equals" Return_type="System.Boolean">
        <Parameters>
          <Parameter Name="value" Type="System.Object" />
        </Parameters>
      </Method>
      <Method Name="GetHashCode" Return_type="System.Int32">
        <Parameters />
      </Method>
    </Methods>
  </Type>
</mscorlib>